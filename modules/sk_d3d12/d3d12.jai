// MIT License

// Copyright (c) 2022 Hamad Almamari (hamad-r)

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// d3d12 (SDK v10.0.18362.0) Generated by jaicc.
// - macros ported manually. (only which we care about)

// - types renamed manually (in order):
// - search for ": xxx" , "] xxx" and "-> xxx"
// - BYTE -> u8
// - FLOAT -> float32
// - enum s32 -> enum u32
// - UINT64 -> u64
// - UINT16 -> u16
// - UINT8 -> u8
// - UINT -> u32
// - INT -> s32
// - WCHAR -> u16
// - fixed size arrays in proc calls -> pointer of fixed array.
// - *s8 -> *u8
// - _FLAGS :: enum u32 -> _FLAGS :: enum_flags u32

//### from d3dcommon.h

using D3D_DRIVER_TYPE :: enum u32 {
    D3D_DRIVER_TYPE_UNKNOWN :: 0;
    D3D_DRIVER_TYPE_HARDWARE :: 1;
    D3D_DRIVER_TYPE_REFERENCE :: 2;
    D3D_DRIVER_TYPE_NULL :: 3;
    D3D_DRIVER_TYPE_SOFTWARE :: 4;
    D3D_DRIVER_TYPE_WARP :: 5;
}

using D3D_FEATURE_LEVEL :: enum u32 {
    D3D_FEATURE_LEVEL_1_0_CORE :: 4096;
    D3D_FEATURE_LEVEL_9_1  :: 37120;
    D3D_FEATURE_LEVEL_9_2  :: 37376;
    D3D_FEATURE_LEVEL_9_3  :: 37632;
    D3D_FEATURE_LEVEL_10_0 :: 40960;
    D3D_FEATURE_LEVEL_10_1 :: 41216;
    D3D_FEATURE_LEVEL_11_0 :: 45056;
    D3D_FEATURE_LEVEL_11_1 :: 45312;
    D3D_FEATURE_LEVEL_12_0 :: 49152;
    D3D_FEATURE_LEVEL_12_1 :: 49408;
}

using D3D_PRIMITIVE_TOPOLOGY :: enum u32 {
    D3D_PRIMITIVE_TOPOLOGY_UNDEFINED :: 0;
    D3D_PRIMITIVE_TOPOLOGY_POINTLIST :: 1;
    D3D_PRIMITIVE_TOPOLOGY_LINELIST :: 2;
    D3D_PRIMITIVE_TOPOLOGY_LINESTRIP :: 3;
    D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST :: 4;
    D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP :: 5;
    D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ :: 10;
    D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ :: 11;
    D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ :: 12;
    D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ :: 13;
    D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST :: 33;
    D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST :: 34;
    D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST :: 35;
    D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST :: 36;
    D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST :: 37;
    D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST :: 38;
    D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST :: 39;
    D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST :: 40;
    D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST :: 41;
    D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST :: 42;
    D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST :: 43;
    D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST :: 44;
    D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST :: 45;
    D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST :: 46;
    D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST :: 47;
    D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST :: 48;
    D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST :: 49;
    D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST :: 50;
    D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST :: 51;
    D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST :: 52;
    D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST :: 53;
    D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST :: 54;
    D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST :: 55;
    D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST :: 56;
    D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST :: 57;
    D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST :: 58;
    D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST :: 59;
    D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST :: 60;
    D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST :: 61;
    D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST :: 62;
    D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST :: 63;
    D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST :: 64;
    D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED :: 0;
    D3D10_PRIMITIVE_TOPOLOGY_POINTLIST :: 1;
    D3D10_PRIMITIVE_TOPOLOGY_LINELIST :: 2;
    D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP :: 3;
    D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST :: 4;
    D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP :: 5;
    D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ :: 10;
    D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ :: 11;
    D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ :: 12;
    D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ :: 13;
    D3D11_PRIMITIVE_TOPOLOGY_UNDEFINED :: 0;
    D3D11_PRIMITIVE_TOPOLOGY_POINTLIST :: 1;
    D3D11_PRIMITIVE_TOPOLOGY_LINELIST :: 2;
    D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP :: 3;
    D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST :: 4;
    D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP :: 5;
    D3D11_PRIMITIVE_TOPOLOGY_LINELIST_ADJ :: 10;
    D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ :: 11;
    D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ :: 12;
    D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ :: 13;
    D3D11_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST :: 33;
    D3D11_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST :: 34;
    D3D11_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST :: 35;
    D3D11_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST :: 36;
    D3D11_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST :: 37;
    D3D11_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST :: 38;
    D3D11_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST :: 39;
    D3D11_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST :: 40;
    D3D11_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST :: 41;
    D3D11_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST :: 42;
    D3D11_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST :: 43;
    D3D11_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST :: 44;
    D3D11_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST :: 45;
    D3D11_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST :: 46;
    D3D11_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST :: 47;
    D3D11_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST :: 48;
    D3D11_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST :: 49;
    D3D11_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST :: 50;
    D3D11_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST :: 51;
    D3D11_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST :: 52;
    D3D11_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST :: 53;
    D3D11_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST :: 54;
    D3D11_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST :: 55;
    D3D11_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST :: 56;
    D3D11_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST :: 57;
    D3D11_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST :: 58;
    D3D11_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST :: 59;
    D3D11_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST :: 60;
    D3D11_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST :: 61;
    D3D11_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST :: 62;
    D3D11_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST :: 63;
    D3D11_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST :: 64;
}

using D3D_PRIMITIVE :: enum u32 {
    D3D_PRIMITIVE_UNDEFINED :: 0;
    D3D_PRIMITIVE_POINT :: 1;
    D3D_PRIMITIVE_LINE :: 2;
    D3D_PRIMITIVE_TRIANGLE :: 3;
    D3D_PRIMITIVE_LINE_ADJ :: 6;
    D3D_PRIMITIVE_TRIANGLE_ADJ :: 7;
    D3D_PRIMITIVE_1_CONTROL_POINT_PATCH :: 8;
    D3D_PRIMITIVE_2_CONTROL_POINT_PATCH :: 9;
    D3D_PRIMITIVE_3_CONTROL_POINT_PATCH :: 10;
    D3D_PRIMITIVE_4_CONTROL_POINT_PATCH :: 11;
    D3D_PRIMITIVE_5_CONTROL_POINT_PATCH :: 12;
    D3D_PRIMITIVE_6_CONTROL_POINT_PATCH :: 13;
    D3D_PRIMITIVE_7_CONTROL_POINT_PATCH :: 14;
    D3D_PRIMITIVE_8_CONTROL_POINT_PATCH :: 15;
    D3D_PRIMITIVE_9_CONTROL_POINT_PATCH :: 16;
    D3D_PRIMITIVE_10_CONTROL_POINT_PATCH :: 17;
    D3D_PRIMITIVE_11_CONTROL_POINT_PATCH :: 18;
    D3D_PRIMITIVE_12_CONTROL_POINT_PATCH :: 19;
    D3D_PRIMITIVE_13_CONTROL_POINT_PATCH :: 20;
    D3D_PRIMITIVE_14_CONTROL_POINT_PATCH :: 21;
    D3D_PRIMITIVE_15_CONTROL_POINT_PATCH :: 22;
    D3D_PRIMITIVE_16_CONTROL_POINT_PATCH :: 23;
    D3D_PRIMITIVE_17_CONTROL_POINT_PATCH :: 24;
    D3D_PRIMITIVE_18_CONTROL_POINT_PATCH :: 25;
    D3D_PRIMITIVE_19_CONTROL_POINT_PATCH :: 26;
    D3D_PRIMITIVE_20_CONTROL_POINT_PATCH :: 27;
    D3D_PRIMITIVE_21_CONTROL_POINT_PATCH :: 28;
    D3D_PRIMITIVE_22_CONTROL_POINT_PATCH :: 29;
    D3D_PRIMITIVE_23_CONTROL_POINT_PATCH :: 30;
    D3D_PRIMITIVE_24_CONTROL_POINT_PATCH :: 31;
    D3D_PRIMITIVE_25_CONTROL_POINT_PATCH :: 32;
    D3D_PRIMITIVE_26_CONTROL_POINT_PATCH :: 33;
    D3D_PRIMITIVE_27_CONTROL_POINT_PATCH :: 34;
    D3D_PRIMITIVE_28_CONTROL_POINT_PATCH :: 35;
    D3D_PRIMITIVE_29_CONTROL_POINT_PATCH :: 36;
    D3D_PRIMITIVE_30_CONTROL_POINT_PATCH :: 37;
    D3D_PRIMITIVE_31_CONTROL_POINT_PATCH :: 38;
    D3D_PRIMITIVE_32_CONTROL_POINT_PATCH :: 39;
    D3D10_PRIMITIVE_UNDEFINED :: 0;
    D3D10_PRIMITIVE_POINT :: 1;
    D3D10_PRIMITIVE_LINE :: 2;
    D3D10_PRIMITIVE_TRIANGLE :: 3;
    D3D10_PRIMITIVE_LINE_ADJ :: 6;
    D3D10_PRIMITIVE_TRIANGLE_ADJ :: 7;
    D3D11_PRIMITIVE_UNDEFINED :: 0;
    D3D11_PRIMITIVE_POINT :: 1;
    D3D11_PRIMITIVE_LINE :: 2;
    D3D11_PRIMITIVE_TRIANGLE :: 3;
    D3D11_PRIMITIVE_LINE_ADJ :: 6;
    D3D11_PRIMITIVE_TRIANGLE_ADJ :: 7;
    D3D11_PRIMITIVE_1_CONTROL_POINT_PATCH :: 8;
    D3D11_PRIMITIVE_2_CONTROL_POINT_PATCH :: 9;
    D3D11_PRIMITIVE_3_CONTROL_POINT_PATCH :: 10;
    D3D11_PRIMITIVE_4_CONTROL_POINT_PATCH :: 11;
    D3D11_PRIMITIVE_5_CONTROL_POINT_PATCH :: 12;
    D3D11_PRIMITIVE_6_CONTROL_POINT_PATCH :: 13;
    D3D11_PRIMITIVE_7_CONTROL_POINT_PATCH :: 14;
    D3D11_PRIMITIVE_8_CONTROL_POINT_PATCH :: 15;
    D3D11_PRIMITIVE_9_CONTROL_POINT_PATCH :: 16;
    D3D11_PRIMITIVE_10_CONTROL_POINT_PATCH :: 17;
    D3D11_PRIMITIVE_11_CONTROL_POINT_PATCH :: 18;
    D3D11_PRIMITIVE_12_CONTROL_POINT_PATCH :: 19;
    D3D11_PRIMITIVE_13_CONTROL_POINT_PATCH :: 20;
    D3D11_PRIMITIVE_14_CONTROL_POINT_PATCH :: 21;
    D3D11_PRIMITIVE_15_CONTROL_POINT_PATCH :: 22;
    D3D11_PRIMITIVE_16_CONTROL_POINT_PATCH :: 23;
    D3D11_PRIMITIVE_17_CONTROL_POINT_PATCH :: 24;
    D3D11_PRIMITIVE_18_CONTROL_POINT_PATCH :: 25;
    D3D11_PRIMITIVE_19_CONTROL_POINT_PATCH :: 26;
    D3D11_PRIMITIVE_20_CONTROL_POINT_PATCH :: 27;
    D3D11_PRIMITIVE_21_CONTROL_POINT_PATCH :: 28;
    D3D11_PRIMITIVE_22_CONTROL_POINT_PATCH :: 29;
    D3D11_PRIMITIVE_23_CONTROL_POINT_PATCH :: 30;
    D3D11_PRIMITIVE_24_CONTROL_POINT_PATCH :: 31;
    D3D11_PRIMITIVE_25_CONTROL_POINT_PATCH :: 32;
    D3D11_PRIMITIVE_26_CONTROL_POINT_PATCH :: 33;
    D3D11_PRIMITIVE_27_CONTROL_POINT_PATCH :: 34;
    D3D11_PRIMITIVE_28_CONTROL_POINT_PATCH :: 35;
    D3D11_PRIMITIVE_29_CONTROL_POINT_PATCH :: 36;
    D3D11_PRIMITIVE_30_CONTROL_POINT_PATCH :: 37;
    D3D11_PRIMITIVE_31_CONTROL_POINT_PATCH :: 38;
    D3D11_PRIMITIVE_32_CONTROL_POINT_PATCH :: 39;
}

using D3D_SRV_DIMENSION :: enum u32 {
    D3D_SRV_DIMENSION_UNKNOWN :: 0;
    D3D_SRV_DIMENSION_BUFFER :: 1;
    D3D_SRV_DIMENSION_TEXTURE1D :: 2;
    D3D_SRV_DIMENSION_TEXTURE1DARRAY :: 3;
    D3D_SRV_DIMENSION_TEXTURE2D :: 4;
    D3D_SRV_DIMENSION_TEXTURE2DARRAY :: 5;
    D3D_SRV_DIMENSION_TEXTURE2DMS :: 6;
    D3D_SRV_DIMENSION_TEXTURE2DMSARRAY :: 7;
    D3D_SRV_DIMENSION_TEXTURE3D :: 8;
    D3D_SRV_DIMENSION_TEXTURECUBE :: 9;
    D3D_SRV_DIMENSION_TEXTURECUBEARRAY :: 10;
    D3D_SRV_DIMENSION_BUFFEREX :: 11;
    D3D10_SRV_DIMENSION_UNKNOWN :: 0;
    D3D10_SRV_DIMENSION_BUFFER :: 1;
    D3D10_SRV_DIMENSION_TEXTURE1D :: 2;
    D3D10_SRV_DIMENSION_TEXTURE1DARRAY :: 3;
    D3D10_SRV_DIMENSION_TEXTURE2D :: 4;
    D3D10_SRV_DIMENSION_TEXTURE2DARRAY :: 5;
    D3D10_SRV_DIMENSION_TEXTURE2DMS :: 6;
    D3D10_SRV_DIMENSION_TEXTURE2DMSARRAY :: 7;
    D3D10_SRV_DIMENSION_TEXTURE3D :: 8;
    D3D10_SRV_DIMENSION_TEXTURECUBE :: 9;
    D3D10_1_SRV_DIMENSION_UNKNOWN :: 0;
    D3D10_1_SRV_DIMENSION_BUFFER :: 1;
    D3D10_1_SRV_DIMENSION_TEXTURE1D :: 2;
    D3D10_1_SRV_DIMENSION_TEXTURE1DARRAY :: 3;
    D3D10_1_SRV_DIMENSION_TEXTURE2D :: 4;
    D3D10_1_SRV_DIMENSION_TEXTURE2DARRAY :: 5;
    D3D10_1_SRV_DIMENSION_TEXTURE2DMS :: 6;
    D3D10_1_SRV_DIMENSION_TEXTURE2DMSARRAY :: 7;
    D3D10_1_SRV_DIMENSION_TEXTURE3D :: 8;
    D3D10_1_SRV_DIMENSION_TEXTURECUBE :: 9;
    D3D10_1_SRV_DIMENSION_TEXTURECUBEARRAY :: 10;
    D3D11_SRV_DIMENSION_UNKNOWN :: 0;
    D3D11_SRV_DIMENSION_BUFFER :: 1;
    D3D11_SRV_DIMENSION_TEXTURE1D :: 2;
    D3D11_SRV_DIMENSION_TEXTURE1DARRAY :: 3;
    D3D11_SRV_DIMENSION_TEXTURE2D :: 4;
    D3D11_SRV_DIMENSION_TEXTURE2DARRAY :: 5;
    D3D11_SRV_DIMENSION_TEXTURE2DMS :: 6;
    D3D11_SRV_DIMENSION_TEXTURE2DMSARRAY :: 7;
    D3D11_SRV_DIMENSION_TEXTURE3D :: 8;
    D3D11_SRV_DIMENSION_TEXTURECUBE :: 9;
    D3D11_SRV_DIMENSION_TEXTURECUBEARRAY :: 10;
    D3D11_SRV_DIMENSION_BUFFEREX :: 11;
}

D3D_SHADER_MACRO :: struct {
    Name: LPCSTR;
    Definition: LPCSTR;
}

ID3D10Blob :: struct {
    using vtable : *ID3D10Blob_VTable;
    uuid :: "8BA5FB08-5195-40e2-AC58-0D989C3A0102";
    iid  :: IID_ID3D10Blob;
}

ID3D10Blob_VTable :: struct {
    using unknown : IUnknown_VTable;
    GetBufferPointer : (this: *ID3D10Blob) -> *void #cpp_method #foreign;
    GetBufferSize : (this: *ID3D10Blob) -> SIZE_T #cpp_method #foreign;
}

IID_ID3D10Blob  :: GUID.{0x8ba5fb08, 0x5195, 0x40e2, u8.[0xac, 0x58, 0xd, 0x98, 0x9c, 0x3a, 0x1, 0x2] };

ID3DBlob :: ID3D10Blob;

PFN_DESTRUCTION_CALLBACK :: #type (a0: *void) -> void #c_call;

ID3DDestructionNotifier :: struct {
    using vtable : *ID3DDestructionNotifier_VTable;
    uuid :: "a06eb39a-50da-425b-8c31-4eecd6c270f3";
    //iid  :: IID_ID3DDestructionNotifier;
}

ID3DDestructionNotifier_VTable :: struct {
    using unknown : IUnknown_VTable;
    RegisterDestructionCallback : (this: *ID3DDestructionNotifier, callbackFn: PFN_DESTRUCTION_CALLBACK, pData: *void, pCallbackID: *u32) -> HRESULT #cpp_method #foreign;
    UnregisterDestructionCallback : (this: *ID3DDestructionNotifier, callbackID: u32) -> HRESULT #cpp_method #foreign;
}

using D3D_INCLUDE_TYPE :: enum u32 {
    D3D_INCLUDE_LOCAL :: 0;
    D3D_INCLUDE_SYSTEM :: 1;
    D3D10_INCLUDE_LOCAL :: 0;
    D3D10_INCLUDE_SYSTEM :: 1;
    D3D_INCLUDE_FORCE_DWORD :: 2147483647;
}

// ID3DInclude :: struct {
//     using vtable : *ID3DInclude_VTable;
// }

// ID3DInclude_VTable :: struct {
//     Open : (this: *ID3DInclude, IncludeType: D3D_INCLUDE_TYPE, pFileName: LPCSTR, pParentData: *void, ppData: **void, pBytes: *u32) -> HRESULT #cpp_method #foreign;
//     Close : (this: *ID3DInclude, pData: *void) -> HRESULT #cpp_method #foreign;
// }


using D3D_SHADER_VARIABLE_CLASS :: enum u32 {
    D3D_SVC_SCALAR :: 0;
    D3D_SVC_VECTOR :: 1;
    D3D_SVC_MATRIX_ROWS :: 2;
    D3D_SVC_MATRIX_COLUMNS :: 3;
    D3D_SVC_OBJECT :: 4;
    D3D_SVC_STRUCT :: 5;
    D3D_SVC_INTERFACE_CLASS :: 6;
    D3D_SVC_INTERFACE_POINTER :: 7;
    D3D10_SVC_SCALAR :: 0;
    D3D10_SVC_VECTOR :: 1;
    D3D10_SVC_MATRIX_ROWS :: 2;
    D3D10_SVC_MATRIX_COLUMNS :: 3;
    D3D10_SVC_OBJECT :: 4;
    D3D10_SVC_STRUCT :: 5;
    D3D11_SVC_INTERFACE_CLASS :: 6;
    D3D11_SVC_INTERFACE_POINTER :: 7;
    D3D_SVC_FORCE_DWORD :: 2147483647;
}

using D3D_SHADER_VARIABLE_FLAGS :: enum_flags u32 {
    D3D_SVF_USERPACKED :: 1;
    D3D_SVF_USED :: 2;
    D3D_SVF_INTERFACE_POINTER :: 4;
    D3D_SVF_INTERFACE_PARAMETER :: 8;
    D3D10_SVF_USERPACKED :: 1;
    D3D10_SVF_USED :: 2;
    D3D11_SVF_INTERFACE_POINTER :: 4;
    D3D11_SVF_INTERFACE_PARAMETER :: 8;
    D3D_SVF_FORCE_DWORD :: 2147483647;
}

using D3D_SHADER_VARIABLE_TYPE :: enum u32 {
    D3D_SVT_VOID :: 0;
    D3D_SVT_BOOL :: 1;
    D3D_SVT_INT :: 2;
    D3D_SVT_FLOAT :: 3;
    D3D_SVT_STRING :: 4;
    D3D_SVT_TEXTURE :: 5;
    D3D_SVT_TEXTURE1D :: 6;
    D3D_SVT_TEXTURE2D :: 7;
    D3D_SVT_TEXTURE3D :: 8;
    D3D_SVT_TEXTURECUBE :: 9;
    D3D_SVT_SAMPLER :: 10;
    D3D_SVT_SAMPLER1D :: 11;
    D3D_SVT_SAMPLER2D :: 12;
    D3D_SVT_SAMPLER3D :: 13;
    D3D_SVT_SAMPLERCUBE :: 14;
    D3D_SVT_PIXELSHADER :: 15;
    D3D_SVT_VERTEXSHADER :: 16;
    D3D_SVT_PIXELFRAGMENT :: 17;
    D3D_SVT_VERTEXFRAGMENT :: 18;
    D3D_SVT_UINT :: 19;
    D3D_SVT_UINT8 :: 20;
    D3D_SVT_GEOMETRYSHADER :: 21;
    D3D_SVT_RASTERIZER :: 22;
    D3D_SVT_DEPTHSTENCIL :: 23;
    D3D_SVT_BLEND :: 24;
    D3D_SVT_BUFFER :: 25;
    D3D_SVT_CBUFFER :: 26;
    D3D_SVT_TBUFFER :: 27;
    D3D_SVT_TEXTURE1DARRAY :: 28;
    D3D_SVT_TEXTURE2DARRAY :: 29;
    D3D_SVT_RENDERTARGETVIEW :: 30;
    D3D_SVT_DEPTHSTENCILVIEW :: 31;
    D3D_SVT_TEXTURE2DMS :: 32;
    D3D_SVT_TEXTURE2DMSARRAY :: 33;
    D3D_SVT_TEXTURECUBEARRAY :: 34;
    D3D_SVT_HULLSHADER :: 35;
    D3D_SVT_DOMAINSHADER :: 36;
    D3D_SVT_INTERFACE_POINTER :: 37;
    D3D_SVT_COMPUTESHADER :: 38;
    D3D_SVT_DOUBLE :: 39;
    D3D_SVT_RWTEXTURE1D :: 40;
    D3D_SVT_RWTEXTURE1DARRAY :: 41;
    D3D_SVT_RWTEXTURE2D :: 42;
    D3D_SVT_RWTEXTURE2DARRAY :: 43;
    D3D_SVT_RWTEXTURE3D :: 44;
    D3D_SVT_RWBUFFER :: 45;
    D3D_SVT_BYTEADDRESS_BUFFER :: 46;
    D3D_SVT_RWBYTEADDRESS_BUFFER :: 47;
    D3D_SVT_STRUCTURED_BUFFER :: 48;
    D3D_SVT_RWSTRUCTURED_BUFFER :: 49;
    D3D_SVT_APPEND_STRUCTURED_BUFFER :: 50;
    D3D_SVT_CONSUME_STRUCTURED_BUFFER :: 51;
    D3D_SVT_MIN8FLOAT :: 52;
    D3D_SVT_MIN10FLOAT :: 53;
    D3D_SVT_MIN16FLOAT :: 54;
    D3D_SVT_MIN12INT :: 55;
    D3D_SVT_MIN16INT :: 56;
    D3D_SVT_MIN16UINT :: 57;
    D3D10_SVT_VOID :: 0;
    D3D10_SVT_BOOL :: 1;
    D3D10_SVT_INT :: 2;
    D3D10_SVT_FLOAT :: 3;
    D3D10_SVT_STRING :: 4;
    D3D10_SVT_TEXTURE :: 5;
    D3D10_SVT_TEXTURE1D :: 6;
    D3D10_SVT_TEXTURE2D :: 7;
    D3D10_SVT_TEXTURE3D :: 8;
    D3D10_SVT_TEXTURECUBE :: 9;
    D3D10_SVT_SAMPLER :: 10;
    D3D10_SVT_SAMPLER1D :: 11;
    D3D10_SVT_SAMPLER2D :: 12;
    D3D10_SVT_SAMPLER3D :: 13;
    D3D10_SVT_SAMPLERCUBE :: 14;
    D3D10_SVT_PIXELSHADER :: 15;
    D3D10_SVT_VERTEXSHADER :: 16;
    D3D10_SVT_PIXELFRAGMENT :: 17;
    D3D10_SVT_VERTEXFRAGMENT :: 18;
    D3D10_SVT_UINT :: 19;
    D3D10_SVT_UINT8 :: 20;
    D3D10_SVT_GEOMETRYSHADER :: 21;
    D3D10_SVT_RASTERIZER :: 22;
    D3D10_SVT_DEPTHSTENCIL :: 23;
    D3D10_SVT_BLEND :: 24;
    D3D10_SVT_BUFFER :: 25;
    D3D10_SVT_CBUFFER :: 26;
    D3D10_SVT_TBUFFER :: 27;
    D3D10_SVT_TEXTURE1DARRAY :: 28;
    D3D10_SVT_TEXTURE2DARRAY :: 29;
    D3D10_SVT_RENDERTARGETVIEW :: 30;
    D3D10_SVT_DEPTHSTENCILVIEW :: 31;
    D3D10_SVT_TEXTURE2DMS :: 32;
    D3D10_SVT_TEXTURE2DMSARRAY :: 33;
    D3D10_SVT_TEXTURECUBEARRAY :: 34;
    D3D11_SVT_HULLSHADER :: 35;
    D3D11_SVT_DOMAINSHADER :: 36;
    D3D11_SVT_INTERFACE_POINTER :: 37;
    D3D11_SVT_COMPUTESHADER :: 38;
    D3D11_SVT_DOUBLE :: 39;
    D3D11_SVT_RWTEXTURE1D :: 40;
    D3D11_SVT_RWTEXTURE1DARRAY :: 41;
    D3D11_SVT_RWTEXTURE2D :: 42;
    D3D11_SVT_RWTEXTURE2DARRAY :: 43;
    D3D11_SVT_RWTEXTURE3D :: 44;
    D3D11_SVT_RWBUFFER :: 45;
    D3D11_SVT_BYTEADDRESS_BUFFER :: 46;
    D3D11_SVT_RWBYTEADDRESS_BUFFER :: 47;
    D3D11_SVT_STRUCTURED_BUFFER :: 48;
    D3D11_SVT_RWSTRUCTURED_BUFFER :: 49;
    D3D11_SVT_APPEND_STRUCTURED_BUFFER :: 50;
    D3D11_SVT_CONSUME_STRUCTURED_BUFFER :: 51;
    D3D_SVT_FORCE_DWORD :: 2147483647;
}

using D3D_SHADER_INPUT_FLAGS :: enum_flags u32 {
    D3D_SIF_USERPACKED :: 1;
    D3D_SIF_COMPARISON_SAMPLER :: 2;
    D3D_SIF_TEXTURE_COMPONENT_0 :: 4;
    D3D_SIF_TEXTURE_COMPONENT_1 :: 8;
    D3D_SIF_TEXTURE_COMPONENTS :: 12;
    D3D_SIF_UNUSED :: 16;
    D3D10_SIF_USERPACKED :: 1;
    D3D10_SIF_COMPARISON_SAMPLER :: 2;
    D3D10_SIF_TEXTURE_COMPONENT_0 :: 4;
    D3D10_SIF_TEXTURE_COMPONENT_1 :: 8;
    D3D10_SIF_TEXTURE_COMPONENTS :: 12;
    D3D_SIF_FORCE_DWORD :: 2147483647;
}

using D3D_SHADER_INPUT_TYPE :: enum u32 {
    D3D_SIT_CBUFFER :: 0;
    D3D_SIT_TBUFFER :: 1;
    D3D_SIT_TEXTURE :: 2;
    D3D_SIT_SAMPLER :: 3;
    D3D_SIT_UAV_RWTYPED :: 4;
    D3D_SIT_STRUCTURED :: 5;
    D3D_SIT_UAV_RWSTRUCTURED :: 6;
    D3D_SIT_BYTEADDRESS :: 7;
    D3D_SIT_UAV_RWBYTEADDRESS :: 8;
    D3D_SIT_UAV_APPEND_STRUCTURED :: 9;
    D3D_SIT_UAV_CONSUME_STRUCTURED :: 10;
    D3D_SIT_UAV_RWSTRUCTURED_WITH_COUNTER :: 11;
    D3D10_SIT_CBUFFER :: 0;
    D3D10_SIT_TBUFFER :: 1;
    D3D10_SIT_TEXTURE :: 2;
    D3D10_SIT_SAMPLER :: 3;
    D3D11_SIT_UAV_RWTYPED :: 4;
    D3D11_SIT_STRUCTURED :: 5;
    D3D11_SIT_UAV_RWSTRUCTURED :: 6;
    D3D11_SIT_BYTEADDRESS :: 7;
    D3D11_SIT_UAV_RWBYTEADDRESS :: 8;
    D3D11_SIT_UAV_APPEND_STRUCTURED :: 9;
    D3D11_SIT_UAV_CONSUME_STRUCTURED :: 10;
    D3D11_SIT_UAV_RWSTRUCTURED_WITH_COUNTER :: 11;
}

using D3D_SHADER_CBUFFER_FLAGS :: enum_flags u32 {
    D3D_CBF_USERPACKED :: 1;
    D3D10_CBF_USERPACKED :: 1;
    D3D_CBF_FORCE_DWORD :: 2147483647;
}

using D3D_CBUFFER_TYPE :: enum u32 {
    D3D_CT_CBUFFER :: 0;
    D3D_CT_TBUFFER :: 1;
    D3D_CT_INTERFACE_POINTERS :: 2;
    D3D_CT_RESOURCE_BIND_INFO :: 3;
    D3D10_CT_CBUFFER :: 0;
    D3D10_CT_TBUFFER :: 1;
    D3D11_CT_CBUFFER :: 0;
    D3D11_CT_TBUFFER :: 1;
    D3D11_CT_INTERFACE_POINTERS :: 2;
    D3D11_CT_RESOURCE_BIND_INFO :: 3;
}

using D3D_NAME :: enum u32 {
    D3D_NAME_UNDEFINED :: 0;
    D3D_NAME_POSITION :: 1;
    D3D_NAME_CLIP_DISTANCE :: 2;
    D3D_NAME_CULL_DISTANCE :: 3;
    D3D_NAME_RENDER_TARGET_ARRAY_INDEX :: 4;
    D3D_NAME_VIEWPORT_ARRAY_INDEX :: 5;
    D3D_NAME_VERTEX_ID :: 6;
    D3D_NAME_PRIMITIVE_ID :: 7;
    D3D_NAME_INSTANCE_ID :: 8;
    D3D_NAME_IS_FRONT_FACE :: 9;
    D3D_NAME_SAMPLE_INDEX :: 10;
    D3D_NAME_FINAL_QUAD_EDGE_TESSFACTOR :: 11;
    D3D_NAME_FINAL_QUAD_INSIDE_TESSFACTOR :: 12;
    D3D_NAME_FINAL_TRI_EDGE_TESSFACTOR :: 13;
    D3D_NAME_FINAL_TRI_INSIDE_TESSFACTOR :: 14;
    D3D_NAME_FINAL_LINE_DETAIL_TESSFACTOR :: 15;
    D3D_NAME_FINAL_LINE_DENSITY_TESSFACTOR :: 16;
    D3D_NAME_BARYCENTRICS :: 23;
    D3D_NAME_SHADINGRATE :: 24;
    D3D_NAME_TARGET :: 64;
    D3D_NAME_DEPTH :: 65;
    D3D_NAME_COVERAGE :: 66;
    D3D_NAME_DEPTH_GREATER_EQUAL :: 67;
    D3D_NAME_DEPTH_LESS_EQUAL :: 68;
    D3D_NAME_STENCIL_REF :: 69;
    D3D_NAME_INNER_COVERAGE :: 70;
    D3D10_NAME_UNDEFINED :: 0;
    D3D10_NAME_POSITION :: 1;
    D3D10_NAME_CLIP_DISTANCE :: 2;
    D3D10_NAME_CULL_DISTANCE :: 3;
    D3D10_NAME_RENDER_TARGET_ARRAY_INDEX :: 4;
    D3D10_NAME_VIEWPORT_ARRAY_INDEX :: 5;
    D3D10_NAME_VERTEX_ID :: 6;
    D3D10_NAME_PRIMITIVE_ID :: 7;
    D3D10_NAME_INSTANCE_ID :: 8;
    D3D10_NAME_IS_FRONT_FACE :: 9;
    D3D10_NAME_SAMPLE_INDEX :: 10;
    D3D10_NAME_TARGET :: 64;
    D3D10_NAME_DEPTH :: 65;
    D3D10_NAME_COVERAGE :: 66;
    D3D11_NAME_FINAL_QUAD_EDGE_TESSFACTOR :: 11;
    D3D11_NAME_FINAL_QUAD_INSIDE_TESSFACTOR :: 12;
    D3D11_NAME_FINAL_TRI_EDGE_TESSFACTOR :: 13;
    D3D11_NAME_FINAL_TRI_INSIDE_TESSFACTOR :: 14;
    D3D11_NAME_FINAL_LINE_DETAIL_TESSFACTOR :: 15;
    D3D11_NAME_FINAL_LINE_DENSITY_TESSFACTOR :: 16;
    D3D11_NAME_DEPTH_GREATER_EQUAL :: 67;
    D3D11_NAME_DEPTH_LESS_EQUAL :: 68;
    D3D11_NAME_STENCIL_REF :: 69;
    D3D11_NAME_INNER_COVERAGE :: 70;
    D3D12_NAME_BARYCENTRICS :: 23;
    D3D12_NAME_SHADINGRATE :: 24;
}

using D3D_RESOURCE_RETURN_TYPE :: enum u32 {
    D3D_RETURN_TYPE_UNORM :: 1;
    D3D_RETURN_TYPE_SNORM :: 2;
    D3D_RETURN_TYPE_SINT :: 3;
    D3D_RETURN_TYPE_UINT :: 4;
    D3D_RETURN_TYPE_FLOAT :: 5;
    D3D_RETURN_TYPE_MIXED :: 6;
    D3D_RETURN_TYPE_DOUBLE :: 7;
    D3D_RETURN_TYPE_CONTINUED :: 8;
    D3D10_RETURN_TYPE_UNORM :: 1;
    D3D10_RETURN_TYPE_SNORM :: 2;
    D3D10_RETURN_TYPE_SINT :: 3;
    D3D10_RETURN_TYPE_UINT :: 4;
    D3D10_RETURN_TYPE_FLOAT :: 5;
    D3D10_RETURN_TYPE_MIXED :: 6;
    D3D11_RETURN_TYPE_UNORM :: 1;
    D3D11_RETURN_TYPE_SNORM :: 2;
    D3D11_RETURN_TYPE_SINT :: 3;
    D3D11_RETURN_TYPE_UINT :: 4;
    D3D11_RETURN_TYPE_FLOAT :: 5;
    D3D11_RETURN_TYPE_MIXED :: 6;
    D3D11_RETURN_TYPE_DOUBLE :: 7;
    D3D11_RETURN_TYPE_CONTINUED :: 8;
}

using D3D_REGISTER_COMPONENT_TYPE :: enum u32 {
    D3D_REGISTER_COMPONENT_UNKNOWN :: 0;
    D3D_REGISTER_COMPONENT_UINT32 :: 1;
    D3D_REGISTER_COMPONENT_SINT32 :: 2;
    D3D_REGISTER_COMPONENT_FLOAT32 :: 3;
    D3D10_REGISTER_COMPONENT_UNKNOWN :: 0;
    D3D10_REGISTER_COMPONENT_UINT32 :: 1;
    D3D10_REGISTER_COMPONENT_SINT32 :: 2;
    D3D10_REGISTER_COMPONENT_FLOAT32 :: 3;
}

using D3D_TESSELLATOR_DOMAIN :: enum u32 {
    D3D_TESSELLATOR_DOMAIN_UNDEFINED :: 0;
    D3D_TESSELLATOR_DOMAIN_ISOLINE :: 1;
    D3D_TESSELLATOR_DOMAIN_TRI :: 2;
    D3D_TESSELLATOR_DOMAIN_QUAD :: 3;
    D3D11_TESSELLATOR_DOMAIN_UNDEFINED :: 0;
    D3D11_TESSELLATOR_DOMAIN_ISOLINE :: 1;
    D3D11_TESSELLATOR_DOMAIN_TRI :: 2;
    D3D11_TESSELLATOR_DOMAIN_QUAD :: 3;
}

using D3D_TESSELLATOR_PARTITIONING :: enum u32 {
    D3D_TESSELLATOR_PARTITIONING_UNDEFINED :: 0;
    D3D_TESSELLATOR_PARTITIONING_INTEGER :: 1;
    D3D_TESSELLATOR_PARTITIONING_POW2 :: 2;
    D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD :: 3;
    D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN :: 4;
    D3D11_TESSELLATOR_PARTITIONING_UNDEFINED :: 0;
    D3D11_TESSELLATOR_PARTITIONING_INTEGER :: 1;
    D3D11_TESSELLATOR_PARTITIONING_POW2 :: 2;
    D3D11_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD :: 3;
    D3D11_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN :: 4;
}

using D3D_TESSELLATOR_OUTPUT_PRIMITIVE :: enum u32 {
    D3D_TESSELLATOR_OUTPUT_UNDEFINED :: 0;
    D3D_TESSELLATOR_OUTPUT_POINT :: 1;
    D3D_TESSELLATOR_OUTPUT_LINE :: 2;
    D3D_TESSELLATOR_OUTPUT_TRIANGLE_CW :: 3;
    D3D_TESSELLATOR_OUTPUT_TRIANGLE_CCW :: 4;
    D3D11_TESSELLATOR_OUTPUT_UNDEFINED :: 0;
    D3D11_TESSELLATOR_OUTPUT_POINT :: 1;
    D3D11_TESSELLATOR_OUTPUT_LINE :: 2;
    D3D11_TESSELLATOR_OUTPUT_TRIANGLE_CW :: 3;
    D3D11_TESSELLATOR_OUTPUT_TRIANGLE_CCW :: 4;
}

using D3D_MIN_PRECISION :: enum u32 {
    D3D_MIN_PRECISION_DEFAULT :: 0;
    D3D_MIN_PRECISION_FLOAT_16 :: 1;
    D3D_MIN_PRECISION_FLOAT_2_8 :: 2;
    D3D_MIN_PRECISION_RESERVED :: 3;
    D3D_MIN_PRECISION_SINT_16 :: 4;
    D3D_MIN_PRECISION_UINT_16 :: 5;
    D3D_MIN_PRECISION_ANY_16 :: 240;
    D3D_MIN_PRECISION_ANY_10 :: 241;
}

using D3D_INTERPOLATION_MODE :: enum u32 {
    D3D_INTERPOLATION_UNDEFINED :: 0;
    D3D_INTERPOLATION_CONSTANT :: 1;
    D3D_INTERPOLATION_LINEAR :: 2;
    D3D_INTERPOLATION_LINEAR_CENTROID :: 3;
    D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE :: 4;
    D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE_CENTROID :: 5;
    D3D_INTERPOLATION_LINEAR_SAMPLE :: 6;
    D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE_SAMPLE :: 7;
}

using D3D_PARAMETER_FLAGS :: enum_flags u32 {
    D3D_PF_NONE :: 0;
    D3D_PF_IN :: 1;
    D3D_PF_OUT :: 2;
    D3D_PF_FORCE_DWORD :: 2147483647;
}

// WKPDID_D3DDebugObjectName: GUID;
// WKPDID_D3DDebugObjectNameW: GUID;
// WKPDID_CommentStringW: GUID;

D3D_COMPONENT_MASK_X :: 1;
D3D_COMPONENT_MASK_Y :: 2;
D3D_COMPONENT_MASK_Z :: 4;
D3D_COMPONENT_MASK_W :: 8;

// D3D_TEXTURE_LAYOUT_ROW_MAJOR: GUID;
// D3D_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE: GUID;

//### from d3d12.h

D3D12_GPU_VIRTUAL_ADDRESS :: u64;

using D3D12_COMMAND_LIST_TYPE :: enum u32 {
    D3D12_COMMAND_LIST_TYPE_DIRECT :: 0;
    D3D12_COMMAND_LIST_TYPE_BUNDLE :: 1;
    D3D12_COMMAND_LIST_TYPE_COMPUTE :: 2;
    D3D12_COMMAND_LIST_TYPE_COPY :: 3;
    D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE :: 4;
    D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS :: 5;
    D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE :: 6;
}

using D3D12_COMMAND_QUEUE_FLAGS :: enum_flags u32 {
    D3D12_COMMAND_QUEUE_FLAG_NONE :: 0;
    D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT :: 1;
}

using D3D12_COMMAND_QUEUE_PRIORITY :: enum u32 {
    D3D12_COMMAND_QUEUE_PRIORITY_NORMAL :: 0;
    D3D12_COMMAND_QUEUE_PRIORITY_HIGH :: 100;
    D3D12_COMMAND_QUEUE_PRIORITY_GLOBAL_REALTIME :: 10000;
}

D3D12_COMMAND_QUEUE_DESC :: struct {
    Type: D3D12_COMMAND_LIST_TYPE;
    Priority: s32;
    Flags: D3D12_COMMAND_QUEUE_FLAGS;
    NodeMask: u32;
}

using D3D12_PRIMITIVE_TOPOLOGY_TYPE :: enum u32 {
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED :: 0;
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT :: 1;
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE :: 2;
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE :: 3;
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH :: 4;
}

using D3D12_INPUT_CLASSIFICATION :: enum u32 {
    D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA :: 0;
    D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA :: 1;
}

D3D12_INPUT_ELEMENT_DESC :: struct {
    SemanticName: LPCSTR;
    SemanticIndex: u32;
    Format: DXGI_FORMAT;
    InputSlot: u32;
    AlignedByteOffset: u32;
    InputSlotClass: D3D12_INPUT_CLASSIFICATION;
    InstanceDataStepRate: u32;
}

using D3D12_FILL_MODE :: enum u32 {
    D3D12_FILL_MODE_WIREFRAME :: 2;
    D3D12_FILL_MODE_SOLID :: 3;
}

D3D12_PRIMITIVE_TOPOLOGY :: D3D_PRIMITIVE_TOPOLOGY;

D3D12_PRIMITIVE :: D3D_PRIMITIVE;

using D3D12_CULL_MODE :: enum u32 {
    D3D12_CULL_MODE_NONE :: 1;
    D3D12_CULL_MODE_FRONT :: 2;
    D3D12_CULL_MODE_BACK :: 3;
}

D3D12_SO_DECLARATION_ENTRY :: struct {
    Stream: u32;
    SemanticName: LPCSTR;
    SemanticIndex: u32;
    StartComponent: u8;
    ComponentCount: u8;
    OutputSlot: u8;
}

D3D12_VIEWPORT :: struct {
    TopLeftX: float;
    TopLeftY: float;
    Width: float;
    Height: float;
    MinDepth: float;
    MaxDepth: float;
}

D3D12_RECT :: RECT;

D3D12_BOX :: struct {
    left: u32;
    top: u32;
    front: u32;
    right: u32;
    bottom: u32;
    back: u32;
}

using D3D12_COMPARISON_FUNC :: enum u32 {
    D3D12_COMPARISON_FUNC_NEVER :: 1;
    D3D12_COMPARISON_FUNC_LESS :: 2;
    D3D12_COMPARISON_FUNC_EQUAL :: 3;
    D3D12_COMPARISON_FUNC_LESS_EQUAL :: 4;
    D3D12_COMPARISON_FUNC_GREATER :: 5;
    D3D12_COMPARISON_FUNC_NOT_EQUAL :: 6;
    D3D12_COMPARISON_FUNC_GREATER_EQUAL :: 7;
    D3D12_COMPARISON_FUNC_ALWAYS :: 8;
}

using D3D12_DEPTH_WRITE_MASK :: enum u32 {
    D3D12_DEPTH_WRITE_MASK_ZERO :: 0;
    D3D12_DEPTH_WRITE_MASK_ALL :: 1;
}

using D3D12_STENCIL_OP :: enum u32 {
    D3D12_STENCIL_OP_KEEP :: 1;
    D3D12_STENCIL_OP_ZERO :: 2;
    D3D12_STENCIL_OP_REPLACE :: 3;
    D3D12_STENCIL_OP_INCR_SAT :: 4;
    D3D12_STENCIL_OP_DECR_SAT :: 5;
    D3D12_STENCIL_OP_INVERT :: 6;
    D3D12_STENCIL_OP_INCR :: 7;
    D3D12_STENCIL_OP_DECR :: 8;
}

D3D12_DEPTH_STENCILOP_DESC :: struct {
    StencilFailOp: D3D12_STENCIL_OP;
    StencilDepthFailOp: D3D12_STENCIL_OP;
    StencilPassOp: D3D12_STENCIL_OP;
    StencilFunc: D3D12_COMPARISON_FUNC;
}

D3D12_DEPTH_STENCIL_DESC :: struct {
    DepthEnable: BOOL;
    DepthWriteMask: D3D12_DEPTH_WRITE_MASK;
    DepthFunc: D3D12_COMPARISON_FUNC;
    StencilEnable: BOOL;
    StencilReadMask: u8;
    StencilWriteMask: u8;
    FrontFace: D3D12_DEPTH_STENCILOP_DESC;
    BackFace: D3D12_DEPTH_STENCILOP_DESC;
}

D3D12_DEPTH_STENCIL_DESC1 :: struct {
    DepthEnable: BOOL;
    DepthWriteMask: D3D12_DEPTH_WRITE_MASK;
    DepthFunc: D3D12_COMPARISON_FUNC;
    StencilEnable: BOOL;
    StencilReadMask: u8;
    StencilWriteMask: u8;
    FrontFace: D3D12_DEPTH_STENCILOP_DESC;
    BackFace: D3D12_DEPTH_STENCILOP_DESC;
    DepthBoundsTestEnable: BOOL;
}

using D3D12_BLEND :: enum u32 {
    D3D12_BLEND_ZERO :: 1;
    D3D12_BLEND_ONE :: 2;
    D3D12_BLEND_SRC_COLOR :: 3;
    D3D12_BLEND_INV_SRC_COLOR :: 4;
    D3D12_BLEND_SRC_ALPHA :: 5;
    D3D12_BLEND_INV_SRC_ALPHA :: 6;
    D3D12_BLEND_DEST_ALPHA :: 7;
    D3D12_BLEND_INV_DEST_ALPHA :: 8;
    D3D12_BLEND_DEST_COLOR :: 9;
    D3D12_BLEND_INV_DEST_COLOR :: 10;
    D3D12_BLEND_SRC_ALPHA_SAT :: 11;
    D3D12_BLEND_BLEND_FACTOR :: 14;
    D3D12_BLEND_INV_BLEND_FACTOR :: 15;
    D3D12_BLEND_SRC1_COLOR :: 16;
    D3D12_BLEND_INV_SRC1_COLOR :: 17;
    D3D12_BLEND_SRC1_ALPHA :: 18;
    D3D12_BLEND_INV_SRC1_ALPHA :: 19;
}

using D3D12_BLEND_OP :: enum u32 {
    D3D12_BLEND_OP_ADD :: 1;
    D3D12_BLEND_OP_SUBTRACT :: 2;
    D3D12_BLEND_OP_REV_SUBTRACT :: 3;
    D3D12_BLEND_OP_MIN :: 4;
    D3D12_BLEND_OP_MAX :: 5;
}

using D3D12_COLOR_WRITE_ENABLE :: enum u32 {
    D3D12_COLOR_WRITE_ENABLE_RED :: 1;
    D3D12_COLOR_WRITE_ENABLE_GREEN :: 2;
    D3D12_COLOR_WRITE_ENABLE_BLUE :: 4;
    D3D12_COLOR_WRITE_ENABLE_ALPHA :: 8;
    D3D12_COLOR_WRITE_ENABLE_ALL :: 15;
}

using D3D12_LOGIC_OP :: enum u32 {
    D3D12_LOGIC_OP_CLEAR :: 0;
    D3D12_LOGIC_OP_SET :: 1;
    D3D12_LOGIC_OP_COPY :: 2;
    D3D12_LOGIC_OP_COPY_INVERTED :: 3;
    D3D12_LOGIC_OP_NOOP :: 4;
    D3D12_LOGIC_OP_INVERT :: 5;
    D3D12_LOGIC_OP_AND :: 6;
    D3D12_LOGIC_OP_NAND :: 7;
    D3D12_LOGIC_OP_OR :: 8;
    D3D12_LOGIC_OP_NOR :: 9;
    D3D12_LOGIC_OP_XOR :: 10;
    D3D12_LOGIC_OP_EQUIV :: 11;
    D3D12_LOGIC_OP_AND_REVERSE :: 12;
    D3D12_LOGIC_OP_AND_INVERTED :: 13;
    D3D12_LOGIC_OP_OR_REVERSE :: 14;
    D3D12_LOGIC_OP_OR_INVERTED :: 15;
}

D3D12_RENDER_TARGET_BLEND_DESC :: struct {
    BlendEnable: BOOL;
    LogicOpEnable: BOOL;
    SrcBlend: D3D12_BLEND;
    DestBlend: D3D12_BLEND;
    BlendOp: D3D12_BLEND_OP;
    SrcBlendAlpha: D3D12_BLEND;
    DestBlendAlpha: D3D12_BLEND;
    BlendOpAlpha: D3D12_BLEND_OP;
    LogicOp: D3D12_LOGIC_OP;
    RenderTargetWriteMask: u8;
}

D3D12_BLEND_DESC :: struct {
    AlphaToCoverageEnable: BOOL;
    IndependentBlendEnable: BOOL;
    RenderTarget: [8] D3D12_RENDER_TARGET_BLEND_DESC;
}

using D3D12_CONSERVATIVE_RASTERIZATION_MODE :: enum u32 {
    D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF :: 0;
    D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON :: 1;
}

D3D12_RASTERIZER_DESC :: struct {
    FillMode: D3D12_FILL_MODE;
    CullMode: D3D12_CULL_MODE;
    FrontCounterClockwise: BOOL;
    DepthBias: s32;
    DepthBiasClamp: float;
    SlopeScaledDepthBias: float;
    DepthClipEnable: BOOL;
    MultisampleEnable: BOOL;
    AntialiasedLineEnable: BOOL;
    ForcedSampleCount: u32;
    ConservativeRaster: D3D12_CONSERVATIVE_RASTERIZATION_MODE;
}

ID3D12Object :: struct {
    using vtable : *ID3D12Object_VTable;
    uuid :: "c4fec28f-7966-4e95-9f94-f431cb56c3b8";
    iid  :: IID_ID3D12Object;
}

ID3D12Object_VTable :: struct {
    using unknown : IUnknown_VTable;
    GetPrivateData : (this: *ID3D12Object, guid: *GUID, pDataSize: *u32, pData: *void) -> HRESULT #cpp_method #foreign;
    SetPrivateData : (this: *ID3D12Object, guid: *GUID, DataSize: u32, pData: *void) -> HRESULT #cpp_method #foreign;
    SetPrivateDataInterface : (this: *ID3D12Object, guid: *GUID, pData: *IUnknown) -> HRESULT #cpp_method #foreign;
    SetName : (this: *ID3D12Object, Name: LPCWSTR) -> HRESULT #cpp_method #foreign;
}

ID3D12DeviceChild :: struct {
    using vtable : *ID3D12DeviceChild_VTable;
    uuid :: "905db94b-a00c-4140-9df5-2b64ca9ea357";
    iid  :: IID_ID3D12DeviceChild;
}

ID3D12DeviceChild_VTable :: struct {
    using object : ID3D12Object_VTable;
    GetDevice : (this: *ID3D12DeviceChild, riid: *IID, ppvDevice: **void) -> HRESULT #cpp_method #foreign;
}

ID3D12RootSignature :: struct {
    using vtable : *ID3D12RootSignature_VTable;
    uuid :: "c54a6b66-72df-4ee8-8be5-a946a1429214";
    iid  :: IID_ID3D12RootSignature;
}

ID3D12RootSignature_VTable :: struct {
    using device_child : ID3D12DeviceChild_VTable;
}

D3D12_SHADER_BYTECODE :: struct {
    pShaderBytecode: *void;
    BytecodeLength: SIZE_T;
}

D3D12_STREAM_OUTPUT_DESC :: struct {
    pSODeclaration: *D3D12_SO_DECLARATION_ENTRY;
    NumEntries: u32;
    pBufferStrides: *u32;
    NumStrides: u32;
    RasterizedStream: u32;
}

D3D12_INPUT_LAYOUT_DESC :: struct {
    pInputElementDescs: *D3D12_INPUT_ELEMENT_DESC;
    NumElements: u32;
}

using D3D12_INDEX_BUFFER_STRIP_CUT_VALUE :: enum u32 {
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_DISABLED :: 0;
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFF :: 1;
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFFFFFF :: 2;
}

D3D12_CACHED_PIPELINE_STATE :: struct {
    pCachedBlob: *void;
    CachedBlobSizeInBytes: SIZE_T;
}

using D3D12_PIPELINE_STATE_FLAGS :: enum_flags u32 {
    D3D12_PIPELINE_STATE_FLAG_NONE :: 0;
    D3D12_PIPELINE_STATE_FLAG_TOOL_DEBUG :: 1;
}


D3D12_GRAPHICS_PIPELINE_STATE_DESC :: struct {
    pRootSignature: *ID3D12RootSignature;
    VS: D3D12_SHADER_BYTECODE;
    PS: D3D12_SHADER_BYTECODE;
    DS: D3D12_SHADER_BYTECODE;
    HS: D3D12_SHADER_BYTECODE;
    GS: D3D12_SHADER_BYTECODE;
    StreamOutput: D3D12_STREAM_OUTPUT_DESC;
    BlendState: D3D12_BLEND_DESC;
    SampleMask: u32;
    RasterizerState: D3D12_RASTERIZER_DESC;
    DepthStencilState: D3D12_DEPTH_STENCIL_DESC;
    InputLayout: D3D12_INPUT_LAYOUT_DESC;
    IBStripCutValue: D3D12_INDEX_BUFFER_STRIP_CUT_VALUE;
    PrimitiveTopologyType: D3D12_PRIMITIVE_TOPOLOGY_TYPE;
    NumRenderTargets: u32;
    RTVFormats: [8] DXGI_FORMAT;
    DSVFormat: DXGI_FORMAT;
    SampleDesc: DXGI_SAMPLE_DESC;
    NodeMask: u32;
    CachedPSO: D3D12_CACHED_PIPELINE_STATE;
    Flags: D3D12_PIPELINE_STATE_FLAGS;
}

D3D12_COMPUTE_PIPELINE_STATE_DESC :: struct {
    pRootSignature: *ID3D12RootSignature;
    CS: D3D12_SHADER_BYTECODE;
    NodeMask: u32;
    CachedPSO: D3D12_CACHED_PIPELINE_STATE;
    Flags: D3D12_PIPELINE_STATE_FLAGS;
}

D3D12_RT_FORMAT_ARRAY :: struct {
    RTFormats: [8] DXGI_FORMAT;
    NumRenderTargets: u32;
}

D3D12_PIPELINE_STATE_STREAM_DESC :: struct {
    SizeInBytes: SIZE_T;
    pPipelineStateSubobjectStream: *void;
}

using D3D12_PIPELINE_STATE_SUBOBJECT_TYPE :: enum u32 {
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE :: 0;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS :: 1;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS :: 2;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS :: 3;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS :: 4;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS :: 5;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS :: 6;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT :: 7;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND :: 8;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK :: 9;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER :: 10;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL :: 11;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT :: 12;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE :: 13;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY :: 14;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS :: 15;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT :: 16;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC :: 17;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK :: 18;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO :: 19;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS :: 20;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1 :: 21;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VIEW_INSTANCING :: 22;
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MAX_VALID :: 23;
}

using D3D12_FEATURE :: enum u32 {
    D3D12_FEATURE_D3D12_OPTIONS :: 0;
    D3D12_FEATURE_ARCHITECTURE :: 1;
    D3D12_FEATURE_FEATURE_LEVELS :: 2;
    D3D12_FEATURE_FORMAT_SUPPORT :: 3;
    D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS :: 4;
    D3D12_FEATURE_FORMAT_INFO :: 5;
    D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT :: 6;
    D3D12_FEATURE_SHADER_MODEL :: 7;
    D3D12_FEATURE_D3D12_OPTIONS1 :: 8;
    D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT :: 10;
    D3D12_FEATURE_ROOT_SIGNATURE :: 12;
    D3D12_FEATURE_ARCHITECTURE1 :: 16;
    D3D12_FEATURE_D3D12_OPTIONS2 :: 18;
    D3D12_FEATURE_SHADER_CACHE :: 19;
    D3D12_FEATURE_COMMAND_QUEUE_PRIORITY :: 20;
    D3D12_FEATURE_D3D12_OPTIONS3 :: 21;
    D3D12_FEATURE_EXISTING_HEAPS :: 22;
    D3D12_FEATURE_D3D12_OPTIONS4 :: 23;
    D3D12_FEATURE_SERIALIZATION :: 24;
    D3D12_FEATURE_CROSS_NODE :: 25;
    D3D12_FEATURE_D3D12_OPTIONS5 :: 27;
    D3D12_FEATURE_D3D12_OPTIONS6 :: 30;
    D3D12_FEATURE_QUERY_META_COMMAND :: 31;
}

using D3D12_SHADER_MIN_PRECISION_SUPPORT :: enum u32 {
    D3D12_SHADER_MIN_PRECISION_SUPPORT_NONE :: 0;
    D3D12_SHADER_MIN_PRECISION_SUPPORT_10_BIT :: 1;
    D3D12_SHADER_MIN_PRECISION_SUPPORT_16_BIT :: 2;
}

using D3D12_TILED_RESOURCES_TIER :: enum u32 {
    D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED :: 0;
    D3D12_TILED_RESOURCES_TIER_1 :: 1;
    D3D12_TILED_RESOURCES_TIER_2 :: 2;
    D3D12_TILED_RESOURCES_TIER_3 :: 3;
    D3D12_TILED_RESOURCES_TIER_4 :: 4;
}

using D3D12_RESOURCE_BINDING_TIER :: enum u32 {
    D3D12_RESOURCE_BINDING_TIER_1 :: 1;
    D3D12_RESOURCE_BINDING_TIER_2 :: 2;
    D3D12_RESOURCE_BINDING_TIER_3 :: 3;
}

using D3D12_CONSERVATIVE_RASTERIZATION_TIER :: enum u32 {
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_NOT_SUPPORTED :: 0;
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_1 :: 1;
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_2 :: 2;
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_3 :: 3;
}

using D3D12_FORMAT_SUPPORT1 :: enum u32 {
    D3D12_FORMAT_SUPPORT1_NONE :: 0;
    D3D12_FORMAT_SUPPORT1_BUFFER :: 1;
    D3D12_FORMAT_SUPPORT1_IA_VERTEX_BUFFER :: 2;
    D3D12_FORMAT_SUPPORT1_IA_INDEX_BUFFER :: 4;
    D3D12_FORMAT_SUPPORT1_SO_BUFFER :: 8;
    D3D12_FORMAT_SUPPORT1_TEXTURE1D :: 16;
    D3D12_FORMAT_SUPPORT1_TEXTURE2D :: 32;
    D3D12_FORMAT_SUPPORT1_TEXTURE3D :: 64;
    D3D12_FORMAT_SUPPORT1_TEXTURECUBE :: 128;
    D3D12_FORMAT_SUPPORT1_SHADER_LOAD :: 256;
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE :: 512;
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_COMPARISON :: 1024;
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_MONO_TEXT :: 2048;
    D3D12_FORMAT_SUPPORT1_MIP :: 4096;
    D3D12_FORMAT_SUPPORT1_RENDER_TARGET :: 16384;
    D3D12_FORMAT_SUPPORT1_BLENDABLE :: 32768;
    D3D12_FORMAT_SUPPORT1_DEPTH_STENCIL :: 65536;
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RESOLVE :: 262144;
    D3D12_FORMAT_SUPPORT1_DISPLAY :: 524288;
    D3D12_FORMAT_SUPPORT1_CAST_WITHIN_BIT_LAYOUT :: 1048576;
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RENDERTARGET :: 2097152;
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_LOAD :: 4194304;
    D3D12_FORMAT_SUPPORT1_SHADER_GATHER :: 8388608;
    D3D12_FORMAT_SUPPORT1_BACK_BUFFER_CAST :: 16777216;
    D3D12_FORMAT_SUPPORT1_TYPED_UNORDERED_ACCESS_VIEW :: 33554432;
    D3D12_FORMAT_SUPPORT1_SHADER_GATHER_COMPARISON :: 67108864;
    D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT :: 134217728;
    D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_OUTPUT :: 268435456;
    D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_INPUT :: 536870912;
    D3D12_FORMAT_SUPPORT1_VIDEO_ENCODER :: 1073741824;
}

using D3D12_FORMAT_SUPPORT2 :: enum u32 {
    D3D12_FORMAT_SUPPORT2_NONE :: 0;
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_ADD :: 1;
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS :: 2;
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE :: 4;
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE :: 8;
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX :: 16;
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX :: 32;
    D3D12_FORMAT_SUPPORT2_UAV_TYPED_LOAD :: 64;
    D3D12_FORMAT_SUPPORT2_UAV_TYPED_STORE :: 128;
    D3D12_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP :: 256;
    D3D12_FORMAT_SUPPORT2_TILED :: 512;
    D3D12_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY :: 16384;
}

using D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS :: enum_flags u32 {
    D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_NONE :: 0;
    D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE :: 1;
}

using D3D12_CROSS_NODE_SHARING_TIER :: enum u32 {
    D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED :: 0;
    D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED :: 1;
    D3D12_CROSS_NODE_SHARING_TIER_1 :: 2;
    D3D12_CROSS_NODE_SHARING_TIER_2 :: 3;
    D3D12_CROSS_NODE_SHARING_TIER_3 :: 4;
}

using D3D12_RESOURCE_HEAP_TIER :: enum u32 {
    D3D12_RESOURCE_HEAP_TIER_1 :: 1;
    D3D12_RESOURCE_HEAP_TIER_2 :: 2;
}

using D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER :: enum u32 {
    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_NOT_SUPPORTED :: 0;
    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_1 :: 1;
    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_2 :: 2;
}

using D3D12_VIEW_INSTANCING_TIER :: enum u32 {
    D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED :: 0;
    D3D12_VIEW_INSTANCING_TIER_1 :: 1;
    D3D12_VIEW_INSTANCING_TIER_2 :: 2;
    D3D12_VIEW_INSTANCING_TIER_3 :: 3;
}

D3D12_FEATURE_DATA_D3D12_OPTIONS :: struct {
    DoublePrecisionFloatShaderOps: BOOL;
    OutputMergerLogicOp: BOOL;
    MinPrecisionSupport: D3D12_SHADER_MIN_PRECISION_SUPPORT;
    TiledResourcesTier: D3D12_TILED_RESOURCES_TIER;
    ResourceBindingTier: D3D12_RESOURCE_BINDING_TIER;
    PSSpecifiedStencilRefSupported: BOOL;
    TypedUAVLoadAdditionalFormats: BOOL;
    ROVsSupported: BOOL;
    ConservativeRasterizationTier: D3D12_CONSERVATIVE_RASTERIZATION_TIER;
    MaxGPUVirtualAddressBitsPerResource: u32;
    StandardSwizzle64KBSupported: BOOL;
    CrossNodeSharingTier: D3D12_CROSS_NODE_SHARING_TIER;
    CrossAdapterRowMajorTextureSupported: BOOL;
    VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation: BOOL;
    ResourceHeapTier: D3D12_RESOURCE_HEAP_TIER;
}

D3D12_FEATURE_DATA_D3D12_OPTIONS1 :: struct {
    WaveOps: BOOL;
    WaveLaneCountMin: u32;
    WaveLaneCountMax: u32;
    TotalLaneCount: u32;
    ExpandedComputeResourceStates: BOOL;
    Int64ShaderOps: BOOL;
}

D3D12_FEATURE_DATA_D3D12_OPTIONS2 :: struct {
    DepthBoundsTestSupported: BOOL;
    ProgrammableSamplePositionsTier: D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER;
}

using D3D_ROOT_SIGNATURE_VERSION :: enum u32 {
    D3D_ROOT_SIGNATURE_VERSION_1 :: 1;
    D3D_ROOT_SIGNATURE_VERSION_1_0 :: 1;
    D3D_ROOT_SIGNATURE_VERSION_1_1 :: 2;
}

D3D12_FEATURE_DATA_ROOT_SIGNATURE :: struct {
    HighestVersion: D3D_ROOT_SIGNATURE_VERSION;
}

D3D12_FEATURE_DATA_ARCHITECTURE :: struct {
    NodeIndex: u32;
    TileBasedRenderer: BOOL;
    UMA: BOOL;
    CacheCoherentUMA: BOOL;
}

D3D12_FEATURE_DATA_ARCHITECTURE1 :: struct {
    NodeIndex: u32;
    TileBasedRenderer: BOOL;
    UMA: BOOL;
    CacheCoherentUMA: BOOL;
    IsolatedMMU: BOOL;
}

D3D12_FEATURE_DATA_FEATURE_LEVELS :: struct {
    NumFeatureLevels: u32;
    pFeatureLevelsRequested: *D3D_FEATURE_LEVEL;
    MaxSupportedFeatureLevel: D3D_FEATURE_LEVEL;
}

using D3D_SHADER_MODEL :: enum u32 {
    D3D_SHADER_MODEL_5_1 :: 81;
    D3D_SHADER_MODEL_6_0 :: 96;
    D3D_SHADER_MODEL_6_1 :: 97;
    D3D_SHADER_MODEL_6_2 :: 98;
    D3D_SHADER_MODEL_6_3 :: 99;
    D3D_SHADER_MODEL_6_4 :: 100;
    D3D_SHADER_MODEL_6_5 :: 101;
}

D3D12_FEATURE_DATA_SHADER_MODEL :: struct {
    HighestShaderModel: D3D_SHADER_MODEL;
}

D3D12_FEATURE_DATA_FORMAT_SUPPORT :: struct {
    Format: DXGI_FORMAT;
    Support1: D3D12_FORMAT_SUPPORT1;
    Support2: D3D12_FORMAT_SUPPORT2;
}

D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS :: struct {
    Format: DXGI_FORMAT;
    SampleCount: u32;
    Flags: D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS;
    NumQualityLevels: u32;
}

D3D12_FEATURE_DATA_FORMAT_INFO :: struct {
    Format: DXGI_FORMAT;
    PlaneCount: u8;
}

D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT :: struct {
    MaxGPUVirtualAddressBitsPerResource: u32;
    MaxGPUVirtualAddressBitsPerProcess: u32;
}

using D3D12_SHADER_CACHE_SUPPORT_FLAGS :: enum_flags u32 {
    D3D12_SHADER_CACHE_SUPPORT_NONE :: 0;
    D3D12_SHADER_CACHE_SUPPORT_SINGLE_PSO :: 1;
    D3D12_SHADER_CACHE_SUPPORT_LIBRARY :: 2;
    D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE :: 4;
    D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE :: 8;
}

D3D12_FEATURE_DATA_SHADER_CACHE :: struct {
    SupportFlags: D3D12_SHADER_CACHE_SUPPORT_FLAGS;
}

D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY :: struct {
    CommandListType: D3D12_COMMAND_LIST_TYPE;
    Priority: u32;
    PriorityForTypeIsSupported: BOOL;
}

using D3D12_COMMAND_LIST_SUPPORT_FLAGS :: enum_flags u32 {
    D3D12_COMMAND_LIST_SUPPORT_FLAG_NONE :: 0;
    D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT :: 1;
    D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE :: 2;
    D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE :: 4;
    D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY :: 8;
    D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE :: 16;
    D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS :: 32;
    D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_ENCODE :: 64;
}

D3D12_FEATURE_DATA_D3D12_OPTIONS3 :: struct {
    CopyQueueTimestampQueriesSupported: BOOL;
    CastingFullyTypedFormatSupported: BOOL;
    WriteBufferImmediateSupportFlags: D3D12_COMMAND_LIST_SUPPORT_FLAGS;
    ViewInstancingTier: D3D12_VIEW_INSTANCING_TIER;
    BarycentricsSupported: BOOL;
}

D3D12_FEATURE_DATA_EXISTING_HEAPS :: struct {
    Supported: BOOL;
}

using D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER :: enum u32 {
    D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0 :: 0;
    D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1 :: 1;
}

D3D12_FEATURE_DATA_D3D12_OPTIONS4 :: struct {
    MSAA64KBAlignedTextureSupported: BOOL;
    SharedResourceCompatibilityTier: D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER;
    Native16BitShaderOpsSupported: BOOL;
}

using D3D12_HEAP_SERIALIZATION_TIER :: enum u32 {
    D3D12_HEAP_SERIALIZATION_TIER_0 :: 0;
    D3D12_HEAP_SERIALIZATION_TIER_10 :: 10;
}

D3D12_FEATURE_DATA_SERIALIZATION :: struct {
    NodeIndex: u32;
    HeapSerializationTier: D3D12_HEAP_SERIALIZATION_TIER;
}

D3D12_FEATURE_DATA_CROSS_NODE :: struct {
    SharingTier: D3D12_CROSS_NODE_SHARING_TIER;
    AtomicShaderInstructions: BOOL;
}

using D3D12_RENDER_PASS_TIER :: enum u32 {
    D3D12_RENDER_PASS_TIER_0 :: 0;
    D3D12_RENDER_PASS_TIER_1 :: 1;
    D3D12_RENDER_PASS_TIER_2 :: 2;
}

using D3D12_RAYTRACING_TIER :: enum u32 {
    D3D12_RAYTRACING_TIER_NOT_SUPPORTED :: 0;
    D3D12_RAYTRACING_TIER_1_0 :: 10;
}

D3D12_FEATURE_DATA_D3D12_OPTIONS5 :: struct {
    SRVOnlyTiledResourceTier3: BOOL;
    RenderPassesTier: D3D12_RENDER_PASS_TIER;
    RaytracingTier: D3D12_RAYTRACING_TIER;
}

using D3D12_VARIABLE_SHADING_RATE_TIER :: enum u32 {
    D3D12_VARIABLE_SHADING_RATE_TIER_NOT_SUPPORTED :: 0;
    D3D12_VARIABLE_SHADING_RATE_TIER_1 :: 1;
    D3D12_VARIABLE_SHADING_RATE_TIER_2 :: 2;
}

D3D12_FEATURE_DATA_D3D12_OPTIONS6 :: struct {
    AdditionalShadingRatesSupported: BOOL;
    PerPrimitiveShadingRateSupportedWithViewportIndexing: BOOL;
    VariableShadingRateTier: D3D12_VARIABLE_SHADING_RATE_TIER;
    ShadingRateImageTileSize: u32;
    BackgroundProcessingSupported: BOOL;
}

D3D12_FEATURE_DATA_QUERY_META_COMMAND :: struct {
    CommandId: GUID;
    NodeMask: u32;
    pQueryInputData: *void;
    QueryInputDataSizeInBytes: SIZE_T;
    pQueryOutputData: *void;
    QueryOutputDataSizeInBytes: SIZE_T;
}

D3D12_RESOURCE_ALLOCATION_INFO :: struct {
    SizeInBytes: u64;
    Alignment: u64;
}

D3D12_RESOURCE_ALLOCATION_INFO1 :: struct {
    Offset: u64;
    Alignment: u64;
    SizeInBytes: u64;
}

using D3D12_HEAP_TYPE :: enum u32 {
    D3D12_HEAP_TYPE_DEFAULT :: 1;
    D3D12_HEAP_TYPE_UPLOAD :: 2;
    D3D12_HEAP_TYPE_READBACK :: 3;
    D3D12_HEAP_TYPE_CUSTOM :: 4;
}

using D3D12_CPU_PAGE_PROPERTY :: enum u32 {
    D3D12_CPU_PAGE_PROPERTY_UNKNOWN :: 0;
    D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE :: 1;
    D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE :: 2;
    D3D12_CPU_PAGE_PROPERTY_WRITE_BACK :: 3;
}

using D3D12_MEMORY_POOL :: enum u32 {
    D3D12_MEMORY_POOL_UNKNOWN :: 0;
    D3D12_MEMORY_POOL_L0 :: 1;
    D3D12_MEMORY_POOL_L1 :: 2;
}

D3D12_HEAP_PROPERTIES :: struct {
    Type: D3D12_HEAP_TYPE;
    CPUPageProperty: D3D12_CPU_PAGE_PROPERTY;
    MemoryPoolPreference: D3D12_MEMORY_POOL;
    CreationNodeMask: u32;
    VisibleNodeMask: u32;
}

using D3D12_HEAP_FLAGS :: enum_flags u32 {
    D3D12_HEAP_FLAG_NONE :: 0;
    D3D12_HEAP_FLAG_SHARED :: 1;
    D3D12_HEAP_FLAG_DENY_BUFFERS :: 4;
    D3D12_HEAP_FLAG_ALLOW_DISPLAY :: 8;
    D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER :: 32;
    D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES :: 64;
    D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES :: 128;
    D3D12_HEAP_FLAG_HARDWARE_PROTECTED :: 256;
    D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH :: 512;
    D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS :: 1024;
    D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES :: 0;
    D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS :: 192;
    D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES :: 68;
    D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES :: 132;
}

D3D12_HEAP_DESC :: struct {
    SizeInBytes: u64;
    Properties: D3D12_HEAP_PROPERTIES;
    Alignment: u64;
    Flags: D3D12_HEAP_FLAGS;
}

using D3D12_RESOURCE_DIMENSION :: enum u32 {
    D3D12_RESOURCE_DIMENSION_UNKNOWN :: 0;
    D3D12_RESOURCE_DIMENSION_BUFFER :: 1;
    D3D12_RESOURCE_DIMENSION_TEXTURE1D :: 2;
    D3D12_RESOURCE_DIMENSION_TEXTURE2D :: 3;
    D3D12_RESOURCE_DIMENSION_TEXTURE3D :: 4;
}

using D3D12_TEXTURE_LAYOUT :: enum u32 {
    D3D12_TEXTURE_LAYOUT_UNKNOWN :: 0;
    D3D12_TEXTURE_LAYOUT_ROW_MAJOR :: 1;
    D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE :: 2;
    D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE :: 3;
}

using D3D12_RESOURCE_FLAGS :: enum_flags u32 {
    D3D12_RESOURCE_FLAG_NONE :: 0;
    D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET :: 1;
    D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL :: 2;
    D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS :: 4;
    D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE :: 8;
    D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER :: 16;
    D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS :: 32;
    D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY :: 64;
}

D3D12_RESOURCE_DESC :: struct {
    Dimension: D3D12_RESOURCE_DIMENSION;
    Alignment: u64;
    Width: u64;
    Height: u32;
    DepthOrArraySize: u16;
    MipLevels: u16;
    Format: DXGI_FORMAT;
    SampleDesc: DXGI_SAMPLE_DESC;
    Layout: D3D12_TEXTURE_LAYOUT;
    Flags: D3D12_RESOURCE_FLAGS;
}

D3D12_DEPTH_STENCIL_VALUE :: struct {
    Depth: float;
    Stencil: u8;
}

D3D12_CLEAR_VALUE :: struct {
    Format: DXGI_FORMAT;
    union {
        Color: [4] float;
        DepthStencil: D3D12_DEPTH_STENCIL_VALUE;
    }
}

D3D12_RANGE :: struct {
    Begin: SIZE_T;
    End: SIZE_T;
}

D3D12_RANGE_UINT64 :: struct {
    Begin: u64;
    End: u64;
}

D3D12_SUBRESOURCE_RANGE_UINT64 :: struct {
    Subresource: u32;
    Range: D3D12_RANGE_UINT64;
}

D3D12_SUBRESOURCE_INFO :: struct {
    Offset: u64;
    RowPitch: u32;
    DepthPitch: u32;
}

D3D12_TILED_RESOURCE_COORDINATE :: struct {
    X: u32;
    Y: u32;
    Z: u32;
    Subresource: u32;
}

D3D12_TILE_REGION_SIZE :: struct {
    NumTiles: u32;
    UseBox: BOOL;
    Width: u32;
    Height: u16;
    Depth: u16;
}

using D3D12_TILE_RANGE_FLAGS :: enum_flags u32 {
    D3D12_TILE_RANGE_FLAG_NONE :: 0;
    D3D12_TILE_RANGE_FLAG_NULL :: 1;
    D3D12_TILE_RANGE_FLAG_SKIP :: 2;
    D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE :: 4;
}

D3D12_SUBRESOURCE_TILING :: struct {
    WidthInTiles: u32;
    HeightInTiles: u16;
    DepthInTiles: u16;
    StartTileIndexInOverallResource: u32;
}

D3D12_TILE_SHAPE :: struct {
    WidthInTexels: u32;
    HeightInTexels: u32;
    DepthInTexels: u32;
}

D3D12_PACKED_MIP_INFO :: struct {
    NumStandardMips: u8;
    NumPackedMips: u8;
    NumTilesForPackedMips: u32;
    StartTileIndexInOverallResource: u32;
}

using D3D12_TILE_MAPPING_FLAGS :: enum_flags u32 {
    D3D12_TILE_MAPPING_FLAG_NONE :: 0;
    D3D12_TILE_MAPPING_FLAG_NO_HAZARD :: 1;
}

using D3D12_TILE_COPY_FLAGS :: enum_flags u32 {
    D3D12_TILE_COPY_FLAG_NONE :: 0;
    D3D12_TILE_COPY_FLAG_NO_HAZARD :: 1;
    D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE :: 2;
    D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER :: 4;
}

using D3D12_RESOURCE_STATES :: enum u32 {
    D3D12_RESOURCE_STATE_COMMON :: 0;
    D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER :: 1;
    D3D12_RESOURCE_STATE_INDEX_BUFFER :: 2;
    D3D12_RESOURCE_STATE_RENDER_TARGET :: 4;
    D3D12_RESOURCE_STATE_UNORDERED_ACCESS :: 8;
    D3D12_RESOURCE_STATE_DEPTH_WRITE :: 16;
    D3D12_RESOURCE_STATE_DEPTH_READ :: 32;
    D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE :: 64;
    D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE :: 128;
    D3D12_RESOURCE_STATE_STREAM_OUT :: 256;
    D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT :: 512;
    D3D12_RESOURCE_STATE_COPY_DEST :: 1024;
    D3D12_RESOURCE_STATE_COPY_SOURCE :: 2048;
    D3D12_RESOURCE_STATE_RESOLVE_DEST :: 4096;
    D3D12_RESOURCE_STATE_RESOLVE_SOURCE :: 8192;
    D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE :: 4194304;
    D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE :: 16777216;
    D3D12_RESOURCE_STATE_GENERIC_READ :: 2755;
    D3D12_RESOURCE_STATE_PRESENT :: 0;
    D3D12_RESOURCE_STATE_PREDICATION :: 512;
    D3D12_RESOURCE_STATE_VIDEO_DECODE_READ :: 65536;
    D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE :: 131072;
    D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ :: 262144;
    D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE :: 524288;
    D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ :: 2097152;
    D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE :: 8388608;
}

using D3D12_RESOURCE_BARRIER_TYPE :: enum u32 {
    D3D12_RESOURCE_BARRIER_TYPE_TRANSITION :: 0;
    D3D12_RESOURCE_BARRIER_TYPE_ALIASING :: 1;
    D3D12_RESOURCE_BARRIER_TYPE_UAV :: 2;
}

D3D12_RESOURCE_TRANSITION_BARRIER :: struct {
    pResource: *ID3D12Resource;
    Subresource: u32;
    StateBefore: D3D12_RESOURCE_STATES;
    StateAfter: D3D12_RESOURCE_STATES;
}

D3D12_RESOURCE_ALIASING_BARRIER :: struct {
    pResourceBefore: *ID3D12Resource;
    pResourceAfter: *ID3D12Resource;
}

D3D12_RESOURCE_UAV_BARRIER :: struct {
    pResource: *ID3D12Resource;
}

using D3D12_RESOURCE_BARRIER_FLAGS :: enum_flags u32 {
    D3D12_RESOURCE_BARRIER_FLAG_NONE :: 0;
    D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY :: 1;
    D3D12_RESOURCE_BARRIER_FLAG_END_ONLY :: 2;
}

D3D12_RESOURCE_BARRIER :: struct {
    Type: D3D12_RESOURCE_BARRIER_TYPE;
    Flags: D3D12_RESOURCE_BARRIER_FLAGS;
    union {
        Transition: D3D12_RESOURCE_TRANSITION_BARRIER;
        Aliasing: D3D12_RESOURCE_ALIASING_BARRIER;
        UAV: D3D12_RESOURCE_UAV_BARRIER;
    }
}

D3D12_SUBRESOURCE_FOOTPRINT :: struct {
    Format: DXGI_FORMAT;
    Width: u32;
    Height: u32;
    Depth: u32;
    RowPitch: u32;
}

D3D12_PLACED_SUBRESOURCE_FOOTPRINT :: struct {
    Offset: u64;
    Footprint: D3D12_SUBRESOURCE_FOOTPRINT;
}

using D3D12_TEXTURE_COPY_TYPE :: enum u32 {
    D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX :: 0;
    D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT :: 1;
}

D3D12_TEXTURE_COPY_LOCATION :: struct {
    pResource: *ID3D12Resource;
    Type: D3D12_TEXTURE_COPY_TYPE;
    union {
        PlacedFootprint: D3D12_PLACED_SUBRESOURCE_FOOTPRINT;
        SubresourceIndex: u32;
    }
}

using D3D12_RESOLVE_MODE :: enum u32 {
    D3D12_RESOLVE_MODE_DECOMPRESS :: 0;
    D3D12_RESOLVE_MODE_MIN :: 1;
    D3D12_RESOLVE_MODE_MAX :: 2;
    D3D12_RESOLVE_MODE_AVERAGE :: 3;
}

D3D12_SAMPLE_POSITION :: struct {
    X: s8;
    Y: s8;
}

D3D12_VIEW_INSTANCE_LOCATION :: struct {
    ViewportArrayIndex: u32;
    RenderTargetArrayIndex: u32;
}

using D3D12_VIEW_INSTANCING_FLAGS :: enum_flags u32 {
    D3D12_VIEW_INSTANCING_FLAG_NONE :: 0;
    D3D12_VIEW_INSTANCING_FLAG_ENABLE_VIEW_INSTANCE_MASKING :: 1;
}

D3D12_VIEW_INSTANCING_DESC :: struct {
    ViewInstanceCount: u32;
    pViewInstanceLocations: *D3D12_VIEW_INSTANCE_LOCATION;
    Flags: D3D12_VIEW_INSTANCING_FLAGS;
}

using D3D12_SHADER_COMPONENT_MAPPING :: enum u32 {
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_0 :: 0;
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_1 :: 1;
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_2 :: 2;
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_3 :: 3;
    D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_0 :: 4;
    D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_1 :: 5;
}

using D3D12_BUFFER_SRV_FLAGS :: enum_flags u32 {
    D3D12_BUFFER_SRV_FLAG_NONE :: 0;
    D3D12_BUFFER_SRV_FLAG_RAW :: 1;
}

D3D12_BUFFER_SRV :: struct {
    FirstElement: u64;
    NumElements: u32;
    StructureByteStride: u32;
    Flags: D3D12_BUFFER_SRV_FLAGS;
}

D3D12_TEX1D_SRV :: struct {
    MostDetailedMip: u32;
    MipLevels: u32;
    ResourceMinLODClamp: float;
}

D3D12_TEX1D_ARRAY_SRV :: struct {
    MostDetailedMip: u32;
    MipLevels: u32;
    FirstArraySlice: u32;
    ArraySize: u32;
    ResourceMinLODClamp: float;
}

D3D12_TEX2D_SRV :: struct {
    MostDetailedMip: u32;
    MipLevels: u32;
    PlaneSlice: u32;
    ResourceMinLODClamp: float;
}

D3D12_TEX2D_ARRAY_SRV :: struct {
    MostDetailedMip: u32;
    MipLevels: u32;
    FirstArraySlice: u32;
    ArraySize: u32;
    PlaneSlice: u32;
    ResourceMinLODClamp: float;
}

D3D12_TEX3D_SRV :: struct {
    MostDetailedMip: u32;
    MipLevels: u32;
    ResourceMinLODClamp: float;
}

D3D12_TEXCUBE_SRV :: struct {
    MostDetailedMip: u32;
    MipLevels: u32;
    ResourceMinLODClamp: float;
}

D3D12_TEXCUBE_ARRAY_SRV :: struct {
    MostDetailedMip: u32;
    MipLevels: u32;
    First2DArrayFace: u32;
    NumCubes: u32;
    ResourceMinLODClamp: float;
}

D3D12_TEX2DMS_SRV :: struct {
    UnusedField_NothingToDefine: u32;
}

D3D12_TEX2DMS_ARRAY_SRV :: struct {
    FirstArraySlice: u32;
    ArraySize: u32;
}

D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV :: struct {
    Location: D3D12_GPU_VIRTUAL_ADDRESS;
}

using D3D12_SRV_DIMENSION :: enum u32 {
    D3D12_SRV_DIMENSION_UNKNOWN :: 0;
    D3D12_SRV_DIMENSION_BUFFER :: 1;
    D3D12_SRV_DIMENSION_TEXTURE1D :: 2;
    D3D12_SRV_DIMENSION_TEXTURE1DARRAY :: 3;
    D3D12_SRV_DIMENSION_TEXTURE2D :: 4;
    D3D12_SRV_DIMENSION_TEXTURE2DARRAY :: 5;
    D3D12_SRV_DIMENSION_TEXTURE2DMS :: 6;
    D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY :: 7;
    D3D12_SRV_DIMENSION_TEXTURE3D :: 8;
    D3D12_SRV_DIMENSION_TEXTURECUBE :: 9;
    D3D12_SRV_DIMENSION_TEXTURECUBEARRAY :: 10;
    D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE :: 11;
}

D3D12_SHADER_RESOURCE_VIEW_DESC :: struct {
    Format: DXGI_FORMAT;
    ViewDimension: D3D12_SRV_DIMENSION;
    Shader4ComponentMapping: u32;
    union {
        Buffer: D3D12_BUFFER_SRV;
        Texture1D: D3D12_TEX1D_SRV;
        Texture1DArray: D3D12_TEX1D_ARRAY_SRV;
        Texture2D: D3D12_TEX2D_SRV;
        Texture2DArray: D3D12_TEX2D_ARRAY_SRV;
        Texture2DMS: D3D12_TEX2DMS_SRV;
        Texture2DMSArray: D3D12_TEX2DMS_ARRAY_SRV;
        Texture3D: D3D12_TEX3D_SRV;
        TextureCube: D3D12_TEXCUBE_SRV;
        TextureCubeArray: D3D12_TEXCUBE_ARRAY_SRV;
        RaytracingAccelerationStructure: D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV;
    }
}

D3D12_CONSTANT_BUFFER_VIEW_DESC :: struct {
    BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS;
    SizeInBytes: u32;
}

using D3D12_FILTER :: enum u32 {
    D3D12_FILTER_MIN_MAG_MIP_POINT :: 0;
    D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR :: 1;
    D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT :: 4;
    D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR :: 5;
    D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT :: 16;
    D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR :: 17;
    D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT :: 20;
    D3D12_FILTER_MIN_MAG_MIP_LINEAR :: 21;
    D3D12_FILTER_ANISOTROPIC :: 85;
    D3D12_FILTER_COMPARISON_MIN_MAG_MIP_POINT :: 128;
    D3D12_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR :: 129;
    D3D12_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT :: 132;
    D3D12_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR :: 133;
    D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT :: 144;
    D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR :: 145;
    D3D12_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT :: 148;
    D3D12_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR :: 149;
    D3D12_FILTER_COMPARISON_ANISOTROPIC :: 213;
    D3D12_FILTER_MINIMUM_MIN_MAG_MIP_POINT :: 256;
    D3D12_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR :: 257;
    D3D12_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT :: 260;
    D3D12_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR :: 261;
    D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT :: 272;
    D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR :: 273;
    D3D12_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT :: 276;
    D3D12_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR :: 277;
    D3D12_FILTER_MINIMUM_ANISOTROPIC :: 341;
    D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_POINT :: 384;
    D3D12_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR :: 385;
    D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT :: 388;
    D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR :: 389;
    D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT :: 400;
    D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR :: 401;
    D3D12_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT :: 404;
    D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR :: 405;
    D3D12_FILTER_MAXIMUM_ANISOTROPIC :: 469;
}

using D3D12_FILTER_TYPE :: enum u32 {
    D3D12_FILTER_TYPE_POINT :: 0;
    D3D12_FILTER_TYPE_LINEAR :: 1;
}

using D3D12_FILTER_REDUCTION_TYPE :: enum u32 {
    D3D12_FILTER_REDUCTION_TYPE_STANDARD :: 0;
    D3D12_FILTER_REDUCTION_TYPE_COMPARISON :: 1;
    D3D12_FILTER_REDUCTION_TYPE_MINIMUM :: 2;
    D3D12_FILTER_REDUCTION_TYPE_MAXIMUM :: 3;
}

using D3D12_TEXTURE_ADDRESS_MODE :: enum u32 {
    D3D12_TEXTURE_ADDRESS_MODE_WRAP :: 1;
    D3D12_TEXTURE_ADDRESS_MODE_MIRROR :: 2;
    D3D12_TEXTURE_ADDRESS_MODE_CLAMP :: 3;
    D3D12_TEXTURE_ADDRESS_MODE_BORDER :: 4;
    D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE :: 5;
}

D3D12_SAMPLER_DESC :: struct {
    Filter: D3D12_FILTER;
    AddressU: D3D12_TEXTURE_ADDRESS_MODE;
    AddressV: D3D12_TEXTURE_ADDRESS_MODE;
    AddressW: D3D12_TEXTURE_ADDRESS_MODE;
    MipLODBias: float;
    MaxAnisotropy: u32;
    ComparisonFunc: D3D12_COMPARISON_FUNC;
    BorderColor: [4] float;
    MinLOD: float;
    MaxLOD: float;
}

using D3D12_BUFFER_UAV_FLAGS :: enum_flags u32 {
    D3D12_BUFFER_UAV_FLAG_NONE :: 0;
    D3D12_BUFFER_UAV_FLAG_RAW :: 1;
}

D3D12_BUFFER_UAV :: struct {
    FirstElement: u64;
    NumElements: u32;
    StructureByteStride: u32;
    CounterOffsetInBytes: u64;
    Flags: D3D12_BUFFER_UAV_FLAGS;
}

D3D12_TEX1D_UAV :: struct {
    MipSlice: u32;
}

D3D12_TEX1D_ARRAY_UAV :: struct {
    MipSlice: u32;
    FirstArraySlice: u32;
    ArraySize: u32;
}

D3D12_TEX2D_UAV :: struct {
    MipSlice: u32;
    PlaneSlice: u32;
}

D3D12_TEX2D_ARRAY_UAV :: struct {
    MipSlice: u32;
    FirstArraySlice: u32;
    ArraySize: u32;
    PlaneSlice: u32;
}

D3D12_TEX3D_UAV :: struct {
    MipSlice: u32;
    FirstWSlice: u32;
    WSize: u32;
}

using D3D12_UAV_DIMENSION :: enum u32 {
    D3D12_UAV_DIMENSION_UNKNOWN :: 0;
    D3D12_UAV_DIMENSION_BUFFER :: 1;
    D3D12_UAV_DIMENSION_TEXTURE1D :: 2;
    D3D12_UAV_DIMENSION_TEXTURE1DARRAY :: 3;
    D3D12_UAV_DIMENSION_TEXTURE2D :: 4;
    D3D12_UAV_DIMENSION_TEXTURE2DARRAY :: 5;
    D3D12_UAV_DIMENSION_TEXTURE3D :: 8;
}

D3D12_UNORDERED_ACCESS_VIEW_DESC :: struct {
    Format: DXGI_FORMAT;
    ViewDimension: D3D12_UAV_DIMENSION;
    union {
        Buffer: D3D12_BUFFER_UAV;
        Texture1D: D3D12_TEX1D_UAV;
        Texture1DArray: D3D12_TEX1D_ARRAY_UAV;
        Texture2D: D3D12_TEX2D_UAV;
        Texture2DArray: D3D12_TEX2D_ARRAY_UAV;
        Texture3D: D3D12_TEX3D_UAV;
    }
}

D3D12_BUFFER_RTV :: struct {
    FirstElement: u64;
    NumElements: u32;
}

D3D12_TEX1D_RTV :: struct {
    MipSlice: u32;
}

D3D12_TEX1D_ARRAY_RTV :: struct {
    MipSlice: u32;
    FirstArraySlice: u32;
    ArraySize: u32;
}

D3D12_TEX2D_RTV :: struct {
    MipSlice: u32;
    PlaneSlice: u32;
}

D3D12_TEX2DMS_RTV :: struct {
    UnusedField_NothingToDefine: u32;
}

D3D12_TEX2D_ARRAY_RTV :: struct {
    MipSlice: u32;
    FirstArraySlice: u32;
    ArraySize: u32;
    PlaneSlice: u32;
}

D3D12_TEX2DMS_ARRAY_RTV :: struct {
    FirstArraySlice: u32;
    ArraySize: u32;
}

D3D12_TEX3D_RTV :: struct {
    MipSlice: u32;
    FirstWSlice: u32;
    WSize: u32;
}

using D3D12_RTV_DIMENSION :: enum u32 {
    D3D12_RTV_DIMENSION_UNKNOWN :: 0;
    D3D12_RTV_DIMENSION_BUFFER :: 1;
    D3D12_RTV_DIMENSION_TEXTURE1D :: 2;
    D3D12_RTV_DIMENSION_TEXTURE1DARRAY :: 3;
    D3D12_RTV_DIMENSION_TEXTURE2D :: 4;
    D3D12_RTV_DIMENSION_TEXTURE2DARRAY :: 5;
    D3D12_RTV_DIMENSION_TEXTURE2DMS :: 6;
    D3D12_RTV_DIMENSION_TEXTURE2DMSARRAY :: 7;
    D3D12_RTV_DIMENSION_TEXTURE3D :: 8;
}

D3D12_RENDER_TARGET_VIEW_DESC :: struct {
    Format: DXGI_FORMAT;
    ViewDimension: D3D12_RTV_DIMENSION;
    union {
        Buffer: D3D12_BUFFER_RTV;
        Texture1D: D3D12_TEX1D_RTV;
        Texture1DArray: D3D12_TEX1D_ARRAY_RTV;
        Texture2D: D3D12_TEX2D_RTV;
        Texture2DArray: D3D12_TEX2D_ARRAY_RTV;
        Texture2DMS: D3D12_TEX2DMS_RTV;
        Texture2DMSArray: D3D12_TEX2DMS_ARRAY_RTV;
        Texture3D: D3D12_TEX3D_RTV;
    }
}

D3D12_TEX1D_DSV :: struct {
    MipSlice: u32;
}

D3D12_TEX1D_ARRAY_DSV :: struct {
    MipSlice: u32;
    FirstArraySlice: u32;
    ArraySize: u32;
}

D3D12_TEX2D_DSV :: struct {
    MipSlice: u32;
}

D3D12_TEX2D_ARRAY_DSV :: struct {
    MipSlice: u32;
    FirstArraySlice: u32;
    ArraySize: u32;
}

D3D12_TEX2DMS_DSV :: struct {
    UnusedField_NothingToDefine: u32;
}

D3D12_TEX2DMS_ARRAY_DSV :: struct {
    FirstArraySlice: u32;
    ArraySize: u32;
}

using D3D12_DSV_FLAGS :: enum_flags u32 {
    D3D12_DSV_FLAG_NONE :: 0;
    D3D12_DSV_FLAG_READ_ONLY_DEPTH :: 1;
    D3D12_DSV_FLAG_READ_ONLY_STENCIL :: 2;
}

using D3D12_DSV_DIMENSION :: enum u32 {
    D3D12_DSV_DIMENSION_UNKNOWN :: 0;
    D3D12_DSV_DIMENSION_TEXTURE1D :: 1;
    D3D12_DSV_DIMENSION_TEXTURE1DARRAY :: 2;
    D3D12_DSV_DIMENSION_TEXTURE2D :: 3;
    D3D12_DSV_DIMENSION_TEXTURE2DARRAY :: 4;
    D3D12_DSV_DIMENSION_TEXTURE2DMS :: 5;
    D3D12_DSV_DIMENSION_TEXTURE2DMSARRAY :: 6;
}

D3D12_DEPTH_STENCIL_VIEW_DESC :: struct {
    Format: DXGI_FORMAT;
    ViewDimension: D3D12_DSV_DIMENSION;
    Flags: D3D12_DSV_FLAGS;
    union {
        Texture1D: D3D12_TEX1D_DSV;
        Texture1DArray: D3D12_TEX1D_ARRAY_DSV;
        Texture2D: D3D12_TEX2D_DSV;
        Texture2DArray: D3D12_TEX2D_ARRAY_DSV;
        Texture2DMS: D3D12_TEX2DMS_DSV;
        Texture2DMSArray: D3D12_TEX2DMS_ARRAY_DSV;
    }
}

using D3D12_CLEAR_FLAGS :: enum_flags u32 {
    D3D12_CLEAR_FLAG_DEPTH :: 1;
    D3D12_CLEAR_FLAG_STENCIL :: 2;
}

using D3D12_FENCE_FLAGS :: enum_flags u32 {
    D3D12_FENCE_FLAG_NONE :: 0;
    D3D12_FENCE_FLAG_SHARED :: 1;
    D3D12_FENCE_FLAG_SHARED_CROSS_ADAPTER :: 2;
    D3D12_FENCE_FLAG_NON_MONITORED :: 4;
}

using D3D12_DESCRIPTOR_HEAP_TYPE :: enum u32 {
    D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV :: 0;
    D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER :: 1;
    D3D12_DESCRIPTOR_HEAP_TYPE_RTV :: 2;
    D3D12_DESCRIPTOR_HEAP_TYPE_DSV :: 3;
    D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES :: 4;
}

using D3D12_DESCRIPTOR_HEAP_FLAGS :: enum_flags u32 {
    D3D12_DESCRIPTOR_HEAP_FLAG_NONE :: 0;
    D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE :: 1;
}

D3D12_DESCRIPTOR_HEAP_DESC :: struct {
    Type: D3D12_DESCRIPTOR_HEAP_TYPE;
    NumDescriptors: u32;
    Flags: D3D12_DESCRIPTOR_HEAP_FLAGS;
    NodeMask: u32;
}

using D3D12_DESCRIPTOR_RANGE_TYPE :: enum u32 {
    D3D12_DESCRIPTOR_RANGE_TYPE_SRV :: 0;
    D3D12_DESCRIPTOR_RANGE_TYPE_UAV :: 1;
    D3D12_DESCRIPTOR_RANGE_TYPE_CBV :: 2;
    D3D12_DESCRIPTOR_RANGE_TYPE_SAMPLER :: 3;
}

D3D12_DESCRIPTOR_RANGE :: struct {
    RangeType: D3D12_DESCRIPTOR_RANGE_TYPE;
    NumDescriptors: u32;
    BaseShaderRegister: u32;
    RegisterSpace: u32;
    OffsetInDescriptorsFromTableStart: u32;
}

D3D12_ROOT_DESCRIPTOR_TABLE :: struct {
    NumDescriptorRanges: u32;
    pDescriptorRanges: *D3D12_DESCRIPTOR_RANGE;
}

D3D12_ROOT_CONSTANTS :: struct {
    ShaderRegister: u32;
    RegisterSpace: u32;
    Num32BitValues: u32;
}

D3D12_ROOT_DESCRIPTOR :: struct {
    ShaderRegister: u32;
    RegisterSpace: u32;
}

using D3D12_SHADER_VISIBILITY :: enum u32 {
    D3D12_SHADER_VISIBILITY_ALL :: 0;
    D3D12_SHADER_VISIBILITY_VERTEX :: 1;
    D3D12_SHADER_VISIBILITY_HULL :: 2;
    D3D12_SHADER_VISIBILITY_DOMAIN :: 3;
    D3D12_SHADER_VISIBILITY_GEOMETRY :: 4;
    D3D12_SHADER_VISIBILITY_PIXEL :: 5;
}

using D3D12_ROOT_PARAMETER_TYPE :: enum u32 {
    D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE :: 0;
    D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS :: 1;
    D3D12_ROOT_PARAMETER_TYPE_CBV :: 2;
    D3D12_ROOT_PARAMETER_TYPE_SRV :: 3;
    D3D12_ROOT_PARAMETER_TYPE_UAV :: 4;
}

D3D12_ROOT_PARAMETER :: struct {
    ParameterType: D3D12_ROOT_PARAMETER_TYPE;
    union {
        DescriptorTable: D3D12_ROOT_DESCRIPTOR_TABLE;
        Constants: D3D12_ROOT_CONSTANTS;
        Descriptor: D3D12_ROOT_DESCRIPTOR;
    }
    ShaderVisibility: D3D12_SHADER_VISIBILITY;
}

using D3D12_ROOT_SIGNATURE_FLAGS :: enum_flags u32 {
    D3D12_ROOT_SIGNATURE_FLAG_NONE :: 0;
    D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT :: 1;
    D3D12_ROOT_SIGNATURE_FLAG_DENY_VERTEX_SHADER_ROOT_ACCESS :: 2;
    D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS :: 4;
    D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS :: 8;
    D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS :: 16;
    D3D12_ROOT_SIGNATURE_FLAG_DENY_PIXEL_SHADER_ROOT_ACCESS :: 32;
    D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT :: 64;
    D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE :: 128;
}

using D3D12_STATIC_BORDER_COLOR :: enum u32 {
    D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK :: 0;
    D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK :: 1;
    D3D12_STATIC_BORDER_COLOR_OPAQUE_WHITE :: 2;
}

D3D12_STATIC_SAMPLER_DESC :: struct {
    Filter: D3D12_FILTER;
    AddressU: D3D12_TEXTURE_ADDRESS_MODE;
    AddressV: D3D12_TEXTURE_ADDRESS_MODE;
    AddressW: D3D12_TEXTURE_ADDRESS_MODE;
    MipLODBias: float;
    MaxAnisotropy: u32;
    ComparisonFunc: D3D12_COMPARISON_FUNC;
    BorderColor: D3D12_STATIC_BORDER_COLOR;
    MinLOD: float;
    MaxLOD: float;
    ShaderRegister: u32;
    RegisterSpace: u32;
    ShaderVisibility: D3D12_SHADER_VISIBILITY;
}

D3D12_ROOT_SIGNATURE_DESC :: struct {
    NumParameters: u32;
    pParameters: *D3D12_ROOT_PARAMETER;
    NumStaticSamplers: u32;
    pStaticSamplers: *D3D12_STATIC_SAMPLER_DESC;
    Flags: D3D12_ROOT_SIGNATURE_FLAGS;
}

using D3D12_DESCRIPTOR_RANGE_FLAGS :: enum_flags u32 {
    D3D12_DESCRIPTOR_RANGE_FLAG_NONE :: 0;
    D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE :: 1;
    D3D12_DESCRIPTOR_RANGE_FLAG_DATA_VOLATILE :: 2;
    D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE :: 4;
    D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC :: 8;
    D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS :: 65536;
}

D3D12_DESCRIPTOR_RANGE1 :: struct {
    RangeType: D3D12_DESCRIPTOR_RANGE_TYPE;
    NumDescriptors: u32;
    BaseShaderRegister: u32;
    RegisterSpace: u32;
    Flags: D3D12_DESCRIPTOR_RANGE_FLAGS;
    OffsetInDescriptorsFromTableStart: u32;
}

D3D12_ROOT_DESCRIPTOR_TABLE1 :: struct {
    NumDescriptorRanges: u32;
    pDescriptorRanges: *D3D12_DESCRIPTOR_RANGE1;
}

using D3D12_ROOT_DESCRIPTOR_FLAGS :: enum_flags u32 {
    D3D12_ROOT_DESCRIPTOR_FLAG_NONE :: 0;
    D3D12_ROOT_DESCRIPTOR_FLAG_DATA_VOLATILE :: 2;
    D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE :: 4;
    D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC :: 8;
}

D3D12_ROOT_DESCRIPTOR1 :: struct {
    ShaderRegister: u32;
    RegisterSpace: u32;
    Flags: D3D12_ROOT_DESCRIPTOR_FLAGS;
}

D3D12_ROOT_PARAMETER1 :: struct {
    ParameterType: D3D12_ROOT_PARAMETER_TYPE;
    union {
        DescriptorTable: D3D12_ROOT_DESCRIPTOR_TABLE1;
        Constants: D3D12_ROOT_CONSTANTS;
        Descriptor: D3D12_ROOT_DESCRIPTOR1;
    }
    ShaderVisibility: D3D12_SHADER_VISIBILITY;
}

D3D12_ROOT_SIGNATURE_DESC1 :: struct {
    NumParameters: u32;
    pParameters: *D3D12_ROOT_PARAMETER1;
    NumStaticSamplers: u32;
    pStaticSamplers: *D3D12_STATIC_SAMPLER_DESC;
    Flags: D3D12_ROOT_SIGNATURE_FLAGS;
}

D3D12_VERSIONED_ROOT_SIGNATURE_DESC :: struct {
    Version: D3D_ROOT_SIGNATURE_VERSION;
    union {
        Desc_1_0: D3D12_ROOT_SIGNATURE_DESC;
        Desc_1_1: D3D12_ROOT_SIGNATURE_DESC1;
    }
}

ID3D12RootSignatureDeserializer :: struct {
    using vtable : *ID3D12RootSignatureDeserializer_VTable;
    uuid :: "34AB647B-3CC8-46AC-841B-C0965645C046";
    iid  :: IID_ID3D12RootSignatureDeserializer;
}

ID3D12RootSignatureDeserializer_VTable :: struct {
    using unknown : IUnknown_VTable;
    GetRootSignatureDesc : (this: *ID3D12RootSignatureDeserializer) -> *D3D12_ROOT_SIGNATURE_DESC #cpp_method #foreign;
}

ID3D12VersionedRootSignatureDeserializer :: struct {
    using vtable : *ID3D12VersionedRootSignatureDeserializer_VTable;
    uuid :: "7F91CE67-090C-4BB7-B78E-ED8FF2E31DA0";
    iid  :: IID_ID3D12VersionedRootSignatureDeserializer;
}

ID3D12VersionedRootSignatureDeserializer_VTable :: struct {
    using unknown : IUnknown_VTable;
    GetRootSignatureDescAtVersion : (this: *ID3D12VersionedRootSignatureDeserializer, convertToVersion: D3D_ROOT_SIGNATURE_VERSION, ppDesc: **D3D12_VERSIONED_ROOT_SIGNATURE_DESC) -> HRESULT #cpp_method #foreign;
    GetUnconvertedRootSignatureDesc : (this: *ID3D12VersionedRootSignatureDeserializer) -> *D3D12_VERSIONED_ROOT_SIGNATURE_DESC #cpp_method #foreign;
}

PFN_D3D12_SERIALIZE_ROOT_SIGNATURE :: #type (a0: *D3D12_ROOT_SIGNATURE_DESC, a1: D3D_ROOT_SIGNATURE_VERSION, a2: **ID3DBlob, a3: **ID3DBlob) -> HRESULT #c_call;
D3D12SerializeRootSignature :: (pRootSignature: *D3D12_ROOT_SIGNATURE_DESC, Version: D3D_ROOT_SIGNATURE_VERSION, ppBlob: **ID3DBlob, ppErrorBlob: **ID3DBlob) -> HRESULT #cpp_method #foreign d3d12;

PFN_D3D12_CREATE_ROOT_SIGNATURE_DESERIALIZER :: #type (a0: *void, a1: SIZE_T, a2: *IID, a3: **void) -> HRESULT #c_call;
D3D12CreateRootSignatureDeserializer :: (pSrcData: *void, SrcDataSizeInBytes: SIZE_T, pRootSignatureDeserializerInterface: *IID, ppRootSignatureDeserializer: **void) -> HRESULT #cpp_method #foreign d3d12;

PFN_D3D12_SERIALIZE_VERSIONED_ROOT_SIGNATURE :: #type (a0: *D3D12_VERSIONED_ROOT_SIGNATURE_DESC, a1: **ID3DBlob, a2: **ID3DBlob) -> HRESULT #c_call;
D3D12SerializeVersionedRootSignature :: (pRootSignature: *D3D12_VERSIONED_ROOT_SIGNATURE_DESC, ppBlob: **ID3DBlob, ppErrorBlob: **ID3DBlob) -> HRESULT #cpp_method #foreign d3d12;

PFN_D3D12_CREATE_VERSIONED_ROOT_SIGNATURE_DESERIALIZER :: #type (a0: *void, a1: SIZE_T, a2: *IID, a3: **void) -> HRESULT #c_call;
D3D12CreateVersionedRootSignatureDeserializer :: (pSrcData: *void, SrcDataSizeInBytes: SIZE_T, pRootSignatureDeserializerInterface: *IID, ppRootSignatureDeserializer: **void) -> HRESULT #cpp_method #foreign d3d12;

D3D12_CPU_DESCRIPTOR_HANDLE :: struct {
    ptr: SIZE_T;
}

D3D12_GPU_DESCRIPTOR_HANDLE :: struct {
    ptr: u64;
}

D3D12_DISCARD_REGION :: struct {
    NumRects: u32;
    pRects: *D3D12_RECT;
    FirstSubresource: u32;
    NumSubresources: u32;
}

using D3D12_QUERY_HEAP_TYPE :: enum u32 {
    D3D12_QUERY_HEAP_TYPE_OCCLUSION :: 0;
    D3D12_QUERY_HEAP_TYPE_TIMESTAMP :: 1;
    D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS :: 2;
    D3D12_QUERY_HEAP_TYPE_SO_STATISTICS :: 3;
    D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS :: 4;
    D3D12_QUERY_HEAP_TYPE_COPY_QUEUE_TIMESTAMP :: 5;
}

D3D12_QUERY_HEAP_DESC :: struct {
    Type: D3D12_QUERY_HEAP_TYPE;
    Count: u32;
    NodeMask: u32;
}

using D3D12_QUERY_TYPE :: enum u32 {
    D3D12_QUERY_TYPE_OCCLUSION :: 0;
    D3D12_QUERY_TYPE_BINARY_OCCLUSION :: 1;
    D3D12_QUERY_TYPE_TIMESTAMP :: 2;
    D3D12_QUERY_TYPE_PIPELINE_STATISTICS :: 3;
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0 :: 4;
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1 :: 5;
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2 :: 6;
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3 :: 7;
    D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS :: 8;
}

using D3D12_PREDICATION_OP :: enum u32 {
    D3D12_PREDICATION_OP_EQUAL_ZERO :: 0;
    D3D12_PREDICATION_OP_NOT_EQUAL_ZERO :: 1;
}

D3D12_QUERY_DATA_PIPELINE_STATISTICS :: struct {
    IAVertices: u64;
    IAPrimitives: u64;
    VSInvocations: u64;
    GSInvocations: u64;
    GSPrimitives: u64;
    CInvocations: u64;
    CPrimitives: u64;
    PSInvocations: u64;
    HSInvocations: u64;
    DSInvocations: u64;
    CSInvocations: u64;
}

D3D12_QUERY_DATA_SO_STATISTICS :: struct {
    NumPrimitivesWritten: u64;
    PrimitivesStorageNeeded: u64;
}

D3D12_STREAM_OUTPUT_BUFFER_VIEW :: struct {
    BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS;
    SizeInBytes: u64;
    BufferFilledSizeLocation: D3D12_GPU_VIRTUAL_ADDRESS;
}

D3D12_DRAW_ARGUMENTS :: struct {
    VertexCountPerInstance: u32;
    InstanceCount: u32;
    StartVertexLocation: u32;
    StartInstanceLocation: u32;
}

D3D12_DRAW_INDEXED_ARGUMENTS :: struct {
    IndexCountPerInstance: u32;
    InstanceCount: u32;
    StartIndexLocation: u32;
    BaseVertexLocation: s32;
    StartInstanceLocation: u32;
}

D3D12_DISPATCH_ARGUMENTS :: struct {
    ThreadGroupCountX: u32;
    ThreadGroupCountY: u32;
    ThreadGroupCountZ: u32;
}

D3D12_VERTEX_BUFFER_VIEW :: struct {
    BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS;
    SizeInBytes: u32;
    StrideInBytes: u32;
}

D3D12_INDEX_BUFFER_VIEW :: struct {
    BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS;
    SizeInBytes: u32;
    Format: DXGI_FORMAT;
}

using D3D12_INDIRECT_ARGUMENT_TYPE :: enum u32 {
    D3D12_INDIRECT_ARGUMENT_TYPE_DRAW :: 0;
    D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED :: 1;
    D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH :: 2;
    D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW :: 3;
    D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW :: 4;
    D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT :: 5;
    D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW :: 6;
    D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW :: 7;
    D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW :: 8;
}

D3D12_INDIRECT_ARGUMENT_DESC :: struct {
    Type: D3D12_INDIRECT_ARGUMENT_TYPE;
    union {    
        VertexBuffer: struct {
            Slot: u32;
        };  
        Constant: struct {
            RootParameterIndex: u32;
            DestOffsetIn32BitValues: u32;
            Num32BitValuesToSet: u32;
        };
        ConstantBufferView: struct {
            RootParameterIndex: u32;
        };
        ShaderResourceView: struct {
            RootParameterIndex: u32;
        };
        UnorderedAccessView: struct {
            RootParameterIndex: u32;
        };
    }
}

D3D12_COMMAND_SIGNATURE_DESC :: struct {
    ByteStride: u32;
    NumArgumentDescs: u32;
    pArgumentDescs: *D3D12_INDIRECT_ARGUMENT_DESC;
    NodeMask: u32;
}

ID3D12Pageable :: struct {
    using vtable : *ID3D12Pageable_VTable;
    uuid :: "63ee58fb-1268-4835-86da-f008ce62f0d6";
    iid  :: IID_ID3D12Pageable;
}

ID3D12Pageable_VTable :: struct {
    using device_child : ID3D12DeviceChild_VTable;
}

ID3D12Heap :: struct {
    using vtable : *ID3D12Heap_VTable;
    uuid :: "6b3b2502-6e51-45b3-90ee-9884265e8df";
    iid  :: IID_ID3D12Heap;
}

ID3D12Heap_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
    GetDesc : (this: *ID3D12Heap) -> D3D12_HEAP_DESC #cpp_method #foreign;
}

ID3D12Resource :: struct {
    using vtable : *ID3D12Resource_VTable;
    uuid :: "696442be-a72e-4059-bc79-5b5c98040fad";
    iid  :: IID_ID3D12Resource;
}

ID3D12Resource_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
    Map : (this: *ID3D12Resource, Subresource: u32, pReadRange: *D3D12_RANGE, ppData: **void) -> HRESULT #cpp_method #foreign;
    Unmap : (this: *ID3D12Resource, Subresource: u32, pWrittenRange: *D3D12_RANGE) -> void #cpp_method #foreign;
    GetDesc : (this: *ID3D12Resource) -> D3D12_RESOURCE_DESC #cpp_method #foreign;
    GetGPUVirtualAddress : (this: *ID3D12Resource) -> D3D12_GPU_VIRTUAL_ADDRESS #cpp_method #foreign;
    WriteToSubresource : (this: *ID3D12Resource, DstSubresource: u32, pDstBox: *D3D12_BOX, pSrcData: *void, SrcRowPitch: u32, SrcDepthPitch: u32) -> HRESULT #cpp_method #foreign;
    ReadFromSubresource : (this: *ID3D12Resource, pDstData: *void, DstRowPitch: u32, DstDepthPitch: u32, SrcSubresource: u32, pSrcBox: *D3D12_BOX) -> HRESULT #cpp_method #foreign;
    GetHeapProperties : (this: *ID3D12Resource, pHeapProperties: *D3D12_HEAP_PROPERTIES, pHeapFlags: *D3D12_HEAP_FLAGS) -> HRESULT #cpp_method #foreign;
}

ID3D12CommandAllocator :: struct {
    using vtable : *ID3D12CommandAllocator_VTable;
    uuid :: "6102dee4-af59-4b09-b999-b44d73f09b24";
    iid  :: IID_ID3D12CommandAllocator;
}

ID3D12CommandAllocator_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
    Reset : (this: *ID3D12CommandAllocator) -> HRESULT #cpp_method #foreign;
}

ID3D12Fence :: struct {
    using vtable : *ID3D12Fence_VTable;
    uuid :: "0a753dcf-c4d8-4b91-adf6-be5a60d95a76";
    iid  :: IID_ID3D12Fence;
}

ID3D12Fence_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
    GetCompletedValue : (this: *ID3D12Fence) -> u64 #cpp_method #foreign;
    SetEventOnCompletion : (this: *ID3D12Fence, Value: u64, hEvent: HANDLE) -> HRESULT #cpp_method #foreign;
    Signal : (this: *ID3D12Fence, Value: u64) -> HRESULT #cpp_method #foreign;
}

ID3D12Fence1 :: struct {
    using vtable : *ID3D12Fence1_VTable;
    uuid :: "433685fe-e22b-4ca0-a8db-b5b4f4dd0e4a";
    iid  :: IID_ID3D12Fence1;
}

ID3D12Fence1_VTable :: struct {
    using fence : ID3D12Fence_VTable;
    GetCreationFlags : (this: *ID3D12Fence1) -> D3D12_FENCE_FLAGS #cpp_method #foreign;
}

ID3D12PipelineState :: struct {
    using vtable : *ID3D12PipelineState_VTable;
    uuid :: "765a30f3-f624-4c6f-a828-ace948622445";
    iid  :: IID_ID3D12PipelineState;
}

ID3D12PipelineState_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
    GetCachedBlob : (this: *ID3D12PipelineState, ppBlob: **ID3DBlob) -> HRESULT #cpp_method #foreign;
}

ID3D12DescriptorHeap :: struct {
    using vtable : *ID3D12DescriptorHeap_VTable;
    uuid :: "8efb471d-616c-4f49-90f7-127bb763fa51";
    iid  :: IID_ID3D12DescriptorHeap;
}

ID3D12DescriptorHeap_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
    GetDesc : (this: *ID3D12DescriptorHeap) -> D3D12_DESCRIPTOR_HEAP_DESC #cpp_method #foreign;
    GetCPUDescriptorHandleForHeapStart : (this: *ID3D12DescriptorHeap) -> D3D12_CPU_DESCRIPTOR_HANDLE #cpp_method #foreign;
    GetGPUDescriptorHandleForHeapStart : (this: *ID3D12DescriptorHeap) -> D3D12_GPU_DESCRIPTOR_HANDLE #cpp_method #foreign;
}

ID3D12QueryHeap :: struct {
    using vtable : *ID3D12QueryHeap_VTable;
    uuid :: "0d9658ae-ed45-469e-a61d-970ec583cab4";
    iid  :: IID_ID3D12QueryHeap;
}

ID3D12QueryHeap_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
}

ID3D12CommandSignature :: struct {
    using vtable : *ID3D12CommandSignature_VTable;
    uuid :: "c36a797c-ec80-4f0a-8985-a7b2475082d1";
    iid  :: IID_ID3D12CommandSignature;
}

ID3D12CommandSignature_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
}

ID3D12CommandList :: struct {
    using vtable : *ID3D12CommandList_VTable;
    uuid :: "7116d91c-e7e4-47ce-b8c6-ec8168f437e5";
    iid  :: IID_ID3D12CommandList;
}

ID3D12CommandList_VTable :: struct {
    using device_child : ID3D12DeviceChild_VTable;
    GetType : (this: *ID3D12CommandList) -> D3D12_COMMAND_LIST_TYPE #cpp_method #foreign;
}

ID3D12GraphicsCommandList :: struct {
    using vtable : *ID3D12GraphicsCommandList_VTable;
    uuid :: "5b160d0f-ac1b-4185-8ba8-b3ae42a5a455";
    iid  :: IID_ID3D12GraphicsCommandList;
}

ID3D12GraphicsCommandList_VTable :: struct {
    using command_list : ID3D12CommandList_VTable;
    Close : (this: *ID3D12GraphicsCommandList) -> HRESULT #cpp_method #foreign;
    Reset : (this: *ID3D12GraphicsCommandList, pAllocator: *ID3D12CommandAllocator, pInitialState: *ID3D12PipelineState) -> HRESULT #cpp_method #foreign;
    ClearState : (this: *ID3D12GraphicsCommandList, pPipelineState: *ID3D12PipelineState) -> void #cpp_method #foreign;
    DrawInstanced : (this: *ID3D12GraphicsCommandList, VertexCountPerInstance: u32, InstanceCount: u32, StartVertexLocation: u32, StartInstanceLocation: u32) -> void #cpp_method #foreign;
    DrawIndexedInstanced : (this: *ID3D12GraphicsCommandList, IndexCountPerInstance: u32, InstanceCount: u32, StartIndexLocation: u32, BaseVertexLocation: s32, StartInstanceLocation: u32) -> void #cpp_method #foreign;
    Dispatch : (this: *ID3D12GraphicsCommandList, ThreadGroupCountX: u32, ThreadGroupCountY: u32, ThreadGroupCountZ: u32) -> void #cpp_method #foreign;
    CopyBufferRegion : (this: *ID3D12GraphicsCommandList, pDstBuffer: *ID3D12Resource, DstOffset: u64, pSrcBuffer: *ID3D12Resource, SrcOffset: u64, NumBytes: u64) -> void #cpp_method #foreign;
    CopyTextureRegion : (this: *ID3D12GraphicsCommandList, pDst: *D3D12_TEXTURE_COPY_LOCATION, DstX: u32, DstY: u32, DstZ: u32, pSrc: *D3D12_TEXTURE_COPY_LOCATION, pSrcBox: *D3D12_BOX) -> void #cpp_method #foreign;
    CopyResource : (this: *ID3D12GraphicsCommandList, pDstResource: *ID3D12Resource, pSrcResource: *ID3D12Resource) -> void #cpp_method #foreign;
    CopyTiles : (this: *ID3D12GraphicsCommandList, pTiledResource: *ID3D12Resource, pTileRegionStartCoordinate: *D3D12_TILED_RESOURCE_COORDINATE, pTileRegionSize: *D3D12_TILE_REGION_SIZE, pBuffer: *ID3D12Resource, BufferStartOffsetInBytes: u64, Flags: D3D12_TILE_COPY_FLAGS) -> void #cpp_method #foreign;
    ResolveSubresource : (this: *ID3D12GraphicsCommandList, pDstResource: *ID3D12Resource, DstSubresource: u32, pSrcResource: *ID3D12Resource, SrcSubresource: u32, Format: DXGI_FORMAT) -> void #cpp_method #foreign;
    IASetPrimitiveTopology : (this: *ID3D12GraphicsCommandList, PrimitiveTopology: D3D12_PRIMITIVE_TOPOLOGY) -> void #cpp_method #foreign;
    RSSetViewports : (this: *ID3D12GraphicsCommandList, NumViewports: u32, pViewports: *D3D12_VIEWPORT) -> void #cpp_method #foreign;
    RSSetScissorRects : (this: *ID3D12GraphicsCommandList, NumRects: u32, pRects: *D3D12_RECT) -> void #cpp_method #foreign;
    OMSetBlendFactor : (this: *ID3D12GraphicsCommandList, BlendFactor: *[4] float) -> void #cpp_method #foreign;
    OMSetStencilRef : (this: *ID3D12GraphicsCommandList, StencilRef: u32) -> void #cpp_method #foreign;
    SetPipelineState : (this: *ID3D12GraphicsCommandList, pPipelineState: *ID3D12PipelineState) -> void #cpp_method #foreign;
    ResourceBarrier : (this: *ID3D12GraphicsCommandList, NumBarriers: u32, pBarriers: *D3D12_RESOURCE_BARRIER) -> void #cpp_method #foreign;
    ExecuteBundle : (this: *ID3D12GraphicsCommandList, pCommandList: *ID3D12GraphicsCommandList) -> void #cpp_method #foreign;
    SetDescriptorHeaps : (this: *ID3D12GraphicsCommandList, NumDescriptorHeaps: u32, ppDescriptorHeaps: **ID3D12DescriptorHeap) -> void #cpp_method #foreign;
    SetComputeRootSignature : (this: *ID3D12GraphicsCommandList, pRootSignature: *ID3D12RootSignature) -> void #cpp_method #foreign;
    SetGraphicsRootSignature : (this: *ID3D12GraphicsCommandList, pRootSignature: *ID3D12RootSignature) -> void #cpp_method #foreign;
    SetComputeRootDescriptorTable : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE) -> void #cpp_method #foreign;
    SetGraphicsRootDescriptorTable : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE) -> void #cpp_method #foreign;
    SetComputeRoot32BitConstant : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, SrcData: u32, DestOffsetIn32BitValues: u32) -> void #cpp_method #foreign;
    SetGraphicsRoot32BitConstant : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, SrcData: u32, DestOffsetIn32BitValues: u32) -> void #cpp_method #foreign;
    SetComputeRoot32BitConstants : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, Num32BitValuesToSet: u32, pSrcData: *void, DestOffsetIn32BitValues: u32) -> void #cpp_method #foreign;
    SetGraphicsRoot32BitConstants : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, Num32BitValuesToSet: u32, pSrcData: *void, DestOffsetIn32BitValues: u32) -> void #cpp_method #foreign;
    SetComputeRootConstantBufferView : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) -> void #cpp_method #foreign;
    SetGraphicsRootConstantBufferView : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) -> void #cpp_method #foreign;
    SetComputeRootShaderResourceView : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) -> void #cpp_method #foreign;
    SetGraphicsRootShaderResourceView : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) -> void #cpp_method #foreign;
    SetComputeRootUnorderedAccessView : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) -> void #cpp_method #foreign;
    SetGraphicsRootUnorderedAccessView : (this: *ID3D12GraphicsCommandList, RootParameterIndex: u32, BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS) -> void #cpp_method #foreign;
    IASetIndexBuffer : (this: *ID3D12GraphicsCommandList, pView: *D3D12_INDEX_BUFFER_VIEW) -> void #cpp_method #foreign;
    IASetVertexBuffers : (this: *ID3D12GraphicsCommandList, StartSlot: u32, NumViews: u32, pViews: *D3D12_VERTEX_BUFFER_VIEW) -> void #cpp_method #foreign;
    SOSetTargets : (this: *ID3D12GraphicsCommandList, StartSlot: u32, NumViews: u32, pViews: *D3D12_STREAM_OUTPUT_BUFFER_VIEW) -> void #cpp_method #foreign;
    OMSetRenderTargets : (this: *ID3D12GraphicsCommandList, NumRenderTargetDescriptors: u32, pRenderTargetDescriptors: *D3D12_CPU_DESCRIPTOR_HANDLE, RTsSingleHandleToDescriptorRange: BOOL, pDepthStencilDescriptor: *D3D12_CPU_DESCRIPTOR_HANDLE) -> void #cpp_method #foreign;
    ClearDepthStencilView : (this: *ID3D12GraphicsCommandList, DepthStencilView: D3D12_CPU_DESCRIPTOR_HANDLE, ClearFlags: D3D12_CLEAR_FLAGS, Depth: float, Stencil: u8, NumRects: u32, pRects: *D3D12_RECT) -> void #cpp_method #foreign;
    ClearRenderTargetView : (this: *ID3D12GraphicsCommandList, RenderTargetView: D3D12_CPU_DESCRIPTOR_HANDLE, ColorRGBA: *[4] float, NumRects: u32, pRects: *D3D12_RECT) -> void #cpp_method #foreign;
    ClearUnorderedAccessViewUint : (this: *ID3D12GraphicsCommandList, ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE, ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE, pResource: *ID3D12Resource, Values: *[4] u32, NumRects: u32, pRects: *D3D12_RECT) -> void #cpp_method #foreign;
    ClearUnorderedAccessViewFloat : (this: *ID3D12GraphicsCommandList, ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE, ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE, pResource: *ID3D12Resource, Values: *[4] float, NumRects: u32, pRects: *D3D12_RECT) -> void #cpp_method #foreign;
    DiscardResource : (this: *ID3D12GraphicsCommandList, pResource: *ID3D12Resource, pRegion: *D3D12_DISCARD_REGION) -> void #cpp_method #foreign;
    BeginQuery : (this: *ID3D12GraphicsCommandList, pQueryHeap: *ID3D12QueryHeap, Type: D3D12_QUERY_TYPE, Index: u32) -> void #cpp_method #foreign;
    EndQuery : (this: *ID3D12GraphicsCommandList, pQueryHeap: *ID3D12QueryHeap, Type: D3D12_QUERY_TYPE, Index: u32) -> void #cpp_method #foreign;
    ResolveQueryData : (this: *ID3D12GraphicsCommandList, pQueryHeap: *ID3D12QueryHeap, Type: D3D12_QUERY_TYPE, StartIndex: u32, NumQueries: u32, pDestinationBuffer: *ID3D12Resource, AlignedDestinationBufferOffset: u64) -> void #cpp_method #foreign;
    SetPredication : (this: *ID3D12GraphicsCommandList, pBuffer: *ID3D12Resource, AlignedBufferOffset: u64, Operation: D3D12_PREDICATION_OP) -> void #cpp_method #foreign;
    SetMarker : (this: *ID3D12GraphicsCommandList, Metadata: u32, pData: *void, Size: u32) -> void #cpp_method #foreign;
    BeginEvent : (this: *ID3D12GraphicsCommandList, Metadata: u32, pData: *void, Size: u32) -> void #cpp_method #foreign;
    EndEvent : (this: *ID3D12GraphicsCommandList) -> void #cpp_method #foreign;
    ExecuteIndirect : (this: *ID3D12GraphicsCommandList, pCommandSignature: *ID3D12CommandSignature, MaxCommandCount: u32, pArgumentBuffer: *ID3D12Resource, ArgumentBufferOffset: u64, pCountBuffer: *ID3D12Resource, CountBufferOffset: u64) -> void #cpp_method #foreign;
}

ID3D12GraphicsCommandList1 :: struct {
    using vtable : *ID3D12GraphicsCommandList1_VTable;
    uuid :: "553103fb-1fe7-4557-bb38-946d7d0e7ca7";
    iid  :: IID_ID3D12GraphicsCommandList1;
}

ID3D12GraphicsCommandList1_VTable :: struct {
    using graphics_command_list : ID3D12GraphicsCommandList_VTable;
    AtomicCopyBufferUINT : (this: *ID3D12GraphicsCommandList1, pDstBuffer: *ID3D12Resource, DstOffset: u64, pSrcBuffer: *ID3D12Resource, SrcOffset: u64, Dependencies: u32, ppDependentResources: **ID3D12Resource, pDependentSubresourceRanges: *D3D12_SUBRESOURCE_RANGE_UINT64) -> void #cpp_method #foreign;
    AtomicCopyBufferUINT64 : (this: *ID3D12GraphicsCommandList1, pDstBuffer: *ID3D12Resource, DstOffset: u64, pSrcBuffer: *ID3D12Resource, SrcOffset: u64, Dependencies: u32, ppDependentResources: **ID3D12Resource, pDependentSubresourceRanges: *D3D12_SUBRESOURCE_RANGE_UINT64) -> void #cpp_method #foreign;
    OMSetDepthBounds : (this: *ID3D12GraphicsCommandList1, Min: float, Max: float) -> void #cpp_method #foreign;
    SetSamplePositions : (this: *ID3D12GraphicsCommandList1, NumSamplesPerPixel: u32, NumPixels: u32, pSamplePositions: *D3D12_SAMPLE_POSITION) -> void #cpp_method #foreign;
    ResolveSubresourceRegion : (this: *ID3D12GraphicsCommandList1, pDstResource: *ID3D12Resource, DstSubresource: u32, DstX: u32, DstY: u32, pSrcResource: *ID3D12Resource, SrcSubresource: u32, pSrcRect: *D3D12_RECT, Format: DXGI_FORMAT, ResolveMode: D3D12_RESOLVE_MODE) -> void #cpp_method #foreign;
    SetViewInstanceMask : (this: *ID3D12GraphicsCommandList1, Mask: u32) -> void #cpp_method #foreign;
}

D3D12_WRITEBUFFERIMMEDIATE_PARAMETER :: struct {
    Dest: D3D12_GPU_VIRTUAL_ADDRESS;
    Value: u32;
}

using D3D12_WRITEBUFFERIMMEDIATE_MODE :: enum u32 {
    D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT :: 0;
    D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_IN :: 1;
    D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_OUT :: 2;
}

ID3D12GraphicsCommandList2 :: struct {
    using vtable : *ID3D12GraphicsCommandList2_VTable;
    uuid :: "553103fb-1fe7-4557-bb38-946d7d0e7ca7";
    iid  :: IID_ID3D12GraphicsCommandList2;
}

ID3D12GraphicsCommandList2_VTable :: struct {
    using graphics_command_list1: ID3D12GraphicsCommandList1_VTable;
    WriteBufferImmediate : (this: *ID3D12GraphicsCommandList2, Count: u32, pParams: *D3D12_WRITEBUFFERIMMEDIATE_PARAMETER, pModes: *D3D12_WRITEBUFFERIMMEDIATE_MODE) -> void #cpp_method #foreign;
}

ID3D12CommandQueue :: struct {
    using vtable : *ID3D12CommandQueue_VTable;
    uuid :: "0ec870a6-5d7e-4c22-8cfc-5baae07616ed";
    iid  :: IID_ID3D12CommandQueue;
}

ID3D12CommandQueue_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
    UpdateTileMappings : (this: *ID3D12CommandQueue, pResource: *ID3D12Resource, NumResourceRegions: u32, pResourceRegionStartCoordinates: *D3D12_TILED_RESOURCE_COORDINATE, pResourceRegionSizes: *D3D12_TILE_REGION_SIZE, pHeap: *ID3D12Heap, NumRanges: u32, pRangeFlags: *D3D12_TILE_RANGE_FLAGS, pHeapRangeStartOffsets: *u32, pRangeTileCounts: *u32, Flags: D3D12_TILE_MAPPING_FLAGS) -> void #cpp_method #foreign;
    CopyTileMappings : (this: *ID3D12CommandQueue, pDstResource: *ID3D12Resource, pDstRegionStartCoordinate: *D3D12_TILED_RESOURCE_COORDINATE, pSrcResource: *ID3D12Resource, pSrcRegionStartCoordinate: *D3D12_TILED_RESOURCE_COORDINATE, pRegionSize: *D3D12_TILE_REGION_SIZE, Flags: D3D12_TILE_MAPPING_FLAGS) -> void #cpp_method #foreign;
    ExecuteCommandLists : (this: *ID3D12CommandQueue, NumCommandLists: u32, ppCommandLists: **ID3D12CommandList) -> void #cpp_method #foreign;
    SetMarker : (this: *ID3D12CommandQueue, Metadata: u32, pData: *void, Size: u32) -> void #cpp_method #foreign;
    BeginEvent : (this: *ID3D12CommandQueue, Metadata: u32, pData: *void, Size: u32) -> void #cpp_method #foreign;
    EndEvent : (this: *ID3D12CommandQueue) -> void #cpp_method #foreign;
    Signal : (this: *ID3D12CommandQueue, pFence: *ID3D12Fence, Value: u64) -> HRESULT #cpp_method #foreign;
    Wait : (this: *ID3D12CommandQueue, pFence: *ID3D12Fence, Value: u64) -> HRESULT #cpp_method #foreign;
    GetTimestampFrequency : (this: *ID3D12CommandQueue, pFrequency: *u64) -> HRESULT #cpp_method #foreign;
    GetClockCalibration : (this: *ID3D12CommandQueue, pGpuTimestamp: *u64, pCpuTimestamp: *u64) -> HRESULT #cpp_method #foreign;
    GetDesc : (this: *ID3D12CommandQueue) -> D3D12_COMMAND_QUEUE_DESC #cpp_method #foreign;
}

ID3D12Device :: struct {
    using vtable : *ID3D12Device_VTable;
    uuid :: "189819f1-1db6-4b57-be54-1821339b85f7";
    iid  :: IID_ID3D12Device;
}

ID3D12Device_VTable :: struct {
    using object : ID3D12Object_VTable;
    GetNodeCount : (this: *ID3D12Device) -> u32 #cpp_method #foreign;
    CreateCommandQueue : (this: *ID3D12Device, pDesc: *D3D12_COMMAND_QUEUE_DESC, riid: *IID, ppCommandQueue: **void) -> HRESULT #cpp_method #foreign;
    CreateCommandAllocator : (this: *ID3D12Device, type: D3D12_COMMAND_LIST_TYPE, riid: *IID, ppCommandAllocator: **void) -> HRESULT #cpp_method #foreign;
    CreateGraphicsPipelineState : (this: *ID3D12Device, pDesc: *D3D12_GRAPHICS_PIPELINE_STATE_DESC, riid: *IID, ppPipelineState: **void) -> HRESULT #cpp_method #foreign;
    CreateComputePipelineState : (this: *ID3D12Device, pDesc: *D3D12_COMPUTE_PIPELINE_STATE_DESC, riid: *IID, ppPipelineState: **void) -> HRESULT #cpp_method #foreign;
    CreateCommandList : (this: *ID3D12Device, nodeMask: u32, type: D3D12_COMMAND_LIST_TYPE, pCommandAllocator: *ID3D12CommandAllocator, pInitialState: *ID3D12PipelineState, riid: *IID, ppCommandList: **void) -> HRESULT #cpp_method #foreign;
    CheckFeatureSupport : (this: *ID3D12Device, Feature: D3D12_FEATURE, pFeatureSupportData: *void, FeatureSupportDataSize: u32) -> HRESULT #cpp_method #foreign;
    CreateDescriptorHeap : (this: *ID3D12Device, pDescriptorHeapDesc: *D3D12_DESCRIPTOR_HEAP_DESC, riid: *IID, ppvHeap: **void) -> HRESULT #cpp_method #foreign;
    GetDescriptorHandleIncrementSize : (this: *ID3D12Device, DescriptorHeapType: D3D12_DESCRIPTOR_HEAP_TYPE) -> u32 #cpp_method #foreign;
    CreateRootSignature : (this: *ID3D12Device, nodeMask: u32, pBlobWithRootSignature: *void, blobLengthInBytes: SIZE_T, riid: *IID, ppvRootSignature: **void) -> HRESULT #cpp_method #foreign;
    CreateConstantBufferView : (this: *ID3D12Device, pDesc: *D3D12_CONSTANT_BUFFER_VIEW_DESC, DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) -> void #cpp_method #foreign;
    CreateShaderResourceView : (this: *ID3D12Device, pResource: *ID3D12Resource, pDesc: *D3D12_SHADER_RESOURCE_VIEW_DESC, DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) -> void #cpp_method #foreign;
    CreateUnorderedAccessView : (this: *ID3D12Device, pResource: *ID3D12Resource, pCounterResource: *ID3D12Resource, pDesc: *D3D12_UNORDERED_ACCESS_VIEW_DESC, DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) -> void #cpp_method #foreign;
    CreateRenderTargetView : (this: *ID3D12Device, pResource: *ID3D12Resource, pDesc: *D3D12_RENDER_TARGET_VIEW_DESC, DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) -> void #cpp_method #foreign;
    CreateDepthStencilView : (this: *ID3D12Device, pResource: *ID3D12Resource, pDesc: *D3D12_DEPTH_STENCIL_VIEW_DESC, DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) -> void #cpp_method #foreign;
    CreateSampler : (this: *ID3D12Device, pDesc: *D3D12_SAMPLER_DESC, DestDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE) -> void #cpp_method #foreign;
    CopyDescriptors : (this: *ID3D12Device, NumDestDescriptorRanges: u32, pDestDescriptorRangeStarts: *D3D12_CPU_DESCRIPTOR_HANDLE, pDestDescriptorRangeSizes: *u32, NumSrcDescriptorRanges: u32, pSrcDescriptorRangeStarts: *D3D12_CPU_DESCRIPTOR_HANDLE, pSrcDescriptorRangeSizes: *u32, DescriptorHeapsType: D3D12_DESCRIPTOR_HEAP_TYPE) -> void #cpp_method #foreign;
    CopyDescriptorsSimple : (this: *ID3D12Device, NumDescriptors: u32, DestDescriptorRangeStart: D3D12_CPU_DESCRIPTOR_HANDLE, SrcDescriptorRangeStart: D3D12_CPU_DESCRIPTOR_HANDLE, DescriptorHeapsType: D3D12_DESCRIPTOR_HEAP_TYPE) -> void #cpp_method #foreign;
    GetResourceAllocationInfo : (this: *ID3D12Device, visibleMask: u32, numResourceDescs: u32, pResourceDescs: *D3D12_RESOURCE_DESC) -> D3D12_RESOURCE_ALLOCATION_INFO #cpp_method #foreign;
    GetCustomHeapProperties : (this: *ID3D12Device, nodeMask: u32, heapType: D3D12_HEAP_TYPE) -> D3D12_HEAP_PROPERTIES #cpp_method #foreign;
    CreateCommittedResource : (this: *ID3D12Device, pHeapProperties: *D3D12_HEAP_PROPERTIES, HeapFlags: D3D12_HEAP_FLAGS, pDesc: *D3D12_RESOURCE_DESC, InitialResourceState: D3D12_RESOURCE_STATES, pOptimizedClearValue: *D3D12_CLEAR_VALUE, riidResource: *IID, ppvResource: **void) -> HRESULT #cpp_method #foreign;
    CreateHeap : (this: *ID3D12Device, pDesc: *D3D12_HEAP_DESC, riid: *IID, ppvHeap: **void) -> HRESULT #cpp_method #foreign;
    CreatePlacedResource : (this: *ID3D12Device, pHeap: *ID3D12Heap, HeapOffset: u64, pDesc: *D3D12_RESOURCE_DESC, InitialState: D3D12_RESOURCE_STATES, pOptimizedClearValue: *D3D12_CLEAR_VALUE, riid: *IID, ppvResource: **void) -> HRESULT #cpp_method #foreign;
    CreateReservedResource : (this: *ID3D12Device, pDesc: *D3D12_RESOURCE_DESC, InitialState: D3D12_RESOURCE_STATES, pOptimizedClearValue: *D3D12_CLEAR_VALUE, riid: *IID, ppvResource: **void) -> HRESULT #cpp_method #foreign;
    CreateSharedHandle : (this: *ID3D12Device, pObject: *ID3D12DeviceChild, pAttributes: *SECURITY_ATTRIBUTES, Access: DWORD, Name: LPCWSTR, pHandle: *HANDLE) -> HRESULT #cpp_method #foreign;
    OpenSharedHandle : (this: *ID3D12Device, NTHandle: HANDLE, riid: *IID, ppvObj: **void) -> HRESULT #cpp_method #foreign;
    OpenSharedHandleByName : (this: *ID3D12Device, Name: LPCWSTR, Access: DWORD, pNTHandle: *HANDLE) -> HRESULT #cpp_method #foreign;
    MakeResident : (this: *ID3D12Device, NumObjects: u32, ppObjects: **ID3D12Pageable) -> HRESULT #cpp_method #foreign;
    Evict : (this: *ID3D12Device, NumObjects: u32, ppObjects: **ID3D12Pageable) -> HRESULT #cpp_method #foreign;
    CreateFence : (this: *ID3D12Device, InitialValue: u64, Flags: D3D12_FENCE_FLAGS, riid: *IID, ppFence: **void) -> HRESULT #cpp_method #foreign;
    GetDeviceRemovedReason : (this: *ID3D12Device) -> HRESULT #cpp_method #foreign;
    GetCopyableFootprints : (this: *ID3D12Device, pResourceDesc: *D3D12_RESOURCE_DESC, FirstSubresource: u32, NumSubresources: u32, BaseOffset: u64, pLayouts: *D3D12_PLACED_SUBRESOURCE_FOOTPRINT, pNumRows: *u32, pRowSizeInBytes: *u64, pTotalBytes: *u64) -> void #cpp_method #foreign;
    CreateQueryHeap : (this: *ID3D12Device, pDesc: *D3D12_QUERY_HEAP_DESC, riid: *IID, ppvHeap: **void) -> HRESULT #cpp_method #foreign;
    SetStablePowerState : (this: *ID3D12Device, Enable: BOOL) -> HRESULT #cpp_method #foreign;
    CreateCommandSignature : (this: *ID3D12Device, pDesc: *D3D12_COMMAND_SIGNATURE_DESC, pRootSignature: *ID3D12RootSignature, riid: *IID, ppvCommandSignature: **void) -> HRESULT #cpp_method #foreign;
    GetResourceTiling : (this: *ID3D12Device, pTiledResource: *ID3D12Resource, pNumTilesForEntireResource: *u32, pPackedMipDesc: *D3D12_PACKED_MIP_INFO, pStandardTileShapeForNonPackedMips: *D3D12_TILE_SHAPE, pNumSubresourceTilings: *u32, FirstSubresourceTilingToGet: u32, pSubresourceTilingsForNonPackedMips: *D3D12_SUBRESOURCE_TILING) -> void #cpp_method #foreign;
    GetAdapterLuid : (this: *ID3D12Device) -> LUID #cpp_method #foreign;
}

ID3D12PipelineLibrary :: struct {
    using vtable : *ID3D12PipelineLibrary_VTable;
    uuid :: "c64226a8-9201-46af-b4cc-53fb9ff7414f";
    iid  :: IID_ID3D12PipelineLibrary;
}

ID3D12PipelineLibrary_VTable :: struct {
    using device_child : ID3D12DeviceChild_VTable;
    StorePipeline : (this: *ID3D12PipelineLibrary, pName: LPCWSTR, pPipeline: *ID3D12PipelineState) -> HRESULT #cpp_method #foreign;
    LoadGraphicsPipeline : (this: *ID3D12PipelineLibrary, pName: LPCWSTR, pDesc: *D3D12_GRAPHICS_PIPELINE_STATE_DESC, riid: *IID, ppPipelineState: **void) -> HRESULT #cpp_method #foreign;
    LoadComputePipeline : (this: *ID3D12PipelineLibrary, pName: LPCWSTR, pDesc: *D3D12_COMPUTE_PIPELINE_STATE_DESC, riid: *IID, ppPipelineState: **void) -> HRESULT #cpp_method #foreign;
    GetSerializedSize : (this: *ID3D12PipelineLibrary) -> SIZE_T #cpp_method #foreign;
    Serialize : (this: *ID3D12PipelineLibrary, pData: *void, DataSizeInBytes: SIZE_T) -> HRESULT #cpp_method #foreign;
}

ID3D12PipelineLibrary1 :: struct {
    using vtable : *ID3D12PipelineLibrary1_VTable;
    uuid :: "80eabf42-2568-4e5e-bd82-c37f86961dc3";
    iid  :: IID_ID3D12PipelineLibrary1;
}

ID3D12PipelineLibrary1_VTable :: struct {
    using pipeline_library : ID3D12PipelineLibrary_VTable;
    LoadPipeline : (this: *ID3D12PipelineLibrary1, pName: LPCWSTR, pDesc: *D3D12_PIPELINE_STATE_STREAM_DESC, riid: *IID, ppPipelineState: **void) -> HRESULT #cpp_method #foreign;
}

using D3D12_MULTIPLE_FENCE_WAIT_FLAGS :: enum_flags u32 {
    D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE :: 0;
    D3D12_MULTIPLE_FENCE_WAIT_FLAG_ANY :: 1;
    D3D12_MULTIPLE_FENCE_WAIT_FLAG_ALL :: 0;
}

using D3D12_RESIDENCY_PRIORITY :: enum s32 {
    D3D12_RESIDENCY_PRIORITY_MINIMUM :: 671088640;
    D3D12_RESIDENCY_PRIORITY_LOW :: 1342177280;
    D3D12_RESIDENCY_PRIORITY_NORMAL :: 2013265920;
    D3D12_RESIDENCY_PRIORITY_HIGH :: -1610547200;
    D3D12_RESIDENCY_PRIORITY_MAXIMUM :: -939524096;
}

ID3D12Device1 :: struct {
    using vtable : *ID3D12Device1_VTable;
    uuid :: "77acce80-638e-4e65-8895-c1f23386863e";
    iid  :: IID_ID3D12Device1;
}

ID3D12Device1_VTable :: struct {
    using device : ID3D12Device_VTable;
    CreatePipelineLibrary : (this: *ID3D12Device1, pLibraryBlob: *void, BlobLength: SIZE_T, riid: *IID, ppPipelineLibrary: **void) -> HRESULT #cpp_method #foreign;
    SetEventOnMultipleFenceCompletion : (this: *ID3D12Device1, ppFences: **ID3D12Fence, pFenceValues: *u64, NumFences: u32, Flags: D3D12_MULTIPLE_FENCE_WAIT_FLAGS, hEvent: HANDLE) -> HRESULT #cpp_method #foreign;
    SetResidencyPriority : (this: *ID3D12Device1, NumObjects: u32, ppObjects: **ID3D12Pageable, pPriorities: *D3D12_RESIDENCY_PRIORITY) -> HRESULT #cpp_method #foreign;
}

ID3D12Device2 :: struct {
    using vtable : *ID3D12Device2_VTable;
    uuid :: "30baa41e-b15b-475c-a0bb-1af5c5b64328";
    iid  :: IID_ID3D12Device2;
}

ID3D12Device2_VTable :: struct {
    using device1 : ID3D12Device1_VTable;
    CreatePipelineState : (this: *ID3D12Device2, pDesc: *D3D12_PIPELINE_STATE_STREAM_DESC, riid: *IID, ppPipelineState: **void) -> HRESULT #cpp_method #foreign;
}

using D3D12_RESIDENCY_FLAGS :: enum_flags u32 {
    D3D12_RESIDENCY_FLAG_NONE :: 0;
    D3D12_RESIDENCY_FLAG_DENY_OVERBUDGET :: 1;
}

ID3D12Device3 :: struct {
    using vtable : *ID3D12Device3_VTable;
    uuid :: "81dadc15-2bad-4392-93c5-101345c4aa98";
    iid  :: IID_ID3D12Device3;
}

ID3D12Device3_VTable :: struct {
    using device2 : ID3D12Device2_VTable;
    OpenExistingHeapFromAddress : (this: *ID3D12Device3, pAddress: *void, riid: *IID, ppvHeap: **void) -> HRESULT #cpp_method #foreign;
    OpenExistingHeapFromFileMapping : (this: *ID3D12Device3, hFileMapping: HANDLE, riid: *IID, ppvHeap: **void) -> HRESULT #cpp_method #foreign;
    EnqueueMakeResident : (this: *ID3D12Device3, Flags: D3D12_RESIDENCY_FLAGS, NumObjects: u32, ppObjects: **ID3D12Pageable, pFenceToSignal: *ID3D12Fence, FenceValueToSignal: u64) -> HRESULT #cpp_method #foreign;
}

using D3D12_COMMAND_LIST_FLAGS :: enum_flags u32 {
    D3D12_COMMAND_LIST_FLAG_NONE :: 0;
}

using D3D12_COMMAND_POOL_FLAGS :: enum_flags u32 {
    D3D12_COMMAND_POOL_FLAG_NONE :: 0;
}

using D3D12_COMMAND_RECORDER_FLAGS :: enum_flags u32 {
    D3D12_COMMAND_RECORDER_FLAG_NONE :: 0;
}

using D3D12_PROTECTED_SESSION_STATUS :: enum u32 {
    D3D12_PROTECTED_SESSION_STATUS_OK :: 0;
    D3D12_PROTECTED_SESSION_STATUS_INVALID :: 1;
}

ID3D12ProtectedSession :: struct {
    using vtable : *ID3D12ProtectedSession_VTable;
    uuid :: "A1533D18-0AC1-4084-85B9-89A96116806B";
    iid  :: IID_ID3D12ProtectedSession;
}

ID3D12ProtectedSession_VTable :: struct {
    using device_child : ID3D12DeviceChild_VTable;
    GetStatusFence : (this: *ID3D12ProtectedSession, riid: *IID, ppFence: **void) -> HRESULT #cpp_method #foreign;
    GetSessionStatus : (this: *ID3D12ProtectedSession) -> D3D12_PROTECTED_SESSION_STATUS #cpp_method #foreign;
}

using D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS :: enum_flags u32 {
    D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_NONE :: 0;
    D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED :: 1;
}

D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT :: struct {
    NodeIndex: u32;
    Support: D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS;
}

using D3D12_PROTECTED_RESOURCE_SESSION_FLAGS :: enum_flags u32 {
    D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE :: 0;
}

D3D12_PROTECTED_RESOURCE_SESSION_DESC :: struct {
    NodeMask: u32;
    Flags: D3D12_PROTECTED_RESOURCE_SESSION_FLAGS;
}

ID3D12ProtectedResourceSession :: struct {
    using vtable : *ID3D12ProtectedResourceSession_VTable;
    uuid :: "6CD696F4-F289-40CC-8091-5A6C0A099C3D";
    iid  :: IID_ID3D12ProtectedResourceSession;
}

ID3D12ProtectedResourceSession_VTable :: struct {
    using protected_session : ID3D12ProtectedSession_VTable;
    GetDesc : (this: *ID3D12ProtectedResourceSession) -> D3D12_PROTECTED_RESOURCE_SESSION_DESC #cpp_method #foreign;
}

ID3D12Device4 :: struct {
    using vtable : *ID3D12Device4_VTable;
    uuid :: "e865df17-a9ee-46f9-a463-3098315aa2e5";
    iid  :: IID_ID3D12Device4;
}

ID3D12Device4_VTable :: struct {
    using device3 : ID3D12Device3_VTable;
    CreateCommandList1 : (this: *ID3D12Device4, nodeMask: u32, type: D3D12_COMMAND_LIST_TYPE, flags: D3D12_COMMAND_LIST_FLAGS, riid: *IID, ppCommandList: **void) -> HRESULT #cpp_method #foreign;
    CreateProtectedResourceSession : (this: *ID3D12Device4, pDesc: *D3D12_PROTECTED_RESOURCE_SESSION_DESC, riid: *IID, ppSession: **void) -> HRESULT #cpp_method #foreign;
    CreateCommittedResource1 : (this: *ID3D12Device4, pHeapProperties: *D3D12_HEAP_PROPERTIES, HeapFlags: D3D12_HEAP_FLAGS, pDesc: *D3D12_RESOURCE_DESC, InitialResourceState: D3D12_RESOURCE_STATES, pOptimizedClearValue: *D3D12_CLEAR_VALUE, pProtectedSession: *ID3D12ProtectedResourceSession, riidResource: *IID, ppvResource: **void) -> HRESULT #cpp_method #foreign;
    CreateHeap1 : (this: *ID3D12Device4, pDesc: *D3D12_HEAP_DESC, pProtectedSession: *ID3D12ProtectedResourceSession, riid: *IID, ppvHeap: **void) -> HRESULT #cpp_method #foreign;
    CreateReservedResource1 : (this: *ID3D12Device4, pDesc: *D3D12_RESOURCE_DESC, InitialState: D3D12_RESOURCE_STATES, pOptimizedClearValue: *D3D12_CLEAR_VALUE, pProtectedSession: *ID3D12ProtectedResourceSession, riid: *IID, ppvResource: **void) -> HRESULT #cpp_method #foreign;
    GetResourceAllocationInfo1 : (this: *ID3D12Device4, visibleMask: u32, numResourceDescs: u32, pResourceDescs: *D3D12_RESOURCE_DESC, pResourceAllocationInfo1: *D3D12_RESOURCE_ALLOCATION_INFO1) -> D3D12_RESOURCE_ALLOCATION_INFO #cpp_method #foreign;
}

using D3D12_LIFETIME_STATE :: enum u32 {
    D3D12_LIFETIME_STATE_IN_USE :: 0;
    D3D12_LIFETIME_STATE_NOT_IN_USE :: 1;
}

ID3D12LifetimeOwner :: struct {
    using vtable : *ID3D12LifetimeOwner_VTable;
    uuid :: "e667af9f-cd56-4f46-83ce-032e595d70a8";
    iid  :: IID_ID3D12LifetimeOwner;
}

ID3D12LifetimeOwner_VTable :: struct {
    using unknown : IUnknown_VTable;
    LifetimeStateUpdated : (this: *ID3D12LifetimeOwner, NewState: D3D12_LIFETIME_STATE) -> void #cpp_method #foreign;
}

ID3D12SwapChainAssistant :: struct {
    using vtable : *ID3D12SwapChainAssistant_VTable;
    uuid :: "f1df64b6-57fd-49cd-8807-c0eb88b45c8f";
    iid  :: IID_ID3D12SwapChainAssistant;
}

ID3D12SwapChainAssistant_VTable :: struct {
    using unknown : IUnknown_VTable;
    GetLUID : (this: *ID3D12SwapChainAssistant) -> LUID #cpp_method #foreign;
    GetSwapChainObject : (this: *ID3D12SwapChainAssistant, riid: *IID, ppv: **void) -> HRESULT #cpp_method #foreign;
    GetCurrentResourceAndCommandQueue : (this: *ID3D12SwapChainAssistant, riidResource: *IID, ppvResource: **void, riidQueue: *IID, ppvQueue: **void) -> HRESULT #cpp_method #foreign;
    InsertImplicitSync : (this: *ID3D12SwapChainAssistant) -> HRESULT #cpp_method #foreign;
}

ID3D12LifetimeTracker :: struct {
    using vtable : *ID3D12LifetimeTracker_VTable;
    uuid :: "3fd03d36-4eb1-424a-a582-494ecb8ba813";
    iid  :: IID_ID3D12LifetimeTracker;
}

ID3D12LifetimeTracker_VTable :: struct {
    using device_child : ID3D12DeviceChild_VTable;
    DestroyOwnedObject : (this: *ID3D12LifetimeTracker, pObject: *ID3D12DeviceChild) -> HRESULT #cpp_method #foreign;
}

using D3D12_META_COMMAND_PARAMETER_TYPE :: enum u32 {
    D3D12_META_COMMAND_PARAMETER_TYPE_FLOAT :: 0;
    D3D12_META_COMMAND_PARAMETER_TYPE_UINT64 :: 1;
    D3D12_META_COMMAND_PARAMETER_TYPE_GPU_VIRTUAL_ADDRESS :: 2;
    D3D12_META_COMMAND_PARAMETER_TYPE_CPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV :: 3;
    D3D12_META_COMMAND_PARAMETER_TYPE_GPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV :: 4;
}

using D3D12_META_COMMAND_PARAMETER_FLAGS :: enum_flags u32 {
    D3D12_META_COMMAND_PARAMETER_FLAG_INPUT :: 1;
    D3D12_META_COMMAND_PARAMETER_FLAG_OUTPUT :: 2;
}

using D3D12_META_COMMAND_PARAMETER_STAGE :: enum u32 {
    D3D12_META_COMMAND_PARAMETER_STAGE_CREATION :: 0;
    D3D12_META_COMMAND_PARAMETER_STAGE_INITIALIZATION :: 1;
    D3D12_META_COMMAND_PARAMETER_STAGE_EXECUTION :: 2;
}

D3D12_META_COMMAND_PARAMETER_DESC :: struct {
    Name: LPCWSTR;
    Type: D3D12_META_COMMAND_PARAMETER_TYPE;
    Flags: D3D12_META_COMMAND_PARAMETER_FLAGS;
    RequiredResourceState: D3D12_RESOURCE_STATES;
    StructureOffset: u32;
}

using D3D12_GRAPHICS_STATES :: enum u32 {
    D3D12_GRAPHICS_STATE_NONE :: 0;
    D3D12_GRAPHICS_STATE_IA_VERTEX_BUFFERS :: 1;
    D3D12_GRAPHICS_STATE_IA_INDEX_BUFFER :: 2;
    D3D12_GRAPHICS_STATE_IA_PRIMITIVE_TOPOLOGY :: 4;
    D3D12_GRAPHICS_STATE_DESCRIPTOR_HEAP :: 8;
    D3D12_GRAPHICS_STATE_GRAPHICS_ROOT_SIGNATURE :: 16;
    D3D12_GRAPHICS_STATE_COMPUTE_ROOT_SIGNATURE :: 32;
    D3D12_GRAPHICS_STATE_RS_VIEWPORTS :: 64;
    D3D12_GRAPHICS_STATE_RS_SCISSOR_RECTS :: 128;
    D3D12_GRAPHICS_STATE_PREDICATION :: 256;
    D3D12_GRAPHICS_STATE_OM_RENDER_TARGETS :: 512;
    D3D12_GRAPHICS_STATE_OM_STENCIL_REF :: 1024;
    D3D12_GRAPHICS_STATE_OM_BLEND_FACTOR :: 2048;
    D3D12_GRAPHICS_STATE_PIPELINE_STATE :: 4096;
    D3D12_GRAPHICS_STATE_SO_TARGETS :: 8192;
    D3D12_GRAPHICS_STATE_OM_DEPTH_BOUNDS :: 16384;
    D3D12_GRAPHICS_STATE_SAMPLE_POSITIONS :: 32768;
    D3D12_GRAPHICS_STATE_VIEW_INSTANCE_MASK :: 65536;
}

D3D12_META_COMMAND_DESC :: struct {
    Id: GUID;
    Name: LPCWSTR;
    InitializationDirtyState: D3D12_GRAPHICS_STATES;
    ExecutionDirtyState: D3D12_GRAPHICS_STATES;
}

ID3D12StateObject :: struct {
    using vtable : *ID3D12StateObject_VTable;
    uuid :: "47016943-fca8-4594-93ea-af258b55346d";
    iid  :: IID_ID3D12StateObject;
}

ID3D12StateObject_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
}

ID3D12StateObjectProperties :: struct {
    using vtable : *ID3D12StateObjectProperties_VTable;
    uuid :: "de5fa827-9bf9-4f26-89ff-d7f56fde3860";
    iid  :: IID_ID3D12StateObjectProperties;
}

ID3D12StateObjectProperties_VTable :: struct {
    using unknown : IUnknown_VTable;
    GetShaderIdentifier : (this: *ID3D12StateObjectProperties, pExportName: LPCWSTR) -> *void #cpp_method #foreign;
    GetShaderStackSize : (this: *ID3D12StateObjectProperties, pExportName: LPCWSTR) -> u64 #cpp_method #foreign;
    GetPipelineStackSize : (this: *ID3D12StateObjectProperties) -> u64 #cpp_method #foreign;
    SetPipelineStackSize : (this: *ID3D12StateObjectProperties, PipelineStackSizeInBytes: u64) -> void #cpp_method #foreign;
}

using D3D12_STATE_SUBOBJECT_TYPE :: enum u32 {
    D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG :: 0;
    D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE :: 1;
    D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE :: 2;
    D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK :: 3;
    D3D12_STATE_SUBOBJECT_TYPE_DXIL_LIBRARY :: 5;
    D3D12_STATE_SUBOBJECT_TYPE_EXISTING_COLLECTION :: 6;
    D3D12_STATE_SUBOBJECT_TYPE_SUBOBJECT_TO_EXPORTS_ASSOCIATION :: 7;
    D3D12_STATE_SUBOBJECT_TYPE_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION :: 8;
    D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG :: 9;
    D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG :: 10;
    D3D12_STATE_SUBOBJECT_TYPE_HIT_GROUP :: 11;
    D3D12_STATE_SUBOBJECT_TYPE_MAX_VALID :: 12;
}

D3D12_STATE_SUBOBJECT :: struct {
    Type: D3D12_STATE_SUBOBJECT_TYPE;
    pDesc: *void;
}

using D3D12_STATE_OBJECT_FLAGS :: enum_flags u32 {
    D3D12_STATE_OBJECT_FLAG_NONE :: 0;
    D3D12_STATE_OBJECT_FLAG_ALLOW_LOCAL_DEPENDENCIES_ON_EXTERNAL_DEFINITIONS :: 1;
    D3D12_STATE_OBJECT_FLAG_ALLOW_EXTERNAL_DEPENDENCIES_ON_LOCAL_DEFINITIONS :: 2;
}

D3D12_STATE_OBJECT_CONFIG :: struct {
    Flags: D3D12_STATE_OBJECT_FLAGS;
}

D3D12_GLOBAL_ROOT_SIGNATURE :: struct {
    pGlobalRootSignature: *ID3D12RootSignature;
}

D3D12_LOCAL_ROOT_SIGNATURE :: struct {
    pLocalRootSignature: *ID3D12RootSignature;
}

D3D12_NODE_MASK :: struct {
    NodeMask: u32;
}

using D3D12_EXPORT_FLAGS :: enum_flags u32 {
    D3D12_EXPORT_FLAG_NONE :: 0;
}

D3D12_EXPORT_DESC :: struct {
    Name: LPCWSTR;
    ExportToRename: LPCWSTR;
    Flags: D3D12_EXPORT_FLAGS;
}

D3D12_DXIL_LIBRARY_DESC :: struct {
    DXILLibrary: D3D12_SHADER_BYTECODE;
    NumExports: u32;
    pExports: *D3D12_EXPORT_DESC;
}

D3D12_EXISTING_COLLECTION_DESC :: struct {
    pExistingCollection: *ID3D12StateObject;
    NumExports: u32;
    pExports: *D3D12_EXPORT_DESC;
}

D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION :: struct {
    pSubobjectToAssociate: *D3D12_STATE_SUBOBJECT;
    NumExports: u32;
    pExports: *LPCWSTR;
}

D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION :: struct {
    SubobjectToAssociate: LPCWSTR;
    NumExports: u32;
    pExports: *LPCWSTR;
}

using D3D12_HIT_GROUP_TYPE :: enum u32 {
    D3D12_HIT_GROUP_TYPE_TRIANGLES :: 0;
    D3D12_HIT_GROUP_TYPE_PROCEDURAL_PRIMITIVE :: 1;
}

D3D12_HIT_GROUP_DESC :: struct {
    HitGroupExport: LPCWSTR;
    Type: D3D12_HIT_GROUP_TYPE;
    AnyHitShaderImport: LPCWSTR;
    ClosestHitShaderImport: LPCWSTR;
    IntersectionShaderImport: LPCWSTR;
}

D3D12_RAYTRACING_SHADER_CONFIG :: struct {
    MaxPayloadSizeInBytes: u32;
    MaxAttributeSizeInBytes: u32;
}

D3D12_RAYTRACING_PIPELINE_CONFIG :: struct {
    MaxTraceRecursionDepth: u32;
}

using D3D12_STATE_OBJECT_TYPE :: enum u32 {
    D3D12_STATE_OBJECT_TYPE_COLLECTION :: 0;
    D3D12_STATE_OBJECT_TYPE_RAYTRACING_PIPELINE :: 3;
}

D3D12_STATE_OBJECT_DESC :: struct {
    Type: D3D12_STATE_OBJECT_TYPE;
    NumSubobjects: u32;
    pSubobjects: *D3D12_STATE_SUBOBJECT;
}

using D3D12_RAYTRACING_GEOMETRY_FLAGS :: enum_flags u32 {
    D3D12_RAYTRACING_GEOMETRY_FLAG_NONE :: 0;
    D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE :: 1;
    D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION :: 2;
}

using D3D12_RAYTRACING_GEOMETRY_TYPE :: enum u32 {
    D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES :: 0;
    D3D12_RAYTRACING_GEOMETRY_TYPE_PROCEDURAL_PRIMITIVE_AABBS :: 1;
}

using D3D12_RAYTRACING_INSTANCE_FLAGS :: enum_flags u32 {
    D3D12_RAYTRACING_INSTANCE_FLAG_NONE :: 0;
    D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_CULL_DISABLE :: 1;
    D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_FRONT_COUNTERCLOCKWISE :: 2;
    D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_OPAQUE :: 4;
    D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_NON_OPAQUE :: 8;
}

D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE :: struct {
    StartAddress: D3D12_GPU_VIRTUAL_ADDRESS;
    StrideInBytes: u64;
}

D3D12_GPU_VIRTUAL_ADDRESS_RANGE :: struct {
    StartAddress: D3D12_GPU_VIRTUAL_ADDRESS;
    SizeInBytes: u64;
}

D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE :: struct {
    StartAddress: D3D12_GPU_VIRTUAL_ADDRESS;
    SizeInBytes: u64;
    StrideInBytes: u64;
}

D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC :: struct {
    Transform3x4: D3D12_GPU_VIRTUAL_ADDRESS;
    IndexFormat: DXGI_FORMAT;
    VertexFormat: DXGI_FORMAT;
    IndexCount: u32;
    VertexCount: u32;
    IndexBuffer: D3D12_GPU_VIRTUAL_ADDRESS;
    VertexBuffer: D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE;
}

D3D12_RAYTRACING_AABB :: struct {
    MinX: float;
    MinY: float;
    MinZ: float;
    MaxX: float;
    MaxY: float;
    MaxZ: float;
}

D3D12_RAYTRACING_GEOMETRY_AABBS_DESC :: struct {
    AABBCount: u64;
    AABBs: D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE;
}

using D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS :: enum_flags u32 {
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_NONE :: 0;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE :: 1;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION :: 2;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_TRACE :: 4;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD :: 8;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_MINIMIZE_MEMORY :: 16;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE :: 32;
}

using D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE :: enum u32 {
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_CLONE :: 0;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT :: 1;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_VISUALIZATION_DECODE_FOR_TOOLS :: 2;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE :: 3;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_DESERIALIZE :: 4;
}

using D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE :: enum u32 {
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL :: 0;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL :: 1;
}

using D3D12_ELEMENTS_LAYOUT :: enum u32 {
    D3D12_ELEMENTS_LAYOUT_ARRAY :: 0;
    D3D12_ELEMENTS_LAYOUT_ARRAY_OF_POINTERS :: 1;
}

using D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE :: enum u32 {
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE :: 0;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION :: 1;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION :: 2;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE :: 3;
}

D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC :: struct {
    DestBuffer: D3D12_GPU_VIRTUAL_ADDRESS;
    InfoType: D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE;
}

D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC :: struct {
    CompactedSizeInBytes: u64;
}

D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC :: struct {
    DecodedSizeInBytes: u64;
}

D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER :: struct {
    Type: D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE;
    NumDescs: u32;
}

D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC :: struct {
    SerializedSizeInBytes: u64;
    NumBottomLevelAccelerationStructurePointers: u64;
}

D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER :: struct {
    DriverOpaqueGUID: GUID;
    DriverOpaqueVersioningData: [16] u8;
}

using D3D12_SERIALIZED_DATA_TYPE :: enum u32 {
    D3D12_SERIALIZED_DATA_RAYTRACING_ACCELERATION_STRUCTURE :: 0;
}

using D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS :: enum u32 {
    D3D12_DRIVER_MATCHING_IDENTIFIER_COMPATIBLE_WITH_DEVICE :: 0;
    D3D12_DRIVER_MATCHING_IDENTIFIER_UNSUPPORTED_TYPE :: 1;
    D3D12_DRIVER_MATCHING_IDENTIFIER_UNRECOGNIZED :: 2;
    D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_VERSION :: 3;
    D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_TYPE :: 4;
}

D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER :: struct {
    DriverMatchingIdentifier: D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER;
    SerializedSizeInBytesIncludingHeader: u64;
    DeserializedSizeInBytes: u64;
    NumBottomLevelAccelerationStructurePointersAfterHeader: u64;
}

D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC :: struct {
    CurrentSizeInBytes: u64;
}

D3D12_RAYTRACING_INSTANCE_DESC :: struct {
    Transform: [3] [4] float;
    InstanceID: u32;
    InstanceMask: u32;
    InstanceContributionToHitGroupIndex: u32;
    Flags: u32;
    AccelerationStructure: D3D12_GPU_VIRTUAL_ADDRESS;
}

D3D12_RAYTRACING_GEOMETRY_DESC :: struct {
    Type: D3D12_RAYTRACING_GEOMETRY_TYPE;
    Flags: D3D12_RAYTRACING_GEOMETRY_FLAGS;
    union {
        Triangles: D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC;
        AABBs: D3D12_RAYTRACING_GEOMETRY_AABBS_DESC;
    }
}

D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS :: struct {
    Type: D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE;
    Flags: D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS;
    NumDescs: u32;
    DescsLayout: D3D12_ELEMENTS_LAYOUT;
    union {
        InstanceDescs: D3D12_GPU_VIRTUAL_ADDRESS;
        pGeometryDescs: *D3D12_RAYTRACING_GEOMETRY_DESC;
        ppGeometryDescs: **D3D12_RAYTRACING_GEOMETRY_DESC;
    }
}

D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC :: struct {
    DestAccelerationStructureData: D3D12_GPU_VIRTUAL_ADDRESS;
    Inputs: D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS;
    SourceAccelerationStructureData: D3D12_GPU_VIRTUAL_ADDRESS;
    ScratchAccelerationStructureData: D3D12_GPU_VIRTUAL_ADDRESS;
}

D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO :: struct {
    ResultDataMaxSizeInBytes: u64;
    ScratchDataSizeInBytes: u64;
    UpdateScratchDataSizeInBytes: u64;
}

using D3D12_RAY_FLAGS :: enum_flags u32 {
    D3D12_RAY_FLAG_NONE :: 0;
    D3D12_RAY_FLAG_FORCE_OPAQUE :: 1;
    D3D12_RAY_FLAG_FORCE_NON_OPAQUE :: 2;
    D3D12_RAY_FLAG_ACCEPT_FIRST_HIT_AND_END_SEARCH :: 4;
    D3D12_RAY_FLAG_SKIP_CLOSEST_HIT_SHADER :: 8;
    D3D12_RAY_FLAG_CULL_BACK_FACING_TRIANGLES :: 16;
    D3D12_RAY_FLAG_CULL_FRONT_FACING_TRIANGLES :: 32;
    D3D12_RAY_FLAG_CULL_OPAQUE :: 64;
    D3D12_RAY_FLAG_CULL_NON_OPAQUE :: 128;
}

using D3D12_HIT_KIND :: enum u32 {
    D3D12_HIT_KIND_TRIANGLE_FRONT_FACE :: 254;
    D3D12_HIT_KIND_TRIANGLE_BACK_FACE :: 255;
}


ID3D12Device5 :: struct {
    using vtable : *ID3D12Device5_VTable;
    uuid :: "8b4f173b-2fea-4b80-8f58-4307191ab95d";
    iid  :: IID_ID3D12Device5;
}

ID3D12Device5_VTable :: struct {
    using device4 : ID3D12Device4_VTable;
    CreateLifetimeTracker : (this: *ID3D12Device5, pOwner: *ID3D12LifetimeOwner, riid: *IID, ppvTracker: **void) -> HRESULT #cpp_method #foreign;
    RemoveDevice : (this: *ID3D12Device5) -> void #cpp_method #foreign;
    EnumerateMetaCommands : (this: *ID3D12Device5, pNumMetaCommands: *u32, pDescs: *D3D12_META_COMMAND_DESC) -> HRESULT #cpp_method #foreign;
    EnumerateMetaCommandParameters : (this: *ID3D12Device5, CommandId: *GUID, Stage: D3D12_META_COMMAND_PARAMETER_STAGE, pTotalStructureSizeInBytes: *u32, pParameterCount: *u32, pParameterDescs: *D3D12_META_COMMAND_PARAMETER_DESC) -> HRESULT #cpp_method #foreign;
    CreateMetaCommand : (this: *ID3D12Device5, CommandId: *GUID, NodeMask: u32, pCreationParametersData: *void, CreationParametersDataSizeInBytes: SIZE_T, riid: *IID, ppMetaCommand: **void) -> HRESULT #cpp_method #foreign;
    CreateStateObject : (this: *ID3D12Device5, pDesc: *D3D12_STATE_OBJECT_DESC, riid: *IID, ppStateObject: **void) -> HRESULT #cpp_method #foreign;
    GetRaytracingAccelerationStructurePrebuildInfo : (this: *ID3D12Device5, pDesc: *D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS, pInfo: *D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO) -> void #cpp_method #foreign;
    CheckDriverMatchingIdentifier : (this: *ID3D12Device5, SerializedDataType: D3D12_SERIALIZED_DATA_TYPE, pIdentifierToCheck: *D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER) -> D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS #cpp_method #foreign;
}

using D3D12_AUTO_BREADCRUMB_OP :: enum u32 {
    D3D12_AUTO_BREADCRUMB_OP_SETMARKER :: 0;
    D3D12_AUTO_BREADCRUMB_OP_BEGINEVENT :: 1;
    D3D12_AUTO_BREADCRUMB_OP_ENDEVENT :: 2;
    D3D12_AUTO_BREADCRUMB_OP_DRAWINSTANCED :: 3;
    D3D12_AUTO_BREADCRUMB_OP_DRAWINDEXEDINSTANCED :: 4;
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEINDIRECT :: 5;
    D3D12_AUTO_BREADCRUMB_OP_DISPATCH :: 6;
    D3D12_AUTO_BREADCRUMB_OP_COPYBUFFERREGION :: 7;
    D3D12_AUTO_BREADCRUMB_OP_COPYTEXTUREREGION :: 8;
    D3D12_AUTO_BREADCRUMB_OP_COPYRESOURCE :: 9;
    D3D12_AUTO_BREADCRUMB_OP_COPYTILES :: 10;
    D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCE :: 11;
    D3D12_AUTO_BREADCRUMB_OP_CLEARRENDERTARGETVIEW :: 12;
    D3D12_AUTO_BREADCRUMB_OP_CLEARUNORDEREDACCESSVIEW :: 13;
    D3D12_AUTO_BREADCRUMB_OP_CLEARDEPTHSTENCILVIEW :: 14;
    D3D12_AUTO_BREADCRUMB_OP_RESOURCEBARRIER :: 15;
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEBUNDLE :: 16;
    D3D12_AUTO_BREADCRUMB_OP_PRESENT :: 17;
    D3D12_AUTO_BREADCRUMB_OP_RESOLVEQUERYDATA :: 18;
    D3D12_AUTO_BREADCRUMB_OP_BEGINSUBMISSION :: 19;
    D3D12_AUTO_BREADCRUMB_OP_ENDSUBMISSION :: 20;
    D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME :: 21;
    D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES :: 22;
    D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT :: 23;
    D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT64 :: 24;
    D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCEREGION :: 25;
    D3D12_AUTO_BREADCRUMB_OP_WRITEBUFFERIMMEDIATE :: 26;
    D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME1 :: 27;
    D3D12_AUTO_BREADCRUMB_OP_SETPROTECTEDRESOURCESESSION :: 28;
    D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME2 :: 29;
    D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES1 :: 30;
    D3D12_AUTO_BREADCRUMB_OP_BUILDRAYTRACINGACCELERATIONSTRUCTURE :: 31;
    D3D12_AUTO_BREADCRUMB_OP_EMITRAYTRACINGACCELERATIONSTRUCTUREPOSTBUILDINFO :: 32;
    D3D12_AUTO_BREADCRUMB_OP_COPYRAYTRACINGACCELERATIONSTRUCTURE :: 33;
    D3D12_AUTO_BREADCRUMB_OP_DISPATCHRAYS :: 34;
    D3D12_AUTO_BREADCRUMB_OP_INITIALIZEMETACOMMAND :: 35;
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEMETACOMMAND :: 36;
    D3D12_AUTO_BREADCRUMB_OP_ESTIMATEMOTION :: 37;
    D3D12_AUTO_BREADCRUMB_OP_RESOLVEMOTIONVECTORHEAP :: 38;
    D3D12_AUTO_BREADCRUMB_OP_SETPIPELINESTATE1 :: 39;
    D3D12_AUTO_BREADCRUMB_OP_INITIALIZEEXTENSIONCOMMAND :: 40;
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEEXTENSIONCOMMAND :: 41;
}

D3D12_AUTO_BREADCRUMB_NODE :: struct {
    pCommandListDebugNameA: *u8;
    pCommandListDebugNameW: *s16;
    pCommandQueueDebugNameA: *u8;
    pCommandQueueDebugNameW: *s16;
    pCommandList: *ID3D12GraphicsCommandList;
    pCommandQueue: *ID3D12CommandQueue;
    BreadcrumbCount: u32;
    pLastBreadcrumbValue: *u32;
    pCommandHistory: *D3D12_AUTO_BREADCRUMB_OP;
    pNext: *D3D12_AUTO_BREADCRUMB_NODE;
}

using D3D12_DRED_VERSION :: enum u32 {
    D3D12_DRED_VERSION_1_0 :: 1;
    D3D12_DRED_VERSION_1_1 :: 2;
}

using D3D12_DRED_FLAGS :: enum_flags u32 {
    D3D12_DRED_FLAG_NONE :: 0;
    D3D12_DRED_FLAG_FORCE_ENABLE :: 1;
    D3D12_DRED_FLAG_DISABLE_AUTOBREADCRUMBS :: 2;
}

using D3D12_DRED_ENABLEMENT :: enum u32 {
    D3D12_DRED_ENABLEMENT_SYSTEM_CONTROLLED :: 0;
    D3D12_DRED_ENABLEMENT_FORCED_OFF :: 1;
    D3D12_DRED_ENABLEMENT_FORCED_ON :: 2;
}

D3D12_DEVICE_REMOVED_EXTENDED_DATA :: struct {
    Flags: D3D12_DRED_FLAGS;
    pHeadAutoBreadcrumbNode: *D3D12_AUTO_BREADCRUMB_NODE;
}

using D3D12_DRED_ALLOCATION_TYPE :: enum u32 {
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_QUEUE :: 19;
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_ALLOCATOR :: 20;
    D3D12_DRED_ALLOCATION_TYPE_PIPELINE_STATE :: 21;
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_LIST :: 22;
    D3D12_DRED_ALLOCATION_TYPE_FENCE :: 23;
    D3D12_DRED_ALLOCATION_TYPE_DESCRIPTOR_HEAP :: 24;
    D3D12_DRED_ALLOCATION_TYPE_HEAP :: 25;
    D3D12_DRED_ALLOCATION_TYPE_QUERY_HEAP :: 27;
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_SIGNATURE :: 28;
    D3D12_DRED_ALLOCATION_TYPE_PIPELINE_LIBRARY :: 29;
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER :: 30;
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_PROCESSOR :: 32;
    D3D12_DRED_ALLOCATION_TYPE_RESOURCE :: 34;
    D3D12_DRED_ALLOCATION_TYPE_PASS :: 35;
    D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSION :: 36;
    D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSIONPOLICY :: 37;
    D3D12_DRED_ALLOCATION_TYPE_PROTECTEDRESOURCESESSION :: 38;
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER_HEAP :: 39;
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_POOL :: 40;
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_RECORDER :: 41;
    D3D12_DRED_ALLOCATION_TYPE_STATE_OBJECT :: 42;
    D3D12_DRED_ALLOCATION_TYPE_METACOMMAND :: 43;
    D3D12_DRED_ALLOCATION_TYPE_SCHEDULINGGROUP :: 44;
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_ESTIMATOR :: 45;
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_VECTOR_HEAP :: 46;
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_EXTENSION_COMMAND :: 47;
   // D3D12_DRED_ALLOCATION_TYPE_INVALID :: -1;
}

D3D12_DRED_ALLOCATION_NODE :: struct {
    ObjectNameA: *u8;
    ObjectNameW: *s16;
    AllocationType: D3D12_DRED_ALLOCATION_TYPE;
    pNext: *D3D12_DRED_ALLOCATION_NODE;
}

D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT :: struct {
    pHeadAutoBreadcrumbNode: *D3D12_AUTO_BREADCRUMB_NODE;
}

D3D12_DRED_PAGE_FAULT_OUTPUT :: struct {
    PageFaultVA: D3D12_GPU_VIRTUAL_ADDRESS;
    pHeadExistingAllocationNode: *D3D12_DRED_ALLOCATION_NODE;
    pHeadRecentFreedAllocationNode: *D3D12_DRED_ALLOCATION_NODE;
}

D3D12_DEVICE_REMOVED_EXTENDED_DATA1 :: struct {
    DeviceRemovedReason: HRESULT;
    AutoBreadcrumbsOutput: D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT;
    PageFaultOutput: D3D12_DRED_PAGE_FAULT_OUTPUT;
}

D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA :: struct {
    Version: D3D12_DRED_VERSION;
    union {
        Dred_1_0: D3D12_DEVICE_REMOVED_EXTENDED_DATA;
        Dred_1_1: D3D12_DEVICE_REMOVED_EXTENDED_DATA1;
    }
}


ID3D12DeviceRemovedExtendedDataSettings :: struct {
    using vtable : *ID3D12DeviceRemovedExtendedDataSettings_VTable;
    uuid :: "82BC481C-6B9B-4030-AEDB-7EE3D1DF1E63";
    iid  :: IID_ID3D12DeviceRemovedExtendedDataSettings;
}

ID3D12DeviceRemovedExtendedDataSettings_VTable :: struct {
    using unknown : IUnknown_VTable;
    SetAutoBreadcrumbsEnablement : (this: *ID3D12DeviceRemovedExtendedDataSettings, __MIDL__ID3D12DeviceRemovedExtendedDataSettings0000: D3D12_DRED_ENABLEMENT) -> void #cpp_method #foreign;
    SetPageFaultEnablement : (this: *ID3D12DeviceRemovedExtendedDataSettings, __MIDL__ID3D12DeviceRemovedExtendedDataSettings0001: D3D12_DRED_ENABLEMENT) -> void #cpp_method #foreign;
    SetWatsonDumpEnablement : (this: *ID3D12DeviceRemovedExtendedDataSettings, __MIDL__ID3D12DeviceRemovedExtendedDataSettings0002: D3D12_DRED_ENABLEMENT) -> void #cpp_method #foreign;
}

ID3D12DeviceRemovedExtendedData :: struct {
    using vtable : *ID3D12DeviceRemovedExtendedData_VTable;
    uuid :: "98931D33-5AE8-4791-AA3C-1A73A2934E71";
    iid  :: IID_ID3D12DeviceRemovedExtendedData;
}

ID3D12DeviceRemovedExtendedData_VTable :: struct {
    using unknown : IUnknown_VTable;
    GetAutoBreadcrumbsOutput : (this: *ID3D12DeviceRemovedExtendedData, pOutput: *D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT) -> HRESULT #cpp_method #foreign;
    GetPageFaultAllocationOutput : (this: *ID3D12DeviceRemovedExtendedData, pOutput: *D3D12_DRED_PAGE_FAULT_OUTPUT) -> HRESULT #cpp_method #foreign;
}

using D3D12_BACKGROUND_PROCESSING_MODE :: enum u32 {
    D3D12_BACKGROUND_PROCESSING_MODE_ALLOWED :: 0;
    D3D12_BACKGROUND_PROCESSING_MODE_ALLOW_INTRUSIVE_MEASUREMENTS :: 1;
    D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_BACKGROUND_WORK :: 2;
    D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_PROFILING_BY_SYSTEM :: 3;
}

using D3D12_MEASUREMENTS_ACTION :: enum u32 {
    D3D12_MEASUREMENTS_ACTION_KEEP_ALL :: 0;
    D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS :: 1;
    D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS_HIGH_PRIORITY :: 2;
    D3D12_MEASUREMENTS_ACTION_DISCARD_PREVIOUS :: 3;
}

ID3D12Device6 :: struct {
    using vtable : *ID3D12Device6_VTable;
    uuid :: "c70b221b-40e4-4a17-89af-025a0727a6dc";
    iid  :: IID_ID3D12Device6;
}

ID3D12Device6_VTable :: struct {
    using device5 : ID3D12Device5_VTable;
    SetBackgroundProcessingMode : (this: *ID3D12Device6, Mode: D3D12_BACKGROUND_PROCESSING_MODE, MeasurementsAction: D3D12_MEASUREMENTS_ACTION, hEventToSignalUponCompletion: HANDLE, pbFurtherMeasurementsDesired: *BOOL) -> HRESULT #cpp_method #foreign;
}

ID3D12Resource1 :: struct {
    using vtable : *ID3D12Resource1_VTable;
    uuid :: "9D5E227A-4430-4161-88B3-3ECA6BB16E19";
    iid  :: IID_ID3D12Resource1;
}

ID3D12Resource1_VTable :: struct {
    using resource : ID3D12Resource_VTable;
    GetProtectedResourceSession : (this: *ID3D12Resource1, riid: *IID, ppProtectedSession: **void) -> HRESULT #cpp_method #foreign;
}

ID3D12Heap1 :: struct {
    using vtable : *ID3D12Heap1_VTable;
    uuid :: "572F7389-2168-49E3-9693-D6DF5871BF6D";
    iid  :: IID_ID3D12Heap1;
}

ID3D12Heap1_VTable :: struct {
    using heap : ID3D12Heap_VTable;
    GetProtectedResourceSession : (this: *ID3D12Heap1, riid: *IID, ppProtectedSession: **void) -> HRESULT #cpp_method #foreign;
}

ID3D12GraphicsCommandList3 :: struct {
    using vtable : *ID3D12GraphicsCommandList3_VTable;
    uuid :: "6FDA83A7-B84C-4E38-9AC8-C7BD22016B3D";
    iid  :: IID_ID3D12GraphicsCommandList3;
}

ID3D12GraphicsCommandList3_VTable :: struct {
    using graphics_command_list2 : ID3D12GraphicsCommandList2_VTable;
    SetProtectedResourceSession : (this: *ID3D12GraphicsCommandList3, pProtectedResourceSession: *ID3D12ProtectedResourceSession) -> void #cpp_method #foreign;
}

using D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE :: enum u32 {
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD :: 0;
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE :: 1;
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR :: 2;
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_NO_ACCESS :: 3;
}

D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS :: struct {
    ClearValue: D3D12_CLEAR_VALUE;
}

D3D12_RENDER_PASS_BEGINNING_ACCESS :: struct {
    Type: D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE;
    union {
        Clear: D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS;
    }
}

using D3D12_RENDER_PASS_ENDING_ACCESS_TYPE :: enum u32 {
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD :: 0;
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE :: 1;
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE :: 2;
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_NO_ACCESS :: 3;
}

D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS :: struct {
    SrcSubresource: u32;
    DstSubresource: u32;
    DstX: u32;
    DstY: u32;
    SrcRect: D3D12_RECT;
}

D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS :: struct {
    pSrcResource: *ID3D12Resource;
    pDstResource: *ID3D12Resource;
    SubresourceCount: u32;
    pSubresourceParameters: *D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS;
    Format: DXGI_FORMAT;
    ResolveMode: D3D12_RESOLVE_MODE;
    PreserveResolveSource: BOOL;
}

D3D12_RENDER_PASS_ENDING_ACCESS :: struct {
    Type: D3D12_RENDER_PASS_ENDING_ACCESS_TYPE;
    union {
        Resolve: D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS;
    }
}

D3D12_RENDER_PASS_RENDER_TARGET_DESC :: struct {
    cpuDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE;
    BeginningAccess: D3D12_RENDER_PASS_BEGINNING_ACCESS;
    EndingAccess: D3D12_RENDER_PASS_ENDING_ACCESS;
}

D3D12_RENDER_PASS_DEPTH_STENCIL_DESC :: struct {
    cpuDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE;
    DepthBeginningAccess: D3D12_RENDER_PASS_BEGINNING_ACCESS;
    StencilBeginningAccess: D3D12_RENDER_PASS_BEGINNING_ACCESS;
    DepthEndingAccess: D3D12_RENDER_PASS_ENDING_ACCESS;
    StencilEndingAccess: D3D12_RENDER_PASS_ENDING_ACCESS;
}

using D3D12_RENDER_PASS_FLAGS :: enum_flags u32 {
    D3D12_RENDER_PASS_FLAG_NONE :: 0;
    D3D12_RENDER_PASS_FLAG_ALLOW_UAV_WRITES :: 1;
    D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS :: 2;
    D3D12_RENDER_PASS_FLAG_RESUMING_PASS :: 4;
}

ID3D12MetaCommand :: struct {
    using vtable : *ID3D12MetaCommand_VTable;
    uuid :: "DBB84C27-36CE-4FC9-B801-F048C46AC570";
    iid  :: IID_ID3D12MetaCommand;
}

ID3D12MetaCommand_VTable :: struct {
    using pageable : ID3D12Pageable_VTable;
    GetRequiredParameterResourceSize : (this: *ID3D12MetaCommand, Stage: D3D12_META_COMMAND_PARAMETER_STAGE, ParameterIndex: u32) -> u64 #cpp_method #foreign;
}

D3D12_DISPATCH_RAYS_DESC :: struct {
    RayGenerationShaderRecord: D3D12_GPU_VIRTUAL_ADDRESS_RANGE;
    MissShaderTable: D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE;
    HitGroupTable: D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE;
    CallableShaderTable: D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE;
    Width: u32;
    Height: u32;
    Depth: u32;
}

ID3D12GraphicsCommandList4 :: struct {
    using vtable : *ID3D12GraphicsCommandList4_VTable;
    uuid :: "8754318e-d3a9-4541-98cf-645b50dc4874";
    iid  :: IID_ID3D12GraphicsCommandList4;
}

ID3D12GraphicsCommandList4_VTable :: struct {
    using graphics_command_list3 : ID3D12GraphicsCommandList3_VTable;
    BeginRenderPass : (this: *ID3D12GraphicsCommandList4, NumRenderTargets: u32, pRenderTargets: *D3D12_RENDER_PASS_RENDER_TARGET_DESC, pDepthStencil: *D3D12_RENDER_PASS_DEPTH_STENCIL_DESC, Flags: D3D12_RENDER_PASS_FLAGS) -> void #cpp_method #foreign;
    EndRenderPass : (this: *ID3D12GraphicsCommandList4) -> void #cpp_method #foreign;
    InitializeMetaCommand : (this: *ID3D12GraphicsCommandList4, pMetaCommand: *ID3D12MetaCommand, pInitializationParametersData: *void, InitializationParametersDataSizeInBytes: SIZE_T) -> void #cpp_method #foreign;
    ExecuteMetaCommand : (this: *ID3D12GraphicsCommandList4, pMetaCommand: *ID3D12MetaCommand, pExecutionParametersData: *void, ExecutionParametersDataSizeInBytes: SIZE_T) -> void #cpp_method #foreign;
    BuildRaytracingAccelerationStructure : (this: *ID3D12GraphicsCommandList4, pDesc: *D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC, NumPostbuildInfoDescs: u32, pPostbuildInfoDescs: *D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC) -> void #cpp_method #foreign;
    EmitRaytracingAccelerationStructurePostbuildInfo : (this: *ID3D12GraphicsCommandList4, pDesc: *D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC, NumSourceAccelerationStructures: u32, pSourceAccelerationStructureData: *D3D12_GPU_VIRTUAL_ADDRESS) -> void #cpp_method #foreign;
    CopyRaytracingAccelerationStructure : (this: *ID3D12GraphicsCommandList4, DestAccelerationStructureData: D3D12_GPU_VIRTUAL_ADDRESS, SourceAccelerationStructureData: D3D12_GPU_VIRTUAL_ADDRESS, Mode: D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE) -> void #cpp_method #foreign;
    SetPipelineState1 : (this: *ID3D12GraphicsCommandList4, pStateObject: *ID3D12StateObject) -> void #cpp_method #foreign;
    DispatchRays : (this: *ID3D12GraphicsCommandList4, pDesc: *D3D12_DISPATCH_RAYS_DESC) -> void #cpp_method #foreign;
}

ID3D12Tools :: struct {
    using vtable : *ID3D12Tools_VTable;
    uuid :: "7071e1f0-e84b-4b33-974f-12fa49de65c5";
    iid  :: IID_ID3D12Tools;
}

ID3D12Tools_VTable :: struct {
    using unknown : IUnknown_VTable;
    EnableShaderInstrumentation : (this: *ID3D12Tools, bEnable: BOOL) -> void #cpp_method #foreign;
    ShaderInstrumentationEnabled : (this: *ID3D12Tools) -> BOOL #cpp_method #foreign;
}

D3D12_SUBRESOURCE_DATA :: struct {
    pData: *void;
    RowPitch: u32;//LONG_PTR;
    SlicePitch: u32;//LONG_PTR;
}

D3D12_MEMCPY_DEST :: struct {
    pData: *void;
    RowPitch: SIZE_T;
    SlicePitch: SIZE_T;
}

PFN_D3D12_CREATE_DEVICE :: #type (a0: *IUnknown, a1: D3D_FEATURE_LEVEL, a2: *IID, a3: **void) -> HRESULT #c_call;

D3D12CreateDevice :: (pAdapter: *IUnknown, MinimumFeatureLevel: D3D_FEATURE_LEVEL, riid: *IID, ppDevice: **void) -> HRESULT #foreign d3d12;

PFN_D3D12_GET_DEBUG_INTERFACE :: #type (a0: *IID, a1: **void) -> HRESULT #c_call;

D3D12GetDebugInterface :: (riid: *IID, ppvDebug: **void) -> HRESULT #foreign d3d12;

D3D12EnableExperimentalFeatures :: (NumFeatures: u32, pIIDs: *IID, pConfigurationStructs: *void, pConfigurationStructSizes: *u32) -> HRESULT #foreign d3d12;

D3D12ExperimentalShaderModels :: GUID.{0x76f5573e, 0xf13a, 0x40f5, u8.[0xb2, 0x97, 0x81, 0xce, 0x9e, 0x18, 0x93, 0x3f] };

D3D12TiledResourceTier4 :: GUID.{0xc9c4725f, 0xa81a, 0x4f56, u8.[0x8c, 0x5b, 0xc5, 0x10, 0x39, 0xd6, 0x94, 0xfb] };

D3D12MetaCommand :: GUID.{0xc734c97e, 0x8077, 0x48c8, u8.[0x9f, 0xdc, 0xd9, 0xd1, 0xdd, 0x31, 0xdd, 0x77] };

D3D12ComputeOnlyDevices :: GUID.{0x50f7ab08, 0x4b6d, 0x4e14, u8.[0x89, 0xa5, 0x5d, 0x16, 0xcd, 0x27, 0x25, 0x94] };

using D3D12_AXIS_SHADING_RATE :: enum u32 {
    D3D12_AXIS_SHADING_RATE_1X :: 0;
    D3D12_AXIS_SHADING_RATE_2X :: 1;
    D3D12_AXIS_SHADING_RATE_4X :: 2;
}

using D3D12_SHADING_RATE :: enum u32 {
    D3D12_SHADING_RATE_1X1 :: 0;
    D3D12_SHADING_RATE_1X2 :: 1;
    D3D12_SHADING_RATE_2X1 :: 4;
    D3D12_SHADING_RATE_2X2 :: 5;
    D3D12_SHADING_RATE_2X4 :: 6;
    D3D12_SHADING_RATE_4X2 :: 9;
    D3D12_SHADING_RATE_4X4 :: 10;
}

using D3D12_SHADING_RATE_COMBINER :: enum u32 {
    D3D12_SHADING_RATE_COMBINER_PASSTHROUGH :: 0;
    D3D12_SHADING_RATE_COMBINER_OVERRIDE :: 1;
    D3D12_SHADING_RATE_COMBINER_MIN :: 2;
    D3D12_SHADING_RATE_COMBINER_MAX :: 3;
    D3D12_SHADING_RATE_COMBINER_SUM :: 4;
}

ID3D12GraphicsCommandList5 :: struct {
    using vtable : *ID3D12GraphicsCommandList5_VTable;
    uuid :: "55050859-4024-474c-87f5-6472eaee44ea";
    iid  :: IID_ID3D12GraphicsCommandList5;
}

ID3D12GraphicsCommandList5_VTable :: struct {
    using graphics_command_list4 : ID3D12GraphicsCommandList4_VTable;
    RSSetShadingRate : (this: *ID3D12GraphicsCommandList5, baseShadingRate: D3D12_SHADING_RATE, combiners: *D3D12_SHADING_RATE_COMBINER) -> void #cpp_method #foreign;
    RSSetShadingRateImage : (this: *ID3D12GraphicsCommandList5, shadingRateImage: *ID3D12Resource) -> void #cpp_method #foreign;
}

IID_ID3D12Object            :: GUID.{0xc4fec28f,0x7966,0x4e95, u8.[0x9f,0x94,0xf4,0x31,0xcb,0x56,0xc3,0xb8] };
IID_ID3D12DeviceChild       :: GUID.{0x905db94b,0xa00c,0x4140, u8.[0x9d,0xf5,0x2b,0x64,0xca,0x9e,0xa3,0x57] };
IID_ID3D12RootSignature     :: GUID.{0xc54a6b66,0x72df,0x4ee8, u8.[0x8b,0xe5,0xa9,0x46,0xa1,0x42,0x92,0x14] };
IID_ID3D12RootSignatureDeserializer :: GUID.{0x34AB647B,0x3CC8,0x46AC, u8.[0x84,0x1B,0xC0,0x96,0x56,0x45,0xC0,0x46] };
IID_ID3D12VersionedRootSignatureDeserializer :: GUID.{0x7F91CE67,0x090C,0x4BB7, u8.[0xB7,0x8E,0xED,0x8F,0xF2,0xE3,0x1D,0xA0] };
IID_ID3D12Pageable          :: GUID.{0x63ee58fb,0x1268,0x4835, u8.[0x86,0xda,0xf0,0x08,0xce,0x62,0xf0,0xd6] };
IID_ID3D12Heap              :: GUID.{0x6b3b2502,0x6e51,0x45b3, u8.[0x90,0xee,0x98,0x84,0x26,0x5e,0x8d,0xf3] };
IID_ID3D12Resource          :: GUID.{0x696442be,0xa72e,0x4059, u8.[0xbc,0x79,0x5b,0x5c,0x98,0x04,0x0f,0xad] };
IID_ID3D12CommandAllocator  :: GUID.{0x6102dee4,0xaf59,0x4b09, u8.[0xb9,0x99,0xb4,0x4d,0x73,0xf0,0x9b,0x24] };
IID_ID3D12Fence             :: GUID.{0x0a753dcf,0xc4d8,0x4b91, u8.[0xad,0xf6,0xbe,0x5a,0x60,0xd9,0x5a,0x76] };
IID_ID3D12Fence1            :: GUID.{0x433685fe,0xe22b,0x4ca0, u8.[0xa8,0xdb,0xb5,0xb4,0xf4,0xdd,0x0e,0x4a] };
IID_ID3D12PipelineState     :: GUID.{0x765a30f3,0xf624,0x4c6f, u8.[0xa8,0x28,0xac,0xe9,0x48,0x62,0x24,0x45] };
IID_ID3D12DescriptorHeap    :: GUID.{0x8efb471d,0x616c,0x4f49, u8.[0x90,0xf7,0x12,0x7b,0xb7,0x63,0xfa,0x51] };
IID_ID3D12QueryHeap         :: GUID.{0x0d9658ae,0xed45,0x469e, u8.[0xa6,0x1d,0x97,0x0e,0xc5,0x83,0xca,0xb4] };
IID_ID3D12CommandSignature  :: GUID.{0xc36a797c,0xec80,0x4f0a, u8.[0x89,0x85,0xa7,0xb2,0x47,0x50,0x82,0xd1] };
IID_ID3D12CommandList       :: GUID.{0x7116d91c,0xe7e4,0x47ce, u8.[0xb8,0xc6,0xec,0x81,0x68,0xf4,0x37,0xe5] };
IID_ID3D12GraphicsCommandList   :: GUID.{0x5b160d0f,0xac1b,0x4185, u8.[0x8b,0xa8,0xb3,0xae,0x42,0xa5,0xa4,0x55] };
IID_ID3D12GraphicsCommandList1  :: GUID.{0x553103fb,0x1fe7,0x4557, u8.[0xbb,0x38,0x94,0x6d,0x7d,0x0e,0x7c,0xa7] };
IID_ID3D12GraphicsCommandList2  :: GUID.{0x38C3E585,0xFF17,0x412C, u8.[0x91,0x50,0x4F,0xC6,0xF9,0xD7,0x2A,0x28] };
IID_ID3D12CommandQueue      :: GUID.{0x0ec870a6,0x5d7e,0x4c22, u8.[0x8c,0xfc,0x5b,0xaa,0xe0,0x76,0x16,0xed] };
IID_ID3D12Device            :: GUID.{0x189819f1,0x1db6,0x4b57, u8.[0xbe,0x54,0x18,0x21,0x33,0x9b,0x85,0xf7] };
IID_ID3D12PipelineLibrary   :: GUID.{0xc64226a8,0x9201,0x46af, u8.[0xb4,0xcc,0x53,0xfb,0x9f,0xf7,0x41,0x4f] };
IID_ID3D12PipelineLibrary1  :: GUID.{0x80eabf42,0x2568,0x4e5e, u8.[0xbd,0x82,0xc3,0x7f,0x86,0x96,0x1d,0xc3] };
IID_ID3D12Device1           :: GUID.{0x77acce80,0x638e,0x4e65, u8.[0x88,0x95,0xc1,0xf2,0x33,0x86,0x86,0x3e] };
IID_ID3D12Device2           :: GUID.{0x30baa41e,0xb15b,0x475c, u8.[0xa0,0xbb,0x1a,0xf5,0xc5,0xb6,0x43,0x28] };
IID_ID3D12Device3           :: GUID.{0x81dadc15,0x2bad,0x4392, u8.[0x93,0xc5,0x10,0x13,0x45,0xc4,0xaa,0x98] };
IID_ID3D12ProtectedSession  :: GUID.{0xA1533D18,0x0AC1,0x4084, u8.[0x85,0xB9,0x89,0xA9,0x61,0x16,0x80,0x6B] };
IID_ID3D12ProtectedResourceSession :: GUID.{0x6CD696F4,0xF289, 0x40CC, u8.[0x80,0x91,0x5A,0x6C,0x0A,0x09,0x9C,0x3D] };
IID_ID3D12Device4           :: GUID.{0xe865df17,0xa9ee,0x46f9, u8.[0xa4,0x63,0x30,0x98,0x31,0x5a,0xa2,0xe5] };
IID_ID3D12LifetimeOwner     :: GUID.{0xe667af9f,0xcd56,0x4f46, u8.[0x83,0xce,0x03,0x2e,0x59,0x5d,0x70,0xa8] };
IID_ID3D12SwapChainAssistant :: GUID.{0xf1df64b6,0x57fd,0x49cd, u8.[0x88,0x07,0xc0,0xeb,0x88,0xb4,0x5c,0x8f] };
IID_ID3D12LifetimeTracker   :: GUID.{0x3fd03d36,0x4eb1,0x424a, u8.[0xa5,0x82,0x49,0x4e,0xcb,0x8b,0xa8,0x13] };
IID_ID3D12StateObject       :: GUID.{0x47016943,0xfca8,0x4594, u8.[0x93,0xea,0xaf,0x25,0x8b,0x55,0x34,0x6d] };
IID_ID3D12StateObjectProperties :: GUID.{0xde5fa827,0x9bf9,0x4f26, u8.[0x89,0xff,0xd7,0xf5,0x6f,0xde,0x38,0x60] };
IID_ID3D12Device5           :: GUID.{0x8b4f173b,0x2fea,0x4b80, u8.[0x8f,0x58,0x43,0x07,0x19,0x1a,0xb9,0x5d] };
IID_ID3D12DeviceRemovedExtendedDataSettings :: GUID.{0x82BC481C,0x6B9B,0x4030, u8.[0xAE,0xDB,0x7E,0xE3,0xD1,0xDF,0x1E,0x63] };
IID_ID3D12DeviceRemovedExtendedData         :: GUID.{0x98931D33,0x5AE8,0x4791, u8.[0xAA,0x3C,0x1A,0x73,0xA2,0x93,0x4E,0x71] };
IID_ID3D12Device6           :: GUID.{0xc70b221b,0x40e4,0x4a17, u8.[0x89,0xaf,0x02,0x5a,0x07,0x27,0xa6,0xdc] };
IID_ID3D12Resource1         :: GUID.{0x9D5E227A,0x4430,0x4161, u8.[0x88,0xB3,0x3E,0xCA,0x6B,0xB1,0x6E,0x19] };
IID_ID3D12Heap1             :: GUID.{0x572F7389,0x2168,0x49E3, u8.[0x96,0x93,0xD6,0xDF,0x58,0x71,0xBF,0x6D] };
IID_ID3D12GraphicsCommandList3  :: GUID.{0x6FDA83A7,0xB84C,0x4E38, u8.[0x9A,0xC8,0xC7,0xBD,0x22,0x01,0x6B,0x3D] };
IID_ID3D12MetaCommand       :: GUID.{0xDBB84C27,0x36CE,0x4FC9, u8.[0xB8,0x01,0xF0,0x48,0xC4,0x6A,0xC5,0x70] };
IID_ID3D12GraphicsCommandList4  :: GUID.{0x8754318e,0xd3a9,0x4541, u8.[0x98,0xcf,0x64,0x5b,0x50,0xdc,0x48,0x74] };
IID_ID3D12Tools             :: GUID.{0x7071e1f0,0xe84b,0x4b33, u8.[0x97,0x4f,0x12,0xfa,0x49,0xde,0x65,0xc5] };
IID_ID3D12GraphicsCommandList5  :: GUID.{0x55050859,0x4024,0x474c, u8.[0x87,0xf5,0x64,0x72,0xea,0xee,0x44,0xea] };

//### from d3d12sdklayers.h

ID3D12Debug :: struct {
    using vtable : *ID3D12Debug_VTable;
    uuid :: "344488b7-6846-474b-b989-f027448245e0";
    iid  :: IID_ID3D12Debug;
}

ID3D12Debug_VTable :: struct {
    using unknown : IUnknown_VTable;
    EnableDebugLayer : (this: *ID3D12Debug) -> void #cpp_method #foreign;
}

using D3D12_GPU_BASED_VALIDATION_FLAGS :: enum_flags u32 {
    D3D12_GPU_BASED_VALIDATION_FLAGS_NONE :: 0;
    D3D12_GPU_BASED_VALIDATION_FLAGS_DISABLE_STATE_TRACKING :: 1;
}

ID3D12Debug1 :: struct {
    using vtable : *ID3D12Debug1_VTable;
    uuid :: "affaa4ca-63fe-4d8e-b8ad-159000af4304";
    iid  :: IID_ID3D12Debug1;
}

ID3D12Debug1_VTable :: struct {
    using unknown : IUnknown_VTable;
    EnableDebugLayer : (this: *ID3D12Debug1) -> void #cpp_method #foreign;
    SetEnableGPUBasedValidation : (this: *ID3D12Debug1, Enable: BOOL) -> void #cpp_method #foreign;
    SetEnableSynchronizedCommandQueueValidation : (this: *ID3D12Debug1, Enable: BOOL) -> void #cpp_method #foreign;
}

ID3D12Debug2 :: struct {
    using vtable : *ID3D12Debug2_VTable;
    uuid :: "93a665c4-a3b2-4e5d-b692-a26ae14e3374";
    iid  :: IID_ID3D12Debug2;
}

ID3D12Debug2_VTable :: struct {
    using unknown : IUnknown_VTable;
    SetGPUBasedValidationFlags : (this: *ID3D12Debug2, Flags: D3D12_GPU_BASED_VALIDATION_FLAGS) -> void #cpp_method #foreign;
}

ID3D12Debug3 :: struct {
    using vtable : *ID3D12Debug3_VTable;
    uuid :: "5cf4e58f-f671-4ff1-a542-3686e3d153d1";
    iid  :: IID_ID3D12Debug3;
}

ID3D12Debug3_VTable :: struct {
    using debug : ID3D12Debug_VTable;
    SetEnableGPUBasedValidation : (this: *ID3D12Debug3, Enable: BOOL) -> void #cpp_method #foreign;
    SetEnableSynchronizedCommandQueueValidation : (this: *ID3D12Debug3, Enable: BOOL) -> void #cpp_method #foreign;
    SetGPUBasedValidationFlags : (this: *ID3D12Debug3, Flags: D3D12_GPU_BASED_VALIDATION_FLAGS) -> void #cpp_method #foreign;
}

using D3D12_RLDO_FLAGS :: enum_flags u32 {
    D3D12_RLDO_NONE :: 0;
    D3D12_RLDO_SUMMARY :: 1;
    D3D12_RLDO_DETAIL :: 2;
    D3D12_RLDO_IGNORE_INTERNAL :: 4;
}

using D3D12_DEBUG_DEVICE_PARAMETER_TYPE :: enum u32 {
    D3D12_DEBUG_DEVICE_PARAMETER_FEATURE_FLAGS :: 0;
    D3D12_DEBUG_DEVICE_PARAMETER_GPU_BASED_VALIDATION_SETTINGS :: 1;
    D3D12_DEBUG_DEVICE_PARAMETER_GPU_SLOWDOWN_PERFORMANCE_FACTOR :: 2;
}

using D3D12_DEBUG_FEATURE :: enum u32 {
    D3D12_DEBUG_FEATURE_NONE :: 0;
    D3D12_DEBUG_FEATURE_ALLOW_BEHAVIOR_CHANGING_DEBUG_AIDS :: 1;
    D3D12_DEBUG_FEATURE_CONSERVATIVE_RESOURCE_STATE_TRACKING :: 2;
    D3D12_DEBUG_FEATURE_DISABLE_VIRTUALIZED_BUNDLES_VALIDATION :: 4;
    D3D12_DEBUG_FEATURE_EMULATE_WINDOWS7 :: 8;
}

using D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE :: enum u32 {
    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_NONE :: 0;
    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_STATE_TRACKING_ONLY :: 1;
    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_UNGUARDED_VALIDATION :: 2;
    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_GUARDED_VALIDATION :: 3;
    NUM_D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODES :: 4;
}

using D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS :: enum_flags u32 {
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_NONE :: 0;
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_TRACKING_ONLY_SHADERS :: 1;
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_UNGUARDED_VALIDATION_SHADERS :: 2;
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_GUARDED_VALIDATION_SHADERS :: 4;
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS_VALID_MASK :: 7;
}

D3D12_DEBUG_DEVICE_GPU_BASED_VALIDATION_SETTINGS :: struct {
    MaxMessagesPerCommandList: u32;
    DefaultShaderPatchMode: D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE;
    PipelineStateCreateFlags: D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS;
}

D3D12_DEBUG_DEVICE_GPU_SLOWDOWN_PERFORMANCE_FACTOR :: struct {
    SlowdownFactor: float;
}

ID3D12DebugDevice1 :: struct {
    using vtable : *ID3D12DebugDevice1_VTable;
    uuid :: "a9b71770-d099-4a65-a698-3dee10020f88";
    iid  :: IID_ID3D12DebugDevice1;
}

ID3D12DebugDevice1_VTable :: struct {
    using unknown : IUnknown_VTable;
    SetDebugParameter : (this: *ID3D12DebugDevice1, Type: D3D12_DEBUG_DEVICE_PARAMETER_TYPE, pData: *void, DataSize: u32) -> HRESULT #cpp_method #foreign;
    GetDebugParameter : (this: *ID3D12DebugDevice1, Type: D3D12_DEBUG_DEVICE_PARAMETER_TYPE, pData: *void, DataSize: u32) -> HRESULT #cpp_method #foreign;
    ReportLiveDeviceObjects : (this: *ID3D12DebugDevice1, Flags: D3D12_RLDO_FLAGS) -> HRESULT #cpp_method #foreign;
}

ID3D12DebugDevice :: struct {
    using vtable : *ID3D12DebugDevice_VTable;
    uuid :: "3febd6dd-4973-4787-8194-e45f9e28923e";
    iid  :: IID_ID3D12DebugDevice;
}

ID3D12DebugDevice_VTable :: struct {
    using unknown : IUnknown_VTable;
    SetFeatureMask : (this: *ID3D12DebugDevice, Mask: D3D12_DEBUG_FEATURE) -> HRESULT #cpp_method #foreign;
    GetFeatureMask : (this: *ID3D12DebugDevice) -> D3D12_DEBUG_FEATURE #cpp_method #foreign;
    ReportLiveDeviceObjects : (this: *ID3D12DebugDevice, Flags: D3D12_RLDO_FLAGS) -> HRESULT #cpp_method #foreign;
}

ID3D12DebugDevice2 :: struct {
    using vtable : *ID3D12DebugDevice2_VTable;
    uuid :: "60eccbc1-378d-4df1-894c-f8ac5ce4d7dd";
    iid  :: IID_ID3D12DebugDevice2;
}

ID3D12DebugDevice2_VTable :: struct {
    using debug_device : ID3D12DebugDevice_VTable;
    SetDebugParameter : (this: *ID3D12DebugDevice2, Type: D3D12_DEBUG_DEVICE_PARAMETER_TYPE, pData: *void, DataSize: u32) -> HRESULT #cpp_method #foreign;
    GetDebugParameter : (this: *ID3D12DebugDevice2, Type: D3D12_DEBUG_DEVICE_PARAMETER_TYPE, pData: *void, DataSize: u32) -> HRESULT #cpp_method #foreign;
}

DXGI_DEBUG_D3D12 :: GUID.{0xcf59a98c, 0xa950, 0x4326, u8.[0x91, 0xef, 0x9b, 0xba, 0xa1, 0x7b, 0xfd, 0x95] };

ID3D12DebugCommandQueue :: struct {
    using vtable : *ID3D12DebugCommandQueue_VTable;
    uuid :: "09e0bf36-54ac-484f-8847-4baeeab6053a";
    iid  :: IID_ID3D12DebugCommandQueue;
}

ID3D12DebugCommandQueue_VTable :: struct {
    using unknown : IUnknown_VTable;
    AssertResourceState : (this: *ID3D12DebugCommandQueue, pResource: *ID3D12Resource, Subresource: u32, State: u32) -> BOOL #cpp_method #foreign;
}

using D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE :: enum u32 {
    D3D12_DEBUG_COMMAND_LIST_PARAMETER_GPU_BASED_VALIDATION_SETTINGS :: 0;
}

D3D12_DEBUG_COMMAND_LIST_GPU_BASED_VALIDATION_SETTINGS :: struct {
    ShaderPatchMode: D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE;
}

ID3D12DebugCommandList1 :: struct {
    using vtable : *ID3D12DebugCommandList1_VTable;
    uuid :: "102ca951-311b-4b01-b11f-ecb83e061b37";
    iid  :: IID_ID3D12DebugCommandList1;
}

ID3D12DebugCommandList1_VTable :: struct {
    using unknown : IUnknown_VTable;
    AssertResourceState : (this: *ID3D12DebugCommandList1, pResource: *ID3D12Resource, Subresource: u32, State: u32) -> BOOL #cpp_method #foreign;
    SetDebugParameter : (this: *ID3D12DebugCommandList1, Type: D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE, pData: *void, DataSize: u32) -> HRESULT #cpp_method #foreign;
    GetDebugParameter : (this: *ID3D12DebugCommandList1, Type: D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE, pData: *void, DataSize: u32) -> HRESULT #cpp_method #foreign;
}

ID3D12DebugCommandList :: struct {
    using vtable : *ID3D12DebugCommandList_VTable;
    uuid :: "09e0bf36-54ac-484f-8847-4baeeab6053f";
    iid  :: IID_ID3D12DebugCommandList;
}

ID3D12DebugCommandList_VTable :: struct {
    using unknown : IUnknown_VTable;
    AssertResourceState : (this: *ID3D12DebugCommandList, pResource: *ID3D12Resource, Subresource: u32, State: u32) -> BOOL #cpp_method #foreign;
    SetFeatureMask : (this: *ID3D12DebugCommandList, Mask: D3D12_DEBUG_FEATURE) -> HRESULT #cpp_method #foreign;
    GetFeatureMask : (this: *ID3D12DebugCommandList) -> D3D12_DEBUG_FEATURE #cpp_method #foreign;
}

ID3D12DebugCommandList2 :: struct {
    using vtable : *ID3D12DebugCommandList2_VTable;
    uuid :: "aeb575cf-4e06-48be-ba3b-c450fc96652e";
    iid  :: IID_ID3D12DebugCommandList2;
}

ID3D12DebugCommandList2_VTable :: struct {
    using debug_command_list : ID3D12DebugCommandList_VTable;
    SetDebugParameter : (this: *ID3D12DebugCommandList2, Type: D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE, pData: *void, DataSize: u32) -> HRESULT #cpp_method #foreign;
    GetDebugParameter : (this: *ID3D12DebugCommandList2, Type: D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE, pData: *void, DataSize: u32) -> HRESULT #cpp_method #foreign;
}

ID3D12SharingContract :: struct {
    using vtable : *ID3D12SharingContract_VTable;
    uuid :: "0adf7d52-929c-4e61-addb-ffed30de66ef";
    iid  :: IID_ID3D12SharingContract;
}

ID3D12SharingContract_VTable :: struct {
    using unknown : IUnknown_VTable;
    Present : (this: *ID3D12SharingContract, pResource: *ID3D12Resource, Subresource: u32, window: HWND) -> void #cpp_method #foreign;
    SharedFenceSignal : (this: *ID3D12SharingContract, pFence: *ID3D12Fence, FenceValue: u64) -> void #cpp_method #foreign;
    BeginCapturableWork : (this: *ID3D12SharingContract, guid: *GUID) -> void #cpp_method #foreign;
    EndCapturableWork : (this: *ID3D12SharingContract, guid: *GUID) -> void #cpp_method #foreign;
}

using D3D12_MESSAGE_CATEGORY :: enum u32 {
    D3D12_MESSAGE_CATEGORY_APPLICATION_DEFINED :: 0;
    D3D12_MESSAGE_CATEGORY_MISCELLANEOUS :: 1;
    D3D12_MESSAGE_CATEGORY_INITIALIZATION :: 2;
    D3D12_MESSAGE_CATEGORY_CLEANUP :: 3;
    D3D12_MESSAGE_CATEGORY_COMPILATION :: 4;
    D3D12_MESSAGE_CATEGORY_STATE_CREATION :: 5;
    D3D12_MESSAGE_CATEGORY_STATE_SETTING :: 6;
    D3D12_MESSAGE_CATEGORY_STATE_GETTING :: 7;
    D3D12_MESSAGE_CATEGORY_RESOURCE_MANIPULATION :: 8;
    D3D12_MESSAGE_CATEGORY_EXECUTION :: 9;
    D3D12_MESSAGE_CATEGORY_SHADER :: 10;
}

using D3D12_MESSAGE_SEVERITY :: enum u32 {
    D3D12_MESSAGE_SEVERITY_CORRUPTION :: 0;
    D3D12_MESSAGE_SEVERITY_ERROR :: 1;
    D3D12_MESSAGE_SEVERITY_WARNING :: 2;
    D3D12_MESSAGE_SEVERITY_INFO :: 3;
    D3D12_MESSAGE_SEVERITY_MESSAGE :: 4;
}

using D3D12_MESSAGE_ID :: enum u32 {
    D3D12_MESSAGE_ID_UNKNOWN :: 0;
    D3D12_MESSAGE_ID_STRING_FROM_APPLICATION :: 1;
    D3D12_MESSAGE_ID_CORRUPTED_THIS :: 2;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER1 :: 3;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER2 :: 4;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER3 :: 5;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER4 :: 6;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER5 :: 7;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER6 :: 8;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER7 :: 9;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER8 :: 10;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER9 :: 11;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER10 :: 12;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER11 :: 13;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER12 :: 14;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER13 :: 15;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER14 :: 16;
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER15 :: 17;
    D3D12_MESSAGE_ID_CORRUPTED_MULTITHREADING :: 18;
    D3D12_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY :: 19;
    D3D12_MESSAGE_ID_GETPRIVATEDATA_MOREDATA :: 20;
    D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA :: 21;
    D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDIUNKNOWN :: 22;
    D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDFLAGS :: 23;
    D3D12_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS :: 24;
    D3D12_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY :: 25;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT :: 26;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC :: 27;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT :: 28;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANESLICE :: 29;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANESLICE :: 30;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS :: 31;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE :: 32;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDARG_RETURN :: 33;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_OUTOFMEMORY_RETURN :: 34;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT :: 35;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT :: 36;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC :: 37;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT :: 38;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANESLICE :: 39;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANESLICE :: 40;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS :: 41;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE :: 42;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDARG_RETURN :: 43;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_OUTOFMEMORY_RETURN :: 44;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT :: 45;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC :: 46;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT :: 47;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS :: 48;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE :: 49;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDARG_RETURN :: 50;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_OUTOFMEMORY_RETURN :: 51;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY :: 52;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS :: 53;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT :: 54;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT :: 55;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT :: 56;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS :: 57;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH :: 58;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE :: 59;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE :: 60;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT :: 61;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC :: 62;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE :: 63;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC :: 64;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT :: 65;
    D3D12_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY :: 66;
    D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE :: 67;
    D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE :: 68;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY :: 69;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE :: 70;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE :: 71;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY :: 72;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE :: 73;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE :: 74;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES :: 75;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED :: 76;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDDECL :: 77;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_EXPECTEDDECL :: 78;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED :: 79;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT :: 80;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT :: 81;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT :: 82;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT :: 83;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION :: 84;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT :: 85;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE :: 86;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC :: 87;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH :: 88;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS :: 89;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX :: 90;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE :: 91;
    D3D12_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY :: 92;
    D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE :: 93;
    D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE :: 94;
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE :: 95;
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE :: 96;
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP :: 97;
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS :: 98;
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_NULLDESC :: 99;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK :: 100;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC :: 101;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP :: 102;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP :: 103;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP :: 104;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC :: 105;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP :: 106;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP :: 107;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP :: 108;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC :: 109;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_NULLDESC :: 110;
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND :: 111;
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND :: 112;
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP :: 113;
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA :: 114;
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA :: 115;
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA :: 116;
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK :: 117;
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_NULLDESC :: 118;
    D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDFILTER :: 119;
    D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSU :: 120;
    D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSV :: 121;
    D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSW :: 122;
    D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMIPLODBIAS :: 123;
    D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXANISOTROPY :: 124;
    D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDCOMPARISONFUNC :: 125;
    D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMINLOD :: 126;
    D3D12_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXLOD :: 127;
    D3D12_MESSAGE_ID_CREATESAMPLERSTATE_NULLDESC :: 128;
    D3D12_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNRECOGNIZED :: 129;
    D3D12_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNDEFINED :: 130;
    D3D12_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_INVALIDVIEWPORT :: 131;
    D3D12_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_INVALIDSCISSOR :: 132;
    D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_DENORMFLUSH :: 133;
    D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DENORMFLUSH :: 134;
    D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID :: 135;
    D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCE :: 136;
    D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDDESTINATIONSTATE :: 137;
    D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCESTATE :: 138;
    D3D12_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSUBRESOURCE :: 139;
    D3D12_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONBOX :: 140;
    D3D12_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSTATE :: 141;
    D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_INVALID :: 142;
    D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_SUBRESOURCE_INVALID :: 143;
    D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_INVALID :: 144;
    D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_SUBRESOURCE_INVALID :: 145;
    D3D12_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_FORMAT_INVALID :: 146;
    D3D12_MESSAGE_ID_BUFFER_MAP_INVALIDMAPTYPE :: 147;
    D3D12_MESSAGE_ID_BUFFER_MAP_INVALIDFLAGS :: 148;
    D3D12_MESSAGE_ID_BUFFER_MAP_ALREADYMAPPED :: 149;
    D3D12_MESSAGE_ID_BUFFER_MAP_DEVICEREMOVED_RETURN :: 150;
    D3D12_MESSAGE_ID_BUFFER_UNMAP_NOTMAPPED :: 151;
    D3D12_MESSAGE_ID_TEXTURE1D_MAP_INVALIDMAPTYPE :: 152;
    D3D12_MESSAGE_ID_TEXTURE1D_MAP_INVALIDSUBRESOURCE :: 153;
    D3D12_MESSAGE_ID_TEXTURE1D_MAP_INVALIDFLAGS :: 154;
    D3D12_MESSAGE_ID_TEXTURE1D_MAP_ALREADYMAPPED :: 155;
    D3D12_MESSAGE_ID_TEXTURE1D_MAP_DEVICEREMOVED_RETURN :: 156;
    D3D12_MESSAGE_ID_TEXTURE1D_UNMAP_INVALIDSUBRESOURCE :: 157;
    D3D12_MESSAGE_ID_TEXTURE1D_UNMAP_NOTMAPPED :: 158;
    D3D12_MESSAGE_ID_TEXTURE2D_MAP_INVALIDMAPTYPE :: 159;
    D3D12_MESSAGE_ID_TEXTURE2D_MAP_INVALIDSUBRESOURCE :: 160;
    D3D12_MESSAGE_ID_TEXTURE2D_MAP_INVALIDFLAGS :: 161;
    D3D12_MESSAGE_ID_TEXTURE2D_MAP_ALREADYMAPPED :: 162;
    D3D12_MESSAGE_ID_TEXTURE2D_MAP_DEVICEREMOVED_RETURN :: 163;
    D3D12_MESSAGE_ID_TEXTURE2D_UNMAP_INVALIDSUBRESOURCE :: 164;
    D3D12_MESSAGE_ID_TEXTURE2D_UNMAP_NOTMAPPED :: 165;
    D3D12_MESSAGE_ID_TEXTURE3D_MAP_INVALIDMAPTYPE :: 166;
    D3D12_MESSAGE_ID_TEXTURE3D_MAP_INVALIDSUBRESOURCE :: 167;
    D3D12_MESSAGE_ID_TEXTURE3D_MAP_INVALIDFLAGS :: 168;
    D3D12_MESSAGE_ID_TEXTURE3D_MAP_ALREADYMAPPED :: 169;
    D3D12_MESSAGE_ID_TEXTURE3D_MAP_DEVICEREMOVED_RETURN :: 170;
    D3D12_MESSAGE_ID_TEXTURE3D_UNMAP_INVALIDSUBRESOURCE :: 171;
    D3D12_MESSAGE_ID_TEXTURE3D_UNMAP_NOTMAPPED :: 172;
    D3D12_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_DEPRECATED :: 173;
    D3D12_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_FORMAT_DEPRECATED :: 174;
    D3D12_MESSAGE_ID_SETEXCEPTIONMODE_UNRECOGNIZEDFLAGS :: 175;
    D3D12_MESSAGE_ID_SETEXCEPTIONMODE_INVALIDARG_RETURN :: 176;
    D3D12_MESSAGE_ID_SETEXCEPTIONMODE_DEVICEREMOVED_RETURN :: 177;
    D3D12_MESSAGE_ID_REF_SIMULATING_INFINITELY_FAST_HARDWARE :: 178;
    D3D12_MESSAGE_ID_REF_THREADING_MODE :: 179;
    D3D12_MESSAGE_ID_REF_UMDRIVER_EXCEPTION :: 180;
    D3D12_MESSAGE_ID_REF_KMDRIVER_EXCEPTION :: 181;
    D3D12_MESSAGE_ID_REF_HARDWARE_EXCEPTION :: 182;
    D3D12_MESSAGE_ID_REF_ACCESSING_INDEXABLE_TEMP_OUT_OF_RANGE :: 183;
    D3D12_MESSAGE_ID_REF_PROBLEM_PARSING_SHADER :: 184;
    D3D12_MESSAGE_ID_REF_OUT_OF_MEMORY :: 185;
    D3D12_MESSAGE_ID_REF_INFO :: 186;
    D3D12_MESSAGE_ID_DEVICE_DRAW_VERTEXPOS_OVERFLOW :: 187;
    D3D12_MESSAGE_ID_DEVICE_DRAWINDEXED_INDEXPOS_OVERFLOW :: 188;
    D3D12_MESSAGE_ID_DEVICE_DRAWINSTANCED_VERTEXPOS_OVERFLOW :: 189;
    D3D12_MESSAGE_ID_DEVICE_DRAWINSTANCED_INSTANCEPOS_OVERFLOW :: 190;
    D3D12_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INSTANCEPOS_OVERFLOW :: 191;
    D3D12_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INDEXPOS_OVERFLOW :: 192;
    D3D12_MESSAGE_ID_DEVICE_DRAW_VERTEX_SHADER_NOT_SET :: 193;
    D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND :: 194;
    D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERINDEX :: 195;
    D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_COMPONENTTYPE :: 196;
    D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERMASK :: 197;
    D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SYSTEMVALUE :: 198;
    D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS :: 199;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_NOT_SET :: 200;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_MISMATCH :: 201;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_NOT_SET :: 202;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INPUTLAYOUT_NOT_SET :: 203;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_CONSTANT_BUFFER_NOT_SET :: 204;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_CONSTANT_BUFFER_TOO_SMALL :: 205;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SAMPLER_NOT_SET :: 206;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SHADERRESOURCEVIEW_NOT_SET :: 207;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VIEW_DIMENSION_MISMATCH :: 208;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL :: 209;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_TOO_SMALL :: 210;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_NOT_SET :: 211;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_FORMAT_INVALID :: 212;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_TOO_SMALL :: 213;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_GS_INPUT_PRIMITIVE_MISMATCH :: 214;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_RETURN_TYPE_MISMATCH :: 215;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_POSITION_NOT_PRESENT :: 216;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OUTPUT_STREAM_NOT_SET :: 217;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_BOUND_RESOURCE_MAPPED :: 218;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INVALID_PRIMITIVETOPOLOGY :: 219;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_OFFSET_UNALIGNED :: 220;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_STRIDE_UNALIGNED :: 221;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_OFFSET_UNALIGNED :: 222;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OUTPUT_STREAM_OFFSET_UNALIGNED :: 223;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_FORMAT_LD_UNSUPPORTED :: 224;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_FORMAT_SAMPLE_UNSUPPORTED :: 225;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_FORMAT_SAMPLE_C_UNSUPPORTED :: 226;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RESOURCE_MULTISAMPLE_UNSUPPORTED :: 227;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SO_TARGETS_BOUND_WITHOUT_SOURCE :: 228;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_SO_STRIDE_LARGER_THAN_BUFFER :: 229;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING :: 230;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0 :: 231;
    D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT :: 232;
    D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT :: 233;
    D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT :: 234;
    D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_INVALIDARG_RETURN :: 235;
    D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_OUTOFMEMORY_RETURN :: 236;
    D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BADINTERFACE_RETURN :: 237;
    D3D12_MESSAGE_ID_DEVICE_DRAW_VIEWPORT_NOT_SET :: 238;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC :: 239;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC :: 240;
    D3D12_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_DENORMFLUSH :: 241;
    D3D12_MESSAGE_ID_OMSETRENDERTARGETS_INVALIDVIEW :: 242;
    D3D12_MESSAGE_ID_DEVICE_SETTEXTFILTERSIZE_INVALIDDIMENSIONS :: 243;
    D3D12_MESSAGE_ID_DEVICE_DRAW_SAMPLER_MISMATCH :: 244;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH :: 245;
    D3D12_MESSAGE_ID_BLENDSTATE_GETDESC_LEGACY :: 246;
    D3D12_MESSAGE_ID_SHADERRESOURCEVIEW_GETDESC_LEGACY :: 247;
    D3D12_MESSAGE_ID_DEVICE_DRAW_PS_OUTPUT_TYPE_MISMATCH :: 248;
    D3D12_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_GATHER_UNSUPPORTED :: 249;
    D3D12_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN :: 250;
    D3D12_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_STRIDE_TOO_LARGE :: 251;
    D3D12_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_INVALIDRANGE :: 252;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT :: 253;
    D3D12_MESSAGE_ID_DEVICE_DRAW_RESOURCE_SAMPLE_COUNT_MISMATCH :: 254;
    D3D12_MESSAGE_ID_LIVE_OBJECT_SUMMARY :: 255;
    D3D12_MESSAGE_ID_LIVE_BUFFER :: 256;
    D3D12_MESSAGE_ID_LIVE_TEXTURE1D :: 257;
    D3D12_MESSAGE_ID_LIVE_TEXTURE2D :: 258;
    D3D12_MESSAGE_ID_LIVE_TEXTURE3D :: 259;
    D3D12_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW :: 260;
    D3D12_MESSAGE_ID_LIVE_RENDERTARGETVIEW :: 261;
    D3D12_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW :: 262;
    D3D12_MESSAGE_ID_LIVE_VERTEXSHADER :: 263;
    D3D12_MESSAGE_ID_LIVE_GEOMETRYSHADER :: 264;
    D3D12_MESSAGE_ID_LIVE_PIXELSHADER :: 265;
    D3D12_MESSAGE_ID_LIVE_INPUTLAYOUT :: 266;
    D3D12_MESSAGE_ID_LIVE_SAMPLER :: 267;
    D3D12_MESSAGE_ID_LIVE_BLENDSTATE :: 268;
    D3D12_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE :: 269;
    D3D12_MESSAGE_ID_LIVE_RASTERIZERSTATE :: 270;
    D3D12_MESSAGE_ID_LIVE_QUERY :: 271;
    D3D12_MESSAGE_ID_LIVE_PREDICATE :: 272;
    D3D12_MESSAGE_ID_LIVE_COUNTER :: 273;
    D3D12_MESSAGE_ID_LIVE_DEVICE :: 274;
    D3D12_MESSAGE_ID_LIVE_SWAPCHAIN :: 275;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS :: 276;
    D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE :: 277;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE :: 278;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTREAMS :: 279;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER :: 280;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTREAMS :: 281;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCLASSLINKAGE :: 282;
    D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE :: 283;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM :: 284;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES :: 285;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES :: 286;
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES :: 287;
    D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDCALL :: 288;
    D3D12_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY :: 289;
    D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE :: 290;
    D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE :: 291;
    D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE :: 292;
    D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCALL :: 293;
    D3D12_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY :: 294;
    D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE :: 295;
    D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE :: 296;
    D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE :: 297;
    D3D12_MESSAGE_ID_DEVICE_DRAW_HS_XOR_DS_MISMATCH :: 298;
    D3D12_MESSAGE_ID_DEVICE_DRAWINDIRECT_INVALID_ARG_BUFFER :: 299;
    D3D12_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_UNALIGNED :: 300;
    D3D12_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_OVERFLOW :: 301;
    D3D12_MESSAGE_ID_RESOURCE_MAP_INVALIDMAPTYPE :: 302;
    D3D12_MESSAGE_ID_RESOURCE_MAP_INVALIDSUBRESOURCE :: 303;
    D3D12_MESSAGE_ID_RESOURCE_MAP_INVALIDFLAGS :: 304;
    D3D12_MESSAGE_ID_RESOURCE_MAP_ALREADYMAPPED :: 305;
    D3D12_MESSAGE_ID_RESOURCE_MAP_DEVICEREMOVED_RETURN :: 306;
    D3D12_MESSAGE_ID_RESOURCE_MAP_OUTOFMEMORY_RETURN :: 307;
    D3D12_MESSAGE_ID_RESOURCE_MAP_WITHOUT_INITIAL_DISCARD :: 308;
    D3D12_MESSAGE_ID_RESOURCE_UNMAP_INVALIDSUBRESOURCE :: 309;
    D3D12_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED :: 310;
    D3D12_MESSAGE_ID_DEVICE_DRAW_RASTERIZING_CONTROL_POINTS :: 311;
    D3D12_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNSUPPORTED :: 312;
    D3D12_MESSAGE_ID_DEVICE_DRAW_HS_DS_SIGNATURE_MISMATCH :: 313;
    D3D12_MESSAGE_ID_DEVICE_DRAW_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH :: 314;
    D3D12_MESSAGE_ID_DEVICE_DRAW_HS_DS_CONTROL_POINT_COUNT_MISMATCH :: 315;
    D3D12_MESSAGE_ID_DEVICE_DRAW_HS_DS_TESSELLATOR_DOMAIN_MISMATCH :: 316;
    D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_UNRECOGNIZED_FEATURE :: 317;
    D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE :: 318;
    D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_INVALIDARG_RETURN :: 319;
    D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCALL :: 320;
    D3D12_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY :: 321;
    D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE :: 322;
    D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE :: 323;
    D3D12_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_VIEWS_EMPTY :: 324;
    D3D12_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFER :: 325;
    D3D12_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_BUFFERS_EMPTY :: 326;
    D3D12_MESSAGE_ID_DEVICE_CSSETSAMPLERS_SAMPLERS_EMPTY :: 327;
    D3D12_MESSAGE_ID_DEVICE_CSGETSHADERRESOURCES_VIEWS_EMPTY :: 328;
    D3D12_MESSAGE_ID_DEVICE_CSGETCONSTANTBUFFERS_BUFFERS_EMPTY :: 329;
    D3D12_MESSAGE_ID_DEVICE_CSGETSAMPLERS_SAMPLERS_EMPTY :: 330;
    D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED :: 331;
    D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED :: 332;
    D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED :: 333;
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED :: 334;
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED :: 335;
    D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED :: 336;
    D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED :: 337;
    D3D12_MESSAGE_ID_CREATEBUFFER_INVALIDSTRUCTURESTRIDE :: 338;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFLAGS :: 339;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE :: 340;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC :: 341;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT :: 342;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANESLICE :: 343;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANESLICE :: 344;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS :: 345;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT :: 346;
    D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_OVERLAPPING_OLD_SLOTS :: 347;
    D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NO_OP :: 348;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDARG_RETURN :: 349;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_OUTOFMEMORY_RETURN :: 350;
    D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_DENORMFLUSH :: 351;
    D3D12_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSS_VIEWS_EMPTY :: 352;
    D3D12_MESSAGE_ID_DEVICE_CSGETUNORDEREDACCESSS_VIEWS_EMPTY :: 353;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS :: 354;
    D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_INVALID_ARG_BUFFER :: 355;
    D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_UNALIGNED :: 356;
    D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_OVERFLOW :: 357;
    D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DEPTH_READONLY :: 358;
    D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_STENCIL_READONLY :: 359;
    D3D12_MESSAGE_ID_CHECKFEATURESUPPORT_FORMAT_DEPRECATED :: 360;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RETURN_TYPE_MISMATCH :: 361;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET :: 362;
    D3D12_MESSAGE_ID_DEVICE_DRAW_UNORDEREDACCESSVIEW_RENDERTARGETVIEW_OVERLAP :: 363;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_DIMENSION_MISMATCH :: 364;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_APPEND_UNSUPPORTED :: 365;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMICS_UNSUPPORTED :: 366;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_STRUCTURE_STRIDE_MISMATCH :: 367;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_BUFFER_TYPE_MISMATCH :: 368;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RAW_UNSUPPORTED :: 369;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_LD_UNSUPPORTED :: 370;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_STORE_UNSUPPORTED :: 371;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_ADD_UNSUPPORTED :: 372;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_BITWISE_OPS_UNSUPPORTED :: 373;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_CMPSTORE_CMPEXCHANGE_UNSUPPORTED :: 374;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_EXCHANGE_UNSUPPORTED :: 375;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_SIGNED_MINMAX_UNSUPPORTED :: 376;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_UNSIGNED_MINMAX_UNSUPPORTED :: 377;
    D3D12_MESSAGE_ID_DEVICE_DISPATCH_BOUND_RESOURCE_MAPPED :: 378;
    D3D12_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_OVERFLOW :: 379;
    D3D12_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_ZERO :: 380;
    D3D12_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_STRUCTURE_STRIDE_MISMATCH :: 381;
    D3D12_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_BUFFER_TYPE_MISMATCH :: 382;
    D3D12_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_RAW_UNSUPPORTED :: 383;
    D3D12_MESSAGE_ID_DEVICE_DISPATCH_UNSUPPORTED :: 384;
    D3D12_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_UNSUPPORTED :: 385;
    D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDOFFSET :: 386;
    D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_LARGEOFFSET :: 387;
    D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDDESTINATIONSTATE :: 388;
    D3D12_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDSOURCESTATE :: 389;
    D3D12_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_NOT_SUPPORTED :: 390;
    D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_INVALIDFORMAT :: 391;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_COUNTER_UNSUPPORTED :: 392;
    D3D12_MESSAGE_ID_DEVICE_DRAW_PIXEL_SHADER_WITHOUT_RTV_OR_DSV :: 393;
    D3D12_MESSAGE_ID_SHADER_ABORT :: 394;
    D3D12_MESSAGE_ID_SHADER_MESSAGE :: 395;
    D3D12_MESSAGE_ID_SHADER_ERROR :: 396;
    D3D12_MESSAGE_ID_OFFERRESOURCES_INVALIDRESOURCE :: 397;
    D3D12_MESSAGE_ID_ENQUEUESETEVENT_INVALIDARG_RETURN :: 398;
    D3D12_MESSAGE_ID_ENQUEUESETEVENT_OUTOFMEMORY_RETURN :: 399;
    D3D12_MESSAGE_ID_ENQUEUESETEVENT_ACCESSDENIED_RETURN :: 400;
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT :: 401;
    D3D12_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_FORCED_SAMPLE_COUNT :: 402;
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS :: 403;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDARRAYWITHDECODER :: 404;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDARRAYWITHDECODER :: 405;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDARRAYWITHDECODER :: 406;
    D3D12_MESSAGE_ID_DEVICE_LOCKEDOUT_INTERFACE :: 407;
    D3D12_MESSAGE_ID_OFFERRESOURCES_INVALIDPRIORITY :: 408;
    D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDVIEW :: 409;
    D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED :: 410;
    D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_SHADEREXTENSIONSNOTSUPPORTED :: 411;
    D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED :: 412;
    D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_SHADEREXTENSIONSNOTSUPPORTED :: 413;
    D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED :: 414;
    D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_SHADEREXTENSIONSNOTSUPPORTED :: 415;
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED :: 416;
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_SHADEREXTENSIONSNOTSUPPORTED :: 417;
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED :: 418;
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_SHADEREXTENSIONSNOTSUPPORTED :: 419;
    D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED :: 420;
    D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_SHADEREXTENSIONSNOTSUPPORTED :: 421;
    D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED :: 422;
    D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_SHADEREXTENSIONSNOTSUPPORTED :: 423;
    D3D12_MESSAGE_ID_DEVICE_SHADER_LINKAGE_MINPRECISION :: 424;
    D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED :: 425;
    D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED :: 426;
    D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED :: 427;
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED :: 428;
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED :: 429;
    D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED :: 430;
    D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED :: 431;
    D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_INVALIDOFFSET :: 432;
    D3D12_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_TOOMANYVIEWS :: 433;
    D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_NOTSUPPORTED :: 434;
    D3D12_MESSAGE_ID_SWAPDEVICECONTEXTSTATE_NOTSUPPORTED :: 435;
    D3D12_MESSAGE_ID_UPDATESUBRESOURCE_PREFERUPDATESUBRESOURCE1 :: 436;
    D3D12_MESSAGE_ID_GETDC_INACCESSIBLE :: 437;
    D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDRECT :: 438;
    D3D12_MESSAGE_ID_DEVICE_DRAW_SAMPLE_MASK_IGNORED_ON_FL9 :: 439;
    D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE1_NOT_SUPPORTED :: 440;
    D3D12_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BY_NAME_NOT_SUPPORTED :: 441;
    D3D12_MESSAGE_ID_ENQUEUESETEVENT_NOT_SUPPORTED :: 442;
    D3D12_MESSAGE_ID_OFFERRELEASE_NOT_SUPPORTED :: 443;
    D3D12_MESSAGE_ID_OFFERRESOURCES_INACCESSIBLE :: 444;
    D3D12_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMSAA :: 445;
    D3D12_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMSAA :: 446;
    D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT :: 447;
    D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT :: 448;
    D3D12_MESSAGE_ID_UPDATESUBRESOURCE_EMPTYDESTBOX :: 449;
    D3D12_MESSAGE_ID_COPYSUBRESOURCEREGION_EMPTYSOURCEBOX :: 450;
    D3D12_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS :: 451;
    D3D12_MESSAGE_ID_DEVICE_DRAW_DEPTHSTENCILVIEW_NOT_SET :: 452;
    D3D12_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET :: 453;
    D3D12_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET_DUE_TO_FLIP_PRESENT :: 454;
    D3D12_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET_DUE_TO_FLIP_PRESENT :: 455;
    D3D12_MESSAGE_ID_GETDATAFORNEWHARDWAREKEY_NULLPARAM :: 456;
    D3D12_MESSAGE_ID_CHECKCRYPTOSESSIONSTATUS_NULLPARAM :: 457;
    D3D12_MESSAGE_ID_SETEVENTONHARDWARECONTENTPROTECTIONTILT_NULLPARAM :: 458;
    D3D12_MESSAGE_ID_GETVIDEODECODERCAPS_NULLPARAM :: 459;
    D3D12_MESSAGE_ID_GETVIDEODECODERCAPS_ZEROWIDTHHEIGHT :: 460;
    D3D12_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_NULLPARAM :: 461;
    D3D12_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE :: 462;
    D3D12_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT :: 463;
    D3D12_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_NULLPARAM :: 464;
    D3D12_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_UNSUPPORTED :: 465;
    D3D12_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_NULLPARAM :: 466;
    D3D12_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_UNSUPPORTED :: 467;
    D3D12_MESSAGE_ID_CHECKVIDEOPROCESSORFORMATCONVERSION_NULLPARAM :: 468;
    D3D12_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE1_NULLPARAM :: 469;
    D3D12_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE1_NULLPARAM :: 470;
    D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_NULLPARAM :: 471;
    D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_INVALIDSTREAM :: 472;
    D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_NULLPARAM :: 473;
    D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_INVALIDSTREAM :: 474;
    D3D12_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_UNSUPPORTED :: 475;
    D3D12_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_NULLPARAM :: 476;
    D3D12_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_NULLPARAM :: 477;
    D3D12_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_NULLPARAM :: 478;
    D3D12_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE :: 479;
    D3D12_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT :: 480;
    D3D12_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSHADERUSAGE_NULLPARAM :: 481;
    D3D12_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSHADERUSAGE_NULLPARAM :: 482;
    D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_NULLPARAM :: 483;
    D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSTREAMCOUNT :: 484;
    D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_TARGETRECT :: 485;
    D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSOURCERECT :: 486;
    D3D12_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDDESTRECT :: 487;
    D3D12_MESSAGE_ID_CREATEBUFFER_INVALIDUSAGE :: 488;
    D3D12_MESSAGE_ID_CREATETEXTURE1D_INVALIDUSAGE :: 489;
    D3D12_MESSAGE_ID_CREATETEXTURE2D_INVALIDUSAGE :: 490;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_STEPRATE_NOT_1 :: 491;
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_INSTANCING_NOT_SUPPORTED :: 492;
    D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER :: 493;
    D3D12_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER :: 494;
    D3D12_MESSAGE_ID_COPYTILES_INVALID_PARAMETER :: 495;
    D3D12_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_WARNING :: 496;
    D3D12_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_ERROR :: 497;
    D3D12_MESSAGE_ID_DIRTY_TILE_MAPPING_ACCESS :: 498;
    D3D12_MESSAGE_ID_DUPLICATE_TILE_MAPPINGS_IN_COVERED_AREA :: 499;
    D3D12_MESSAGE_ID_TILE_MAPPINGS_IN_COVERED_AREA_DUPLICATED_OUTSIDE :: 500;
    D3D12_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INCOMPATIBLE_RESOURCES :: 501;
    D3D12_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INPUT_AND_OUTPUT :: 502;
    D3D12_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_INVALIDFLAGS :: 503;
    D3D12_MESSAGE_ID_GETRESOURCETILING_NONTILED_RESOURCE :: 504;
    D3D12_MESSAGE_ID_NEED_TO_CALL_TILEDRESOURCEBARRIER :: 505;
    D3D12_MESSAGE_ID_CREATEDEVICE_INVALIDARGS :: 506;
    D3D12_MESSAGE_ID_CREATEDEVICE_WARNING :: 507;
    D3D12_MESSAGE_ID_TILED_RESOURCE_TIER_1_BUFFER_TEXTURE_MISMATCH :: 508;
    D3D12_MESSAGE_ID_CREATE_CRYPTOSESSION :: 509;
    D3D12_MESSAGE_ID_CREATE_AUTHENTICATEDCHANNEL :: 510;
    D3D12_MESSAGE_ID_LIVE_CRYPTOSESSION :: 511;
    D3D12_MESSAGE_ID_LIVE_AUTHENTICATEDCHANNEL :: 512;
    D3D12_MESSAGE_ID_DESTROY_CRYPTOSESSION :: 513;
    D3D12_MESSAGE_ID_DESTROY_AUTHENTICATEDCHANNEL :: 514;
    D3D12_MESSAGE_ID_MAP_INVALID_SUBRESOURCE :: 515;
    D3D12_MESSAGE_ID_MAP_INVALID_TYPE :: 516;
    D3D12_MESSAGE_ID_MAP_UNSUPPORTED_TYPE :: 517;
    D3D12_MESSAGE_ID_UNMAP_INVALID_SUBRESOURCE :: 518;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_TYPE :: 519;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_NULL_POINTER :: 520;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SUBRESOURCE :: 521;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_RESERVED_BITS :: 522;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISSING_BIND_FLAGS :: 523;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_MISC_FLAGS :: 524;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_MATCHING_STATES :: 525;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINATION :: 526;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_BEFORE_AFTER_MISMATCH :: 527;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_RESOURCE :: 528;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_SAMPLE_COUNT :: 529;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS :: 530;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINED_FLAGS :: 531;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS_FOR_FORMAT :: 532;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SPLIT_BARRIER :: 533;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_END :: 534;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_BEGIN :: 535;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAG :: 536;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMMAND_LIST_TYPE :: 537;
    D3D12_MESSAGE_ID_INVALID_SUBRESOURCE_STATE :: 538;
    D3D12_MESSAGE_ID_INEFFICIENT_PRESENT :: 539;
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CONTENTION :: 540;
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET :: 541;
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET_BUNDLE :: 542;
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CANNOT_RESET :: 543;
    D3D12_MESSAGE_ID_COMMAND_LIST_OPEN :: 544;
    D3D12_MESSAGE_ID_QUERY_STATE_MISMATCH :: 545;
    D3D12_MESSAGE_ID_INVALID_BUNDLE_API :: 546;
    D3D12_MESSAGE_ID_COMMAND_LIST_CLOSED :: 547;
    D3D12_MESSAGE_ID_COMMAND_LIST_CLOSED_WITH_INVALID_RESOURCE :: 548;
    D3D12_MESSAGE_ID_WRONG_COMMAND_ALLOCATOR_TYPE :: 549;
    D3D12_MESSAGE_ID_INVALID_INDIRECT_ARGUMENT_BUFFER :: 550;
    D3D12_MESSAGE_ID_COMPUTE_AND_GRAPHICS_PIPELINE :: 551;
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_SYNC :: 552;
    D3D12_MESSAGE_ID_COMMAND_LIST_SYNC :: 553;
    D3D12_MESSAGE_ID_SET_DESCRIPTOR_HEAP_INVALID :: 554;
    D3D12_MESSAGE_ID_CREATE_QUEUE_IMAGE_NOT_SUPPORTED :: 555;
    D3D12_MESSAGE_ID_CREATE_COMMAND_ALLOCATOR_IMAGE_NOT_SUPPORTED :: 556;
    D3D12_MESSAGE_ID_CREATE_COMMANDQUEUE :: 557;
    D3D12_MESSAGE_ID_CREATE_COMMANDALLOCATOR :: 558;
    D3D12_MESSAGE_ID_CREATE_PIPELINESTATE :: 559;
    D3D12_MESSAGE_ID_CREATE_COMMANDLIST12 :: 560;
    D3D12_MESSAGE_ID_CREATE_IMAGECOMMANDLIST :: 561;
    D3D12_MESSAGE_ID_CREATE_RESOURCE :: 562;
    D3D12_MESSAGE_ID_CREATE_DESCRIPTORHEAP :: 563;
    D3D12_MESSAGE_ID_CREATE_ROOTSIGNATURE :: 564;
    D3D12_MESSAGE_ID_CREATE_LIBRARY :: 565;
    D3D12_MESSAGE_ID_CREATE_HEAP :: 566;
    D3D12_MESSAGE_ID_CREATE_MONITOREDFENCE :: 567;
    D3D12_MESSAGE_ID_CREATE_QUERYHEAP :: 568;
    D3D12_MESSAGE_ID_CREATE_COMMANDSIGNATURE :: 569;
    D3D12_MESSAGE_ID_LIVE_COMMANDQUEUE :: 570;
    D3D12_MESSAGE_ID_LIVE_COMMANDALLOCATOR :: 571;
    D3D12_MESSAGE_ID_LIVE_PIPELINESTATE :: 572;
    D3D12_MESSAGE_ID_LIVE_COMMANDLIST12 :: 573;
    D3D12_MESSAGE_ID_LIVE_IMAGECOMMANDLIST :: 574;
    D3D12_MESSAGE_ID_LIVE_RESOURCE :: 575;
    D3D12_MESSAGE_ID_LIVE_DESCRIPTORHEAP :: 576;
    D3D12_MESSAGE_ID_LIVE_ROOTSIGNATURE :: 577;
    D3D12_MESSAGE_ID_LIVE_LIBRARY :: 578;
    D3D12_MESSAGE_ID_LIVE_HEAP :: 579;
    D3D12_MESSAGE_ID_LIVE_MONITOREDFENCE :: 580;
    D3D12_MESSAGE_ID_LIVE_QUERYHEAP :: 581;
    D3D12_MESSAGE_ID_LIVE_COMMANDSIGNATURE :: 582;
    D3D12_MESSAGE_ID_DESTROY_COMMANDQUEUE :: 583;
    D3D12_MESSAGE_ID_DESTROY_COMMANDALLOCATOR :: 584;
    D3D12_MESSAGE_ID_DESTROY_PIPELINESTATE :: 585;
    D3D12_MESSAGE_ID_DESTROY_COMMANDLIST12 :: 586;
    D3D12_MESSAGE_ID_DESTROY_IMAGECOMMANDLIST :: 587;
    D3D12_MESSAGE_ID_DESTROY_RESOURCE :: 588;
    D3D12_MESSAGE_ID_DESTROY_DESCRIPTORHEAP :: 589;
    D3D12_MESSAGE_ID_DESTROY_ROOTSIGNATURE :: 590;
    D3D12_MESSAGE_ID_DESTROY_LIBRARY :: 591;
    D3D12_MESSAGE_ID_DESTROY_HEAP :: 592;
    D3D12_MESSAGE_ID_DESTROY_MONITOREDFENCE :: 593;
    D3D12_MESSAGE_ID_DESTROY_QUERYHEAP :: 594;
    D3D12_MESSAGE_ID_DESTROY_COMMANDSIGNATURE :: 595;
    D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDHEAPTYPE :: 596;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONS :: 597;
    D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDMISCFLAGS :: 598;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMISCFLAGS :: 599;
    D3D12_MESSAGE_ID_CREATERESOURCE_LARGEALLOCATION :: 600;
    D3D12_MESSAGE_ID_CREATERESOURCE_SMALLALLOCATION :: 601;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDARG_RETURN :: 602;
    D3D12_MESSAGE_ID_CREATERESOURCE_OUTOFMEMORY_RETURN :: 603;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDESC :: 604;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDINITIALSTATE :: 605;
    D3D12_MESSAGE_ID_RESOURCE_HAS_PENDING_INITIAL_DATA :: 606;
    D3D12_MESSAGE_ID_POSSIBLY_INVALID_SUBRESOURCE_STATE :: 607;
    D3D12_MESSAGE_ID_INVALID_USE_OF_NON_RESIDENT_RESOURCE :: 608;
    D3D12_MESSAGE_ID_POSSIBLE_INVALID_USE_OF_NON_RESIDENT_RESOURCE :: 609;
    D3D12_MESSAGE_ID_BUNDLE_PIPELINE_STATE_MISMATCH :: 610;
    D3D12_MESSAGE_ID_PRIMITIVE_TOPOLOGY_MISMATCH_PIPELINE_STATE :: 611;
    D3D12_MESSAGE_ID_RENDER_TARGET_NUMBER_MISMATCH_PIPELINE_STATE :: 612;
    D3D12_MESSAGE_ID_RENDER_TARGET_FORMAT_MISMATCH_PIPELINE_STATE :: 613;
    D3D12_MESSAGE_ID_RENDER_TARGET_SAMPLE_DESC_MISMATCH_PIPELINE_STATE :: 614;
    D3D12_MESSAGE_ID_DEPTH_STENCIL_FORMAT_MISMATCH_PIPELINE_STATE :: 615;
    D3D12_MESSAGE_ID_DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_PIPELINE_STATE :: 616;
    D3D12_MESSAGE_ID_RENDER_TARGET_NUMBER_MISMATCH_BUNDLE_PIPELINE_STATE :: 617;
    D3D12_MESSAGE_ID_RENDER_TARGET_FORMAT_MISMATCH_BUNDLE_PIPELINE_STATE :: 618;
    D3D12_MESSAGE_ID_RENDER_TARGET_SAMPLE_DESC_MISMATCH_BUNDLE_PIPELINE_STATE :: 619;
    D3D12_MESSAGE_ID_DEPTH_STENCIL_FORMAT_MISMATCH_BUNDLE_PIPELINE_STATE :: 620;
    D3D12_MESSAGE_ID_DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_BUNDLE_PIPELINE_STATE :: 621;
    D3D12_MESSAGE_ID_CREATESHADER_INVALIDBYTECODE :: 622;
    D3D12_MESSAGE_ID_CREATEHEAP_NULLDESC :: 623;
    D3D12_MESSAGE_ID_CREATEHEAP_INVALIDSIZE :: 624;
    D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDHEAPTYPE :: 625;
    D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES :: 626;
    D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMEMORYPOOL :: 627;
    D3D12_MESSAGE_ID_CREATEHEAP_INVALIDPROPERTIES :: 628;
    D3D12_MESSAGE_ID_CREATEHEAP_INVALIDALIGNMENT :: 629;
    D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMISCFLAGS :: 630;
    D3D12_MESSAGE_ID_CREATEHEAP_INVALIDMISCFLAGS :: 631;
    D3D12_MESSAGE_ID_CREATEHEAP_INVALIDARG_RETURN :: 632;
    D3D12_MESSAGE_ID_CREATEHEAP_OUTOFMEMORY_RETURN :: 633;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAPPROPERTIES :: 634;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPTYPE :: 635;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES :: 636;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDMEMORYPOOL :: 637;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPPROPERTIES :: 638;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPMISCFLAGS :: 639;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPMISCFLAGS :: 640;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDARG_RETURN :: 641;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_OUTOFMEMORY_RETURN :: 642;
    D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_UNRECOGNIZEDHEAPTYPE :: 643;
    D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_INVALIDHEAPTYPE :: 644;
    D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_INVALID_DESC :: 645;
    D3D12_MESSAGE_ID_INVALID_DESCRIPTOR_HANDLE :: 646;
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE :: 647;
    D3D12_MESSAGE_ID_DEVICE_DRAW_INVALID_SYSTEMVALUE :: 648;
    D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_RESOURCE :: 649;
    D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_DESC :: 650;
    D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_LARGE_OFFSET :: 651;
    D3D12_MESSAGE_ID_CREATE_UNORDEREDACCESS_VIEW_INVALID_COUNTER_USAGE :: 652;
    D3D12_MESSAGE_ID_COPY_DESCRIPTORS_INVALID_RANGES :: 653;
    D3D12_MESSAGE_ID_COPY_DESCRIPTORS_WRITE_ONLY_DESCRIPTOR :: 654;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RTV_FORMAT_NOT_UNKNOWN :: 655;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_RENDER_TARGET_COUNT :: 656;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VERTEX_SHADER_NOT_SET :: 657;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_NOT_SET :: 658;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_HS_DS_SIGNATURE_MISMATCH :: 659;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERINDEX :: 660;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_COMPONENTTYPE :: 661;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERMASK :: 662;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SYSTEMVALUE :: 663;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS :: 664;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_MINPRECISION :: 665;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND :: 666;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_XOR_DS_MISMATCH :: 667;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH :: 668;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_CONTROL_POINT_COUNT_MISMATCH :: 669;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_TESSELLATOR_DOMAIN_MISMATCH :: 670;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN :: 671;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_FORCED_SAMPLE_COUNT :: 672;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_PRIMITIVETOPOLOGY :: 673;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SYSTEMVALUE :: 674;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0 :: 675;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING :: 676;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_TYPE_MISMATCH :: 677;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS :: 678;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RENDERTARGETVIEW_NOT_SET :: 679;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DEPTHSTENCILVIEW_NOT_SET :: 680;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_INPUT_PRIMITIVE_MISMATCH :: 681;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_POSITION_NOT_PRESENT :: 682;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE_FLAGS :: 683;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_INDEX_BUFFER_PROPERTIES :: 684;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SAMPLE_DESC :: 685;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_ROOT_SIGNATURE_MISMATCH :: 686;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DS_ROOT_SIGNATURE_MISMATCH :: 687;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VS_ROOT_SIGNATURE_MISMATCH :: 688;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_ROOT_SIGNATURE_MISMATCH :: 689;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_ROOT_SIGNATURE_MISMATCH :: 690;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE :: 691;
    D3D12_MESSAGE_ID_EXECUTE_BUNDLE_OPEN_BUNDLE :: 692;
    D3D12_MESSAGE_ID_EXECUTE_BUNDLE_DESCRIPTOR_HEAP_MISMATCH :: 693;
    D3D12_MESSAGE_ID_EXECUTE_BUNDLE_TYPE :: 694;
    D3D12_MESSAGE_ID_DRAW_EMPTY_SCISSOR_RECTANGLE :: 695;
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_BLOB_NOT_FOUND :: 696;
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_DESERIALIZE_FAILED :: 697;
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_INVALID_CONFIGURATION :: 698;
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_SUPPORTED_ON_DEVICE :: 699;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLRESOURCEPROPERTIES :: 700;
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAP :: 701;
    D3D12_MESSAGE_ID_GETRESOURCEALLOCATIONINFO_INVALIDRDESCS :: 702;
    D3D12_MESSAGE_ID_MAKERESIDENT_NULLOBJECTARRAY :: 703;
    D3D12_MESSAGE_ID_MAKERESIDENT_INVALIDOBJECT :: 704;
    D3D12_MESSAGE_ID_EVICT_NULLOBJECTARRAY :: 705;
    D3D12_MESSAGE_ID_EVICT_INVALIDOBJECT :: 706;
    D3D12_MESSAGE_ID_HEAPS_UNSUPPORTED :: 707;
    D3D12_MESSAGE_ID_SET_DESCRIPTOR_TABLE_INVALID :: 708;
    D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_INVALID :: 709;
    D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_BUFFER_VIEW_INVALID :: 710;
    D3D12_MESSAGE_ID_SET_ROOT_SHADER_RESOURCE_VIEW_INVALID :: 711;
    D3D12_MESSAGE_ID_SET_ROOT_UNORDERED_ACCESS_VIEW_INVALID :: 712;
    D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID_DESC :: 713;
    D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_LARGE_OFFSET :: 714;
    D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID_DESC :: 715;
    D3D12_MESSAGE_ID_SET_INDEX_BUFFER_LARGE_OFFSET :: 716;
    D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID_DESC :: 717;
    D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDDIMENSIONALITY :: 718;
    D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDLAYOUT :: 719;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONALITY :: 720;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDALIGNMENT :: 721;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMIPLEVELS :: 722;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDSAMPLEDESC :: 723;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDLAYOUT :: 724;
    D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID :: 725;
    D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID :: 726;
    D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID :: 727;
    D3D12_MESSAGE_ID_SET_RENDER_TARGETS_INVALID :: 728;
    D3D12_MESSAGE_ID_CREATEQUERY_HEAP_INVALID_PARAMETERS :: 729;
    D3D12_MESSAGE_ID_CREATEQUERY_HEAP_JPEG_NOT_SUPPORTED :: 730;
    D3D12_MESSAGE_ID_BEGIN_END_QUERY_INVALID_PARAMETERS :: 731;
    D3D12_MESSAGE_ID_CLOSE_COMMAND_LIST_OPEN_QUERY :: 732;
    D3D12_MESSAGE_ID_RESOLVE_QUERY_DATA_INVALID_PARAMETERS :: 733;
    D3D12_MESSAGE_ID_SET_PREDICATION_INVALID_PARAMETERS :: 734;
    D3D12_MESSAGE_ID_TIMESTAMPS_NOT_SUPPORTED :: 735;
    D3D12_MESSAGE_ID_UNSTABLE_POWER_STATE :: 736;
    D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDFORMAT :: 737;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDFORMAT :: 738;
    D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDSUBRESOURCERANGE :: 739;
    D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDBASEOFFSET :: 740;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_HEAP :: 741;
    D3D12_MESSAGE_ID_CREATE_SAMPLER_INVALID :: 742;
    D3D12_MESSAGE_ID_CREATECOMMANDSIGNATURE_INVALID :: 743;
    D3D12_MESSAGE_ID_EXECUTE_INDIRECT_INVALID_PARAMETERS :: 744;
    D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_RESOURCE_DIMENSION :: 745;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANEINDEX :: 749;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANEINDEX :: 750;
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_AMBIGUOUSVIDEOPLANEINDEX :: 751;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANEINDEX :: 752;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANEINDEX :: 753;
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_AMBIGUOUSVIDEOPLANEINDEX :: 754;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANEINDEX :: 755;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANEINDEX :: 756;
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_AMBIGUOUSVIDEOPLANEINDEX :: 757;
    D3D12_MESSAGE_ID_JPEGDECODE_INVALIDSCANDATAOFFSET :: 758;
    D3D12_MESSAGE_ID_JPEGDECODE_NOTSUPPORTED :: 759;
    D3D12_MESSAGE_ID_JPEGDECODE_DIMENSIONSTOOLARGE :: 760;
    D3D12_MESSAGE_ID_JPEGDECODE_INVALIDCOMPONENTS :: 761;
    D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDCOMPONENTS :: 762;
    D3D12_MESSAGE_ID_JPEGDECODE_DESTINATIONNOT2D :: 763;
    D3D12_MESSAGE_ID_JPEGDECODE_TILEDRESOURCESUNSUPPORTED :: 764;
    D3D12_MESSAGE_ID_JPEGDECODE_GUARDRECTSUNSUPPORTED :: 765;
    D3D12_MESSAGE_ID_JPEGDECODE_FORMATUNSUPPORTED :: 766;
    D3D12_MESSAGE_ID_JPEGDECODE_INVALIDSUBRESOURCE :: 767;
    D3D12_MESSAGE_ID_JPEGDECODE_INVALIDMIPLEVEL :: 768;
    D3D12_MESSAGE_ID_JPEGDECODE_EMPTYDESTBOX :: 769;
    D3D12_MESSAGE_ID_JPEGDECODE_DESTBOXNOT2D :: 770;
    D3D12_MESSAGE_ID_JPEGDECODE_DESTBOXNOTSUB :: 771;
    D3D12_MESSAGE_ID_JPEGDECODE_DESTBOXESINTERSECT :: 772;
    D3D12_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEMISMATCH :: 773;
    D3D12_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEMISMATCH :: 774;
    D3D12_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEODD :: 775;
    D3D12_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEODD :: 776;
    D3D12_MESSAGE_ID_JPEGDECODE_UPSCALEUNSUPPORTED :: 777;
    D3D12_MESSAGE_ID_JPEGDECODE_TIER4DOWNSCALETOLARGE :: 778;
    D3D12_MESSAGE_ID_JPEGDECODE_TIER3DOWNSCALEUNSUPPORTED :: 779;
    D3D12_MESSAGE_ID_JPEGDECODE_CHROMASIZEMISMATCH :: 780;
    D3D12_MESSAGE_ID_JPEGDECODE_LUMACHROMASIZEMISMATCH :: 781;
    D3D12_MESSAGE_ID_JPEGDECODE_INVALIDNUMDESTINATIONS :: 782;
    D3D12_MESSAGE_ID_JPEGDECODE_SUBBOXUNSUPPORTED :: 783;
    D3D12_MESSAGE_ID_JPEGDECODE_1DESTUNSUPPORTEDFORMAT :: 784;
    D3D12_MESSAGE_ID_JPEGDECODE_3DESTUNSUPPORTEDFORMAT :: 785;
    D3D12_MESSAGE_ID_JPEGDECODE_SCALEUNSUPPORTED :: 786;
    D3D12_MESSAGE_ID_JPEGDECODE_INVALIDSOURCESIZE :: 787;
    D3D12_MESSAGE_ID_JPEGDECODE_INVALIDCOPYFLAGS :: 788;
    D3D12_MESSAGE_ID_JPEGDECODE_HAZARD :: 789;
    D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERUSAGE :: 790;
    D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERMISCFLAGS :: 791;
    D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDDSTTEXTUREUSAGE :: 792;
    D3D12_MESSAGE_ID_JPEGDECODE_BACKBUFFERNOTSUPPORTED :: 793;
    D3D12_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDCOPYFLAGS :: 794;
    D3D12_MESSAGE_ID_JPEGENCODE_NOTSUPPORTED :: 795;
    D3D12_MESSAGE_ID_JPEGENCODE_INVALIDSCANDATAOFFSET :: 796;
    D3D12_MESSAGE_ID_JPEGENCODE_INVALIDCOMPONENTS :: 797;
    D3D12_MESSAGE_ID_JPEGENCODE_SOURCENOT2D :: 798;
    D3D12_MESSAGE_ID_JPEGENCODE_TILEDRESOURCESUNSUPPORTED :: 799;
    D3D12_MESSAGE_ID_JPEGENCODE_GUARDRECTSUNSUPPORTED :: 800;
    D3D12_MESSAGE_ID_JPEGENCODE_XSUBSAMPLEMISMATCH :: 801;
    D3D12_MESSAGE_ID_JPEGENCODE_YSUBSAMPLEMISMATCH :: 802;
    D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDCOMPONENTS :: 803;
    D3D12_MESSAGE_ID_JPEGENCODE_FORMATUNSUPPORTED :: 804;
    D3D12_MESSAGE_ID_JPEGENCODE_INVALIDSUBRESOURCE :: 805;
    D3D12_MESSAGE_ID_JPEGENCODE_INVALIDMIPLEVEL :: 806;
    D3D12_MESSAGE_ID_JPEGENCODE_DIMENSIONSTOOLARGE :: 807;
    D3D12_MESSAGE_ID_JPEGENCODE_HAZARD :: 808;
    D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERUSAGE :: 809;
    D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERMISCFLAGS :: 810;
    D3D12_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDSRCTEXTUREUSAGE :: 811;
    D3D12_MESSAGE_ID_JPEGENCODE_BACKBUFFERNOTSUPPORTED :: 812;
    D3D12_MESSAGE_ID_CREATEQUERYORPREDICATE_UNSUPPORTEDCONTEXTTYPEFORQUERY :: 813;
    D3D12_MESSAGE_ID_FLUSH1_INVALIDCONTEXTTYPE :: 814;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUE :: 815;
    D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDCLEARVALUEFORMAT :: 816;
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUEFORMAT :: 817;
    D3D12_MESSAGE_ID_CREATERESOURCE_CLEARVALUEDENORMFLUSH :: 818;
    D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALIDDEPTH :: 819;
    D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_MISMATCHINGCLEARVALUE :: 820;
    D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_MISMATCHINGCLEARVALUE :: 821;
    D3D12_MESSAGE_ID_MAP_INVALIDHEAP :: 822;
    D3D12_MESSAGE_ID_UNMAP_INVALIDHEAP :: 823;
    D3D12_MESSAGE_ID_MAP_INVALIDRESOURCE :: 824;
    D3D12_MESSAGE_ID_UNMAP_INVALIDRESOURCE :: 825;
    D3D12_MESSAGE_ID_MAP_INVALIDSUBRESOURCE :: 826;
    D3D12_MESSAGE_ID_UNMAP_INVALIDSUBRESOURCE :: 827;
    D3D12_MESSAGE_ID_MAP_INVALIDRANGE :: 828;
    D3D12_MESSAGE_ID_UNMAP_INVALIDRANGE :: 829;
    D3D12_MESSAGE_ID_MAP_NULLRANGE :: 830;
    D3D12_MESSAGE_ID_UNMAP_NULLRANGE :: 831;
    D3D12_MESSAGE_ID_MAP_INVALIDDATAPOINTER :: 832;
    D3D12_MESSAGE_ID_MAP_INVALIDARG_RETURN :: 833;
    D3D12_MESSAGE_ID_MAP_OUTOFMEMORY_RETURN :: 834;
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_BUNDLENOTSUPPORTED :: 835;
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_COMMANDLISTMISMATCH :: 836;
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_OPENCOMMANDLIST :: 837;
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_FAILEDCOMMANDLIST :: 838;
    D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLDST :: 839;
    D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDDSTRESOURCEDIMENSION :: 840;
    D3D12_MESSAGE_ID_COPYBUFFERREGION_DSTRANGEOUTOFBOUNDS :: 841;
    D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLSRC :: 842;
    D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDSRCRESOURCEDIMENSION :: 843;
    D3D12_MESSAGE_ID_COPYBUFFERREGION_SRCRANGEOUTOFBOUNDS :: 844;
    D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDCOPYFLAGS :: 845;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLDST :: 846;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTTYPE :: 847;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCEDIMENSION :: 848;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCE :: 849;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTSUBRESOURCE :: 850;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTOFFSET :: 851;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTFORMAT :: 852;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTFORMAT :: 853;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDIMENSIONS :: 854;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTROWPITCH :: 855;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTPLACEMENT :: 856;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDSPLACEDFOOTPRINTFORMAT :: 857;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_DSTREGIONOUTOFBOUNDS :: 858;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLSRC :: 859;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCTYPE :: 860;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCEDIMENSION :: 861;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCE :: 862;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCSUBRESOURCE :: 863;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCOFFSET :: 864;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCFORMAT :: 865;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCFORMAT :: 866;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDIMENSIONS :: 867;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCROWPITCH :: 868;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCPLACEMENT :: 869;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDSPLACEDFOOTPRINTFORMAT :: 870;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_SRCREGIONOUTOFBOUNDS :: 871;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTCOORDINATES :: 872;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCBOX :: 873;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_FORMATMISMATCH :: 874;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_EMPTYBOX :: 875;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDCOPYFLAGS :: 876;
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SUBRESOURCE_INDEX :: 877;
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_FORMAT :: 878;
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_MISMATCH :: 879;
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SAMPLE_COUNT :: 880;
    D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_INVALID_SHADER :: 881;
    D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_CS_ROOT_SIGNATURE_MISMATCH :: 882;
    D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_MISSING_ROOT_SIGNATURE :: 883;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALIDCACHEDBLOB :: 884;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBADAPTERMISMATCH :: 885;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDRIVERVERSIONMISMATCH :: 886;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDESCMISMATCH :: 887;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBIGNORED :: 888;
    D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDHEAP :: 889;
    D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDRESOURCE :: 890;
    D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDBOX :: 891;
    D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDSUBRESOURCE :: 892;
    D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_EMPTYBOX :: 893;
    D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDHEAP :: 894;
    D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDRESOURCE :: 895;
    D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDBOX :: 896;
    D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDSUBRESOURCE :: 897;
    D3D12_MESSAGE_ID_READFROMSUBRESOURCE_EMPTYBOX :: 898;
    D3D12_MESSAGE_ID_TOO_MANY_NODES_SPECIFIED :: 899;
    D3D12_MESSAGE_ID_INVALID_NODE_INDEX :: 900;
    D3D12_MESSAGE_ID_GETHEAPPROPERTIES_INVALIDRESOURCE :: 901;
    D3D12_MESSAGE_ID_NODE_MASK_MISMATCH :: 902;
    D3D12_MESSAGE_ID_COMMAND_LIST_OUTOFMEMORY :: 903;
    D3D12_MESSAGE_ID_COMMAND_LIST_MULTIPLE_SWAPCHAIN_BUFFER_REFERENCES :: 904;
    D3D12_MESSAGE_ID_COMMAND_LIST_TOO_MANY_SWAPCHAIN_REFERENCES :: 905;
    D3D12_MESSAGE_ID_COMMAND_QUEUE_TOO_MANY_SWAPCHAIN_REFERENCES :: 906;
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_WRONGSWAPCHAINBUFFERREFERENCE :: 907;
    D3D12_MESSAGE_ID_COMMAND_LIST_SETRENDERTARGETS_INVALIDNUMRENDERTARGETS :: 908;
    D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_TYPE :: 909;
    D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_FLAGS :: 910;
    D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFLAGS :: 911;
    D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFORMAT :: 912;
    D3D12_MESSAGE_ID_CREATESHAREDHEAP_INVALIDFLAGS :: 913;
    D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_UNRECOGNIZEDPROPERTIES :: 914;
    D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDSIZE :: 915;
    D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDOBJECT :: 916;
    D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDOBJECT :: 917;
    D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDKEY :: 918;
    D3D12_MESSAGE_ID_KEYEDMUTEX_WRONGSTATE :: 919;
    D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_PRIORITY :: 920;
    D3D12_MESSAGE_ID_OBJECT_DELETED_WHILE_STILL_IN_USE :: 921;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_FLAGS :: 922;
    D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_HAS_NO_RESOURCE :: 923;
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RENDER_TARGET_DELETED :: 924;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_ALL_RENDER_TARGETS_HAVE_UNKNOWN_FORMAT :: 925;
    D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_INTERSECTS_MULTIPLE_BUFFERS :: 926;
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_GPU_WRITTEN_READBACK_RESOURCE_MAPPED :: 927;
    D3D12_MESSAGE_ID_UNMAP_RANGE_NOT_NEEDED :: 928;
    D3D12_MESSAGE_ID_UNMAP_RANGE_NOT_EMPTY :: 929;
    D3D12_MESSAGE_ID_MAP_INVALID_NULLRANGE :: 930;
    D3D12_MESSAGE_ID_UNMAP_INVALID_NULLRANGE :: 931;
    D3D12_MESSAGE_ID_NO_GRAPHICS_API_SUPPORT :: 932;
    D3D12_MESSAGE_ID_NO_COMPUTE_API_SUPPORT :: 933;
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_FLAGS_NOT_SUPPORTED :: 934;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_ROOT_ARGUMENT_UNINITIALIZED :: 935;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_HEAP_INDEX_OUT_OF_BOUNDS :: 936;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_TABLE_REGISTER_INDEX_OUT_OF_BOUNDS :: 937;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_UNINITIALIZED :: 938;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_TYPE_MISMATCH :: 939;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_SRV_RESOURCE_DIMENSION_MISMATCH :: 940;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_UAV_RESOURCE_DIMENSION_MISMATCH :: 941;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INCOMPATIBLE_RESOURCE_STATE :: 942;
    D3D12_MESSAGE_ID_COPYRESOURCE_NULLDST :: 943;
    D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDDSTRESOURCE :: 944;
    D3D12_MESSAGE_ID_COPYRESOURCE_NULLSRC :: 945;
    D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSRCRESOURCE :: 946;
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_NULLDST :: 947;
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALIDDSTRESOURCE :: 948;
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_NULLSRC :: 949;
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALIDSRCRESOURCE :: 950;
    D3D12_MESSAGE_ID_PIPELINE_STATE_TYPE_MISMATCH :: 951;
    D3D12_MESSAGE_ID_COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_NOT_SET :: 952;
    D3D12_MESSAGE_ID_COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_MISMATCH :: 953;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_ZERO_BARRIERS :: 954;
    D3D12_MESSAGE_ID_BEGIN_END_EVENT_MISMATCH :: 955;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_POSSIBLE_BEFORE_AFTER_MISMATCH :: 956;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_BEGIN_END :: 957;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INVALID_RESOURCE :: 958;
    D3D12_MESSAGE_ID_USE_OF_ZERO_REFCOUNT_OBJECT :: 959;
    D3D12_MESSAGE_ID_OBJECT_EVICTED_WHILE_STILL_IN_USE :: 960;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_ROOT_DESCRIPTOR_ACCESS_OUT_OF_BOUNDS :: 961;
    D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_INVALIDLIBRARYBLOB :: 962;
    D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_DRIVERVERSIONMISMATCH :: 963;
    D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_ADAPTERVERSIONMISMATCH :: 964;
    D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_UNSUPPORTED :: 965;
    D3D12_MESSAGE_ID_CREATE_PIPELINELIBRARY :: 966;
    D3D12_MESSAGE_ID_LIVE_PIPELINELIBRARY :: 967;
    D3D12_MESSAGE_ID_DESTROY_PIPELINELIBRARY :: 968;
    D3D12_MESSAGE_ID_STOREPIPELINE_NONAME :: 969;
    D3D12_MESSAGE_ID_STOREPIPELINE_DUPLICATENAME :: 970;
    D3D12_MESSAGE_ID_LOADPIPELINE_NAMENOTFOUND :: 971;
    D3D12_MESSAGE_ID_LOADPIPELINE_INVALIDDESC :: 972;
    D3D12_MESSAGE_ID_PIPELINELIBRARY_SERIALIZE_NOTENOUGHMEMORY :: 973;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_RT_OUTPUT_MISMATCH :: 974;
    D3D12_MESSAGE_ID_SETEVENTONMULTIPLEFENCECOMPLETION_INVALIDFLAGS :: 975;
    D3D12_MESSAGE_ID_CREATE_QUEUE_VIDEO_NOT_SUPPORTED :: 976;
    D3D12_MESSAGE_ID_CREATE_COMMAND_ALLOCATOR_VIDEO_NOT_SUPPORTED :: 977;
    D3D12_MESSAGE_ID_CREATEQUERY_HEAP_VIDEO_DECODE_STATISTICS_NOT_SUPPORTED :: 978;
    D3D12_MESSAGE_ID_CREATE_VIDEODECODECOMMANDLIST :: 979;
    D3D12_MESSAGE_ID_CREATE_VIDEODECODER :: 980;
    D3D12_MESSAGE_ID_CREATE_VIDEODECODESTREAM :: 981;
    D3D12_MESSAGE_ID_LIVE_VIDEODECODECOMMANDLIST :: 982;
    D3D12_MESSAGE_ID_LIVE_VIDEODECODER :: 983;
    D3D12_MESSAGE_ID_LIVE_VIDEODECODESTREAM :: 984;
    D3D12_MESSAGE_ID_DESTROY_VIDEODECODECOMMANDLIST :: 985;
    D3D12_MESSAGE_ID_DESTROY_VIDEODECODER :: 986;
    D3D12_MESSAGE_ID_DESTROY_VIDEODECODESTREAM :: 987;
    D3D12_MESSAGE_ID_DECODE_FRAME_INVALID_PARAMETERS :: 988;
    D3D12_MESSAGE_ID_DEPRECATED_API :: 989;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_COMMAND_LIST_TYPE :: 990;
    D3D12_MESSAGE_ID_COMMAND_LIST_DESCRIPTOR_TABLE_NOT_SET :: 991;
    D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_CONSTANT_BUFFER_VIEW_NOT_SET :: 992;
    D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_SHADER_RESOURCE_VIEW_NOT_SET :: 993;
    D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_UNORDERED_ACCESS_VIEW_NOT_SET :: 994;
    D3D12_MESSAGE_ID_DISCARD_INVALID_SUBRESOURCE_RANGE :: 995;
    D3D12_MESSAGE_ID_DISCARD_ONE_SUBRESOURCE_FOR_MIPS_WITH_RECTS :: 996;
    D3D12_MESSAGE_ID_DISCARD_NO_RECTS_FOR_NON_TEXTURE2D :: 997;
    D3D12_MESSAGE_ID_COPY_ON_SAME_SUBRESOURCE :: 998;
    D3D12_MESSAGE_ID_SETRESIDENCYPRIORITY_INVALID_PAGEABLE :: 999;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_UNSUPPORTED :: 1000;
    D3D12_MESSAGE_ID_STATIC_DESCRIPTOR_INVALID_DESCRIPTOR_CHANGE :: 1001;
    D3D12_MESSAGE_ID_DATA_STATIC_DESCRIPTOR_INVALID_DATA_CHANGE :: 1002;
    D3D12_MESSAGE_ID_DATA_STATIC_WHILE_SET_AT_EXECUTE_DESCRIPTOR_INVALID_DATA_CHANGE :: 1003;
    D3D12_MESSAGE_ID_EXECUTE_BUNDLE_STATIC_DESCRIPTOR_DATA_STATIC_NOT_SET :: 1004;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_RESOURCE_ACCESS_OUT_OF_BOUNDS :: 1005;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_SAMPLER_MODE_MISMATCH :: 1006;
    D3D12_MESSAGE_ID_CREATE_FENCE_INVALID_FLAGS :: 1007;
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_DUPLICATE_SUBRESOURCE_TRANSITIONS :: 1008;
    D3D12_MESSAGE_ID_SETRESIDENCYPRIORITY_INVALID_PRIORITY :: 1009;
    D3D12_MESSAGE_ID_CREATE_PASS :: 1010;
    D3D12_MESSAGE_ID_DESTROY_PASS :: 1011;
    D3D12_MESSAGE_ID_LIVE_PASS :: 1012;
    D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_LARGE_NUM_DESCRIPTORS :: 1013;
    D3D12_MESSAGE_ID_BEGIN_EVENT :: 1014;
    D3D12_MESSAGE_ID_END_EVENT :: 1015;
    D3D12_MESSAGE_ID_CREATEDEVICE_DEBUG_LAYER_STARTUP_OPTIONS :: 1016;
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_DEPTHBOUNDSTEST_UNSUPPORTED :: 1017;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_DUPLICATE_SUBOBJECT :: 1018;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_UNKNOWN_SUBOBJECT :: 1019;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_ZERO_SIZE_STREAM :: 1020;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_STREAM :: 1021;
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CANNOT_DEDUCE_TYPE :: 1022;
    D3D12_MESSAGE_ID_COMMAND_LIST_STATIC_DESCRIPTOR_RESOURCE_DIMENSION_MISMATCH :: 1023;
    D3D12_MESSAGE_ID_CREATE_COMMAND_QUEUE_INSUFFICIENT_PRIVILEGE_FOR_GLOBAL_REALTIME :: 1024;
    D3D12_MESSAGE_ID_CREATE_COMMAND_QUEUE_INSUFFICIENT_HARDWARE_SUPPORT_FOR_GLOBAL_REALTIME :: 1025;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_ARCHITECTURE :: 1026;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DST :: 1027;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DST_RESOURCE_DIMENSION :: 1028;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DST_RANGE_OUT_OF_BOUNDS :: 1029;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_SRC :: 1030;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE_DIMENSION :: 1031;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_SRC_RANGE_OUT_OF_BOUNDS :: 1032;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_OFFSET_ALIGNMENT :: 1033;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DEPENDENT_RESOURCES :: 1034;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DEPENDENT_SUBRESOURCE_RANGES :: 1035;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DEPENDENT_RESOURCE :: 1036;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DEPENDENT_SUBRESOURCE_RANGE :: 1037;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DEPENDENT_SUBRESOURCE_OUT_OF_BOUNDS :: 1038;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DEPENDENT_RANGE_OUT_OF_BOUNDS :: 1039;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_ZERO_DEPENDENCIES :: 1040;
    D3D12_MESSAGE_ID_DEVICE_CREATE_SHARED_HANDLE_INVALIDARG :: 1041;
    D3D12_MESSAGE_ID_DESCRIPTOR_HANDLE_WITH_INVALID_RESOURCE :: 1042;
    D3D12_MESSAGE_ID_SETDEPTHBOUNDS_INVALIDARGS :: 1043;
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_RESOURCE_STATE_IMPRECISE :: 1044;
    D3D12_MESSAGE_ID_COMMAND_LIST_PIPELINE_STATE_NOT_SET :: 1045;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_MODEL_MISMATCH :: 1046;
    D3D12_MESSAGE_ID_OBJECT_ACCESSED_WHILE_STILL_IN_USE :: 1047;
    D3D12_MESSAGE_ID_PROGRAMMABLE_MSAA_UNSUPPORTED :: 1048;
    D3D12_MESSAGE_ID_SETSAMPLEPOSITIONS_INVALIDARGS :: 1049;
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCEREGION_INVALID_RECT :: 1050;
    D3D12_MESSAGE_ID_CREATE_VIDEODECODECOMMANDQUEUE :: 1051;
    D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSCOMMANDLIST :: 1052;
    D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSCOMMANDQUEUE :: 1053;
    D3D12_MESSAGE_ID_LIVE_VIDEODECODECOMMANDQUEUE :: 1054;
    D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSCOMMANDLIST :: 1055;
    D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSCOMMANDQUEUE :: 1056;
    D3D12_MESSAGE_ID_DESTROY_VIDEODECODECOMMANDQUEUE :: 1057;
    D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSCOMMANDLIST :: 1058;
    D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSCOMMANDQUEUE :: 1059;
    D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSOR :: 1060;
    D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSSTREAM :: 1061;
    D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSOR :: 1062;
    D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSSTREAM :: 1063;
    D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSOR :: 1064;
    D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSSTREAM :: 1065;
    D3D12_MESSAGE_ID_PROCESS_FRAME_INVALID_PARAMETERS :: 1066;
    D3D12_MESSAGE_ID_COPY_INVALIDLAYOUT :: 1067;
    D3D12_MESSAGE_ID_CREATE_CRYPTO_SESSION :: 1068;
    D3D12_MESSAGE_ID_CREATE_CRYPTO_SESSION_POLICY :: 1069;
    D3D12_MESSAGE_ID_CREATE_PROTECTED_RESOURCE_SESSION :: 1070;
    D3D12_MESSAGE_ID_LIVE_CRYPTO_SESSION :: 1071;
    D3D12_MESSAGE_ID_LIVE_CRYPTO_SESSION_POLICY :: 1072;
    D3D12_MESSAGE_ID_LIVE_PROTECTED_RESOURCE_SESSION :: 1073;
    D3D12_MESSAGE_ID_DESTROY_CRYPTO_SESSION :: 1074;
    D3D12_MESSAGE_ID_DESTROY_CRYPTO_SESSION_POLICY :: 1075;
    D3D12_MESSAGE_ID_DESTROY_PROTECTED_RESOURCE_SESSION :: 1076;
    D3D12_MESSAGE_ID_PROTECTED_RESOURCE_SESSION_UNSUPPORTED :: 1077;
    D3D12_MESSAGE_ID_FENCE_INVALIDOPERATION :: 1078;
    D3D12_MESSAGE_ID_CREATEQUERY_HEAP_COPY_QUEUE_TIMESTAMPS_NOT_SUPPORTED :: 1079;
    D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_DEFERRED :: 1080;
    D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMFIRSTUSE :: 1081;
    D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMCLEAR :: 1082;
    D3D12_MESSAGE_ID_CREATE_VIDEODECODERHEAP :: 1083;
    D3D12_MESSAGE_ID_LIVE_VIDEODECODERHEAP :: 1084;
    D3D12_MESSAGE_ID_DESTROY_VIDEODECODERHEAP :: 1085;
    D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDARG_RETURN :: 1086;
    D3D12_MESSAGE_ID_OPENEXISTINGHEAP_OUTOFMEMORY_RETURN :: 1087;
    D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDADDRESS :: 1088;
    D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDHANDLE :: 1089;
    D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_DEST :: 1090;
    D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_MODE :: 1091;
    D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_ALIGNMENT :: 1092;
    D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_NOT_SUPPORTED :: 1093;
    D3D12_MESSAGE_ID_SETVIEWINSTANCEMASK_INVALIDARGS :: 1094;
    D3D12_MESSAGE_ID_VIEW_INSTANCING_UNSUPPORTED :: 1095;
    D3D12_MESSAGE_ID_VIEW_INSTANCING_INVALIDARGS :: 1096;
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_MISMATCH_DECODE_REFERENCE_ONLY_FLAG :: 1097;
    D3D12_MESSAGE_ID_COPYRESOURCE_MISMATCH_DECODE_REFERENCE_ONLY_FLAG :: 1098;
    D3D12_MESSAGE_ID_CREATE_VIDEO_DECODE_HEAP_CAPS_FAILURE :: 1099;
    D3D12_MESSAGE_ID_CREATE_VIDEO_DECODE_HEAP_CAPS_UNSUPPORTED :: 1100;
    D3D12_MESSAGE_ID_VIDEO_DECODE_SUPPORT_INVALID_INPUT :: 1101;
    D3D12_MESSAGE_ID_CREATE_VIDEO_DECODER_UNSUPPORTED :: 1102;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_METADATA_ERROR :: 1103;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VIEW_INSTANCING_VERTEX_SIZE_EXCEEDED :: 1104;
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RUNTIME_INTERNAL_ERROR :: 1105;
    D3D12_MESSAGE_ID_NO_VIDEO_API_SUPPORT :: 1106;
    D3D12_MESSAGE_ID_VIDEO_PROCESS_SUPPORT_INVALID_INPUT :: 1107;
    D3D12_MESSAGE_ID_CREATE_VIDEO_PROCESSOR_CAPS_FAILURE :: 1108;
    D3D12_MESSAGE_ID_VIDEO_PROCESS_SUPPORT_UNSUPPORTED_FORMAT :: 1109;
    D3D12_MESSAGE_ID_VIDEO_DECODE_FRAME_INVALID_ARGUMENT :: 1110;
    D3D12_MESSAGE_ID_ENQUEUE_MAKE_RESIDENT_INVALID_FLAGS :: 1111;
    D3D12_MESSAGE_ID_OPENEXISTINGHEAP_UNSUPPORTED :: 1112;
    D3D12_MESSAGE_ID_VIDEO_PROCESS_FRAMES_INVALID_ARGUMENT :: 1113;
    D3D12_MESSAGE_ID_VIDEO_DECODE_SUPPORT_UNSUPPORTED :: 1114;
    D3D12_MESSAGE_ID_CREATE_COMMANDRECORDER :: 1115;
    D3D12_MESSAGE_ID_LIVE_COMMANDRECORDER :: 1116;
    D3D12_MESSAGE_ID_DESTROY_COMMANDRECORDER :: 1117;
    D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_VIDEO_NOT_SUPPORTED :: 1118;
    D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_INVALID_SUPPORT_FLAGS :: 1119;
    D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_INVALID_FLAGS :: 1120;
    D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_MORE_RECORDERS_THAN_LOGICAL_PROCESSORS :: 1121;
    D3D12_MESSAGE_ID_CREATE_COMMANDPOOL :: 1122;
    D3D12_MESSAGE_ID_LIVE_COMMANDPOOL :: 1123;
    D3D12_MESSAGE_ID_DESTROY_COMMANDPOOL :: 1124;
    D3D12_MESSAGE_ID_CREATE_COMMAND_POOL_INVALID_FLAGS :: 1125;
    D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_VIDEO_NOT_SUPPORTED :: 1126;
    D3D12_MESSAGE_ID_COMMAND_RECORDER_SUPPORT_FLAGS_MISMATCH :: 1127;
    D3D12_MESSAGE_ID_COMMAND_RECORDER_CONTENTION :: 1128;
    D3D12_MESSAGE_ID_COMMAND_RECORDER_USAGE_WITH_CREATECOMMANDLIST_COMMAND_LIST :: 1129;
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_USAGE_WITH_CREATECOMMANDLIST1_COMMAND_LIST :: 1130;
    D3D12_MESSAGE_ID_CANNOT_EXECUTE_EMPTY_COMMAND_LIST :: 1131;
    D3D12_MESSAGE_ID_CANNOT_RESET_COMMAND_POOL_WITH_OPEN_COMMAND_LISTS :: 1132;
    D3D12_MESSAGE_ID_CANNOT_USE_COMMAND_RECORDER_WITHOUT_CURRENT_TARGET :: 1133;
    D3D12_MESSAGE_ID_CANNOT_CHANGE_COMMAND_RECORDER_TARGET_WHILE_RECORDING :: 1134;
    D3D12_MESSAGE_ID_COMMAND_POOL_SYNC :: 1135;
    D3D12_MESSAGE_ID_EVICT_UNDERFLOW :: 1136;
    D3D12_MESSAGE_ID_CREATE_META_COMMAND :: 1137;
    D3D12_MESSAGE_ID_LIVE_META_COMMAND :: 1138;
    D3D12_MESSAGE_ID_DESTROY_META_COMMAND :: 1139;
    D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALID_DST_RESOURCE :: 1140;
    D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALID_SRC_RESOURCE :: 1141;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DST_RESOURCE :: 1142;
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE :: 1143;
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_NULL_BUFFER :: 1144;
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_NULL_RESOURCE_DESC :: 1145;
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_UNSUPPORTED :: 1146;
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_DIMENSION :: 1147;
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_FLAGS :: 1148;
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_OFFSET :: 1149;
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_DIMENSION :: 1150;
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_FLAGS :: 1151;
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_OUTOFMEMORY_RETURN :: 1152;
    D3D12_MESSAGE_ID_CANNOT_CREATE_GRAPHICS_AND_VIDEO_COMMAND_RECORDER :: 1153;
    D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_POSSIBLY_MISMATCHING_PROPERTIES :: 1154;
    D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE :: 1155;
    D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_INCOMPATIBLE_WITH_STRUCTURED_BUFFERS :: 1156;
    D3D12_MESSAGE_ID_COMPUTE_ONLY_DEVICE_OPERATION_UNSUPPORTED :: 1157;
    D3D12_MESSAGE_ID_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INVALID :: 1158;
    D3D12_MESSAGE_ID_EMIT_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_INVALID :: 1159;
    D3D12_MESSAGE_ID_COPY_RAYTRACING_ACCELERATION_STRUCTURE_INVALID :: 1160;
    D3D12_MESSAGE_ID_DISPATCH_RAYS_INVALID :: 1161;
    D3D12_MESSAGE_ID_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO_INVALID :: 1162;
    D3D12_MESSAGE_ID_CREATE_LIFETIMETRACKER :: 1163;
    D3D12_MESSAGE_ID_LIVE_LIFETIMETRACKER :: 1164;
    D3D12_MESSAGE_ID_DESTROY_LIFETIMETRACKER :: 1165;
    D3D12_MESSAGE_ID_DESTROYOWNEDOBJECT_OBJECTNOTOWNED :: 1166;
    D3D12_MESSAGE_ID_CREATE_TRACKEDWORKLOAD :: 1167;
    D3D12_MESSAGE_ID_LIVE_TRACKEDWORKLOAD :: 1168;
    D3D12_MESSAGE_ID_DESTROY_TRACKEDWORKLOAD :: 1169;
    D3D12_MESSAGE_ID_RENDER_PASS_ERROR :: 1170;
    D3D12_MESSAGE_ID_META_COMMAND_ID_INVALID :: 1171;
    D3D12_MESSAGE_ID_META_COMMAND_UNSUPPORTED_PARAMS :: 1172;
    D3D12_MESSAGE_ID_META_COMMAND_FAILED_ENUMERATION :: 1173;
    D3D12_MESSAGE_ID_META_COMMAND_PARAMETER_SIZE_MISMATCH :: 1174;
    D3D12_MESSAGE_ID_UNINITIALIZED_META_COMMAND :: 1175;
    D3D12_MESSAGE_ID_META_COMMAND_INVALID_GPU_VIRTUAL_ADDRESS :: 1176;
    D3D12_MESSAGE_ID_CREATE_VIDEOENCODECOMMANDLIST :: 1177;
    D3D12_MESSAGE_ID_LIVE_VIDEOENCODECOMMANDLIST :: 1178;
    D3D12_MESSAGE_ID_DESTROY_VIDEOENCODECOMMANDLIST :: 1179;
    D3D12_MESSAGE_ID_CREATE_VIDEOENCODECOMMANDQUEUE :: 1180;
    D3D12_MESSAGE_ID_LIVE_VIDEOENCODECOMMANDQUEUE :: 1181;
    D3D12_MESSAGE_ID_DESTROY_VIDEOENCODECOMMANDQUEUE :: 1182;
    D3D12_MESSAGE_ID_CREATE_VIDEOMOTIONESTIMATOR :: 1183;
    D3D12_MESSAGE_ID_LIVE_VIDEOMOTIONESTIMATOR :: 1184;
    D3D12_MESSAGE_ID_DESTROY_VIDEOMOTIONESTIMATOR :: 1185;
    D3D12_MESSAGE_ID_CREATE_VIDEOMOTIONVECTORHEAP :: 1186;
    D3D12_MESSAGE_ID_LIVE_VIDEOMOTIONVECTORHEAP :: 1187;
    D3D12_MESSAGE_ID_DESTROY_VIDEOMOTIONVECTORHEAP :: 1188;
    D3D12_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOADS :: 1189;
    D3D12_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOAD_PAIRS :: 1190;
    D3D12_MESSAGE_ID_OUT_OF_ORDER_TRACKED_WORKLOAD_PAIR :: 1191;
    D3D12_MESSAGE_ID_CANNOT_ADD_TRACKED_WORKLOAD :: 1192;
    D3D12_MESSAGE_ID_INCOMPLETE_TRACKED_WORKLOAD_PAIR :: 1193;
    D3D12_MESSAGE_ID_CREATE_STATE_OBJECT_ERROR :: 1194;
    D3D12_MESSAGE_ID_GET_SHADER_IDENTIFIER_ERROR :: 1195;
    D3D12_MESSAGE_ID_GET_SHADER_STACK_SIZE_ERROR :: 1196;
    D3D12_MESSAGE_ID_GET_PIPELINE_STACK_SIZE_ERROR :: 1197;
    D3D12_MESSAGE_ID_SET_PIPELINE_STACK_SIZE_ERROR :: 1198;
    D3D12_MESSAGE_ID_GET_SHADER_IDENTIFIER_SIZE_INVALID :: 1199;
    D3D12_MESSAGE_ID_CHECK_DRIVER_MATCHING_IDENTIFIER_INVALID :: 1200;
    D3D12_MESSAGE_ID_CHECK_DRIVER_MATCHING_IDENTIFIER_DRIVER_REPORTED_ISSUE :: 1201;
    D3D12_MESSAGE_ID_RENDER_PASS_INVALID_RESOURCE_BARRIER :: 1202;
    D3D12_MESSAGE_ID_RENDER_PASS_DISALLOWED_API_CALLED :: 1203;
    D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_NEST_RENDER_PASSES :: 1204;
    D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_END_WITHOUT_BEGIN :: 1205;
    D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_CLOSE_COMMAND_LIST :: 1206;
    D3D12_MESSAGE_ID_RENDER_PASS_GPU_WORK_WHILE_SUSPENDED :: 1207;
    D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_SUSPEND_RESUME :: 1208;
    D3D12_MESSAGE_ID_RENDER_PASS_NO_PRIOR_SUSPEND_WITHIN_EXECUTECOMMANDLISTS :: 1209;
    D3D12_MESSAGE_ID_RENDER_PASS_NO_SUBSEQUENT_RESUME_WITHIN_EXECUTECOMMANDLISTS :: 1210;
    D3D12_MESSAGE_ID_TRACKED_WORKLOAD_COMMAND_QUEUE_MISMATCH :: 1211;
    D3D12_MESSAGE_ID_TRACKED_WORKLOAD_NOT_SUPPORTED :: 1212;
    D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_NO_ACCESS :: 1213;
    D3D12_MESSAGE_ID_RENDER_PASS_UNSUPPORTED_RESOLVE :: 1214;
    D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_INVALID_RESOURCE_PTR :: 1215;
    D3D12_MESSAGE_ID_WINDOWS7_FENCE_OUTOFORDER_SIGNAL :: 1216;
    D3D12_MESSAGE_ID_WINDOWS7_FENCE_OUTOFORDER_WAIT :: 1217;
    D3D12_MESSAGE_ID_VIDEO_CREATE_MOTION_ESTIMATOR_INVALID_ARGUMENT :: 1218;
    D3D12_MESSAGE_ID_VIDEO_CREATE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT :: 1219;
    D3D12_MESSAGE_ID_ESTIMATE_MOTION_INVALID_ARGUMENT :: 1220;
    D3D12_MESSAGE_ID_RESOLVE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT :: 1221;
    D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_HEAP_TYPE :: 1222;
    D3D12_MESSAGE_ID_SET_BACKGROUND_PROCESSING_MODE_INVALID_ARGUMENT :: 1223;
    D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE_FOR_FEATURE_LEVEL :: 1224;
    D3D12_MESSAGE_ID_CREATE_VIDEOEXTENSIONCOMMAND :: 1225;
    D3D12_MESSAGE_ID_LIVE_VIDEOEXTENSIONCOMMAND :: 1226;
    D3D12_MESSAGE_ID_DESTROY_VIDEOEXTENSIONCOMMAND :: 1227;
    D3D12_MESSAGE_ID_INVALID_VIDEO_EXTENSION_COMMAND_ID :: 1228;
    D3D12_MESSAGE_ID_VIDEO_EXTENSION_COMMAND_INVALID_ARGUMENT :: 1229;
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_UNIQUE_IN_DXIL_LIBRARY :: 1230;
    D3D12_MESSAGE_ID_VARIABLE_SHADING_RATE_NOT_ALLOWED_WITH_TIR :: 1231;
    D3D12_MESSAGE_ID_GEOMETRY_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE :: 1232;
    D3D12_MESSAGE_ID_RSSETSHADING_RATE_INVALID_SHADING_RATE :: 1233;
    D3D12_MESSAGE_ID_RSSETSHADING_RATE_SHADING_RATE_NOT_PERMITTED_BY_CAP :: 1234;
    D3D12_MESSAGE_ID_RSSETSHADING_RATE_INVALID_COMBINER :: 1235;
    D3D12_MESSAGE_ID_RSSETSHADINGRATEIMAGE_REQUIRES_TIER_2 :: 1236;
    D3D12_MESSAGE_ID_RSSETSHADINGRATE_REQUIRES_TIER_1 :: 1237;
    D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_FORMAT :: 1238;
    D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_ARRAY_SIZE :: 1239;
    D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_MIP_LEVEL :: 1240;
    D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_SAMPLE_COUNT :: 1241;
    D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_SAMPLE_QUALITY :: 1242;
    D3D12_MESSAGE_ID_NON_RETAIL_SHADER_MODEL_WONT_VALIDATE :: 1243;
    D3D12_MESSAGE_ID_D3D12_MESSAGES_END :: 1244;
}

D3D12_MESSAGE :: struct {
    Category: D3D12_MESSAGE_CATEGORY;
    Severity: D3D12_MESSAGE_SEVERITY;
    ID: D3D12_MESSAGE_ID;
    pDescription: *u8;
    DescriptionByteLength: SIZE_T;
}

D3D12_INFO_QUEUE_FILTER_DESC :: struct {
    NumCategories: u32;
    pCategoryList: *D3D12_MESSAGE_CATEGORY;
    NumSeverities: u32;
    pSeverityList: *D3D12_MESSAGE_SEVERITY;
    NumIDs: u32;
    pIDList: *D3D12_MESSAGE_ID;
}

D3D12_INFO_QUEUE_FILTER :: struct {
    AllowList: D3D12_INFO_QUEUE_FILTER_DESC;
    DenyList: D3D12_INFO_QUEUE_FILTER_DESC;
}


ID3D12InfoQueue :: struct {
    using vtable : *ID3D12InfoQueue_VTable;
    uuid :: "0742a90b-c387-483f-b946-30a7e4e61458";
    iid  :: IID_ID3D12InfoQueue;
}

ID3D12InfoQueue_VTable :: struct {
    using unknown : IUnknown_VTable;
    SetMessageCountLimit : (this: *ID3D12InfoQueue, MessageCountLimit: u64) -> HRESULT #cpp_method #foreign;
    ClearStoredMessages : (this: *ID3D12InfoQueue) -> void #cpp_method #foreign;
    GetMessage : (this: *ID3D12InfoQueue, MessageIndex: u64, pMessage: *D3D12_MESSAGE, pMessageByteLength: *SIZE_T) -> HRESULT #cpp_method #foreign;
    GetNumMessagesAllowedByStorageFilter : (this: *ID3D12InfoQueue) -> u64 #cpp_method #foreign;
    GetNumMessagesDeniedByStorageFilter : (this: *ID3D12InfoQueue) -> u64 #cpp_method #foreign;
    GetNumStoredMessages : (this: *ID3D12InfoQueue) -> u64 #cpp_method #foreign;
    GetNumStoredMessagesAllowedByRetrievalFilter : (this: *ID3D12InfoQueue) -> u64 #cpp_method #foreign;
    GetNumMessagesDiscardedByMessageCountLimit : (this: *ID3D12InfoQueue) -> u64 #cpp_method #foreign;
    GetMessageCountLimit : (this: *ID3D12InfoQueue) -> u64 #cpp_method #foreign;
    AddStorageFilterEntries : (this: *ID3D12InfoQueue, pFilter: *D3D12_INFO_QUEUE_FILTER) -> HRESULT #cpp_method #foreign;
    GetStorageFilter : (this: *ID3D12InfoQueue, pFilter: *D3D12_INFO_QUEUE_FILTER, pFilterByteLength: *SIZE_T) -> HRESULT #cpp_method #foreign;
    ClearStorageFilter : (this: *ID3D12InfoQueue) -> void #cpp_method #foreign;
    PushEmptyStorageFilter : (this: *ID3D12InfoQueue) -> HRESULT #cpp_method #foreign;
    PushCopyOfStorageFilter : (this: *ID3D12InfoQueue) -> HRESULT #cpp_method #foreign;
    PushStorageFilter : (this: *ID3D12InfoQueue, pFilter: *D3D12_INFO_QUEUE_FILTER) -> HRESULT #cpp_method #foreign;
    PopStorageFilter : (this: *ID3D12InfoQueue) -> void #cpp_method #foreign;
    GetStorageFilterStackSize : (this: *ID3D12InfoQueue) -> u32 #cpp_method #foreign;
    AddRetrievalFilterEntries : (this: *ID3D12InfoQueue, pFilter: *D3D12_INFO_QUEUE_FILTER) -> HRESULT #cpp_method #foreign;
    GetRetrievalFilter : (this: *ID3D12InfoQueue, pFilter: *D3D12_INFO_QUEUE_FILTER, pFilterByteLength: *SIZE_T) -> HRESULT #cpp_method #foreign;
    ClearRetrievalFilter : (this: *ID3D12InfoQueue) -> void #cpp_method #foreign;
    PushEmptyRetrievalFilter : (this: *ID3D12InfoQueue) -> HRESULT #cpp_method #foreign;
    PushCopyOfRetrievalFilter : (this: *ID3D12InfoQueue) -> HRESULT #cpp_method #foreign;
    PushRetrievalFilter : (this: *ID3D12InfoQueue, pFilter: *D3D12_INFO_QUEUE_FILTER) -> HRESULT #cpp_method #foreign;
    PopRetrievalFilter : (this: *ID3D12InfoQueue) -> void #cpp_method #foreign;
    GetRetrievalFilterStackSize : (this: *ID3D12InfoQueue) -> u32 #cpp_method #foreign;
    AddMessage : (this: *ID3D12InfoQueue, Category: D3D12_MESSAGE_CATEGORY, Severity: D3D12_MESSAGE_SEVERITY, ID: D3D12_MESSAGE_ID, pDescription: LPCSTR) -> HRESULT #cpp_method #foreign;
    AddApplicationMessage : (this: *ID3D12InfoQueue, Severity: D3D12_MESSAGE_SEVERITY, pDescription: LPCSTR) -> HRESULT #cpp_method #foreign;
    SetBreakOnCategory : (this: *ID3D12InfoQueue, Category: D3D12_MESSAGE_CATEGORY, bEnable: BOOL) -> HRESULT #cpp_method #foreign;
    SetBreakOnSeverity : (this: *ID3D12InfoQueue, Severity: D3D12_MESSAGE_SEVERITY, bEnable: BOOL) -> HRESULT #cpp_method #foreign;
    SetBreakOnID : (this: *ID3D12InfoQueue, ID: D3D12_MESSAGE_ID, bEnable: BOOL) -> HRESULT #cpp_method #foreign;
    GetBreakOnCategory : (this: *ID3D12InfoQueue, Category: D3D12_MESSAGE_CATEGORY) -> BOOL #cpp_method #foreign;
    GetBreakOnSeverity : (this: *ID3D12InfoQueue, Severity: D3D12_MESSAGE_SEVERITY) -> BOOL #cpp_method #foreign;
    GetBreakOnID : (this: *ID3D12InfoQueue, ID: D3D12_MESSAGE_ID) -> BOOL #cpp_method #foreign;
    SetMuteDebugOutput : (this: *ID3D12InfoQueue, bMute: BOOL) -> void #cpp_method #foreign;
    GetMuteDebugOutput : (this: *ID3D12InfoQueue) -> BOOL #cpp_method #foreign;
}

IID_ID3D12Debug         :: GUID.{0x344488b7,0x6846,0x474b, u8.[0xb9,0x89,0xf0,0x27,0x44,0x82,0x45,0xe0] };
IID_ID3D12Debug1        :: GUID.{0xaffaa4ca,0x63fe,0x4d8e, u8.[0xb8,0xad,0x15,0x90,0x00,0xaf,0x43,0x04] };
IID_ID3D12Debug2        :: GUID.{0x93a665c4,0xa3b2,0x4e5d, u8.[0xb6,0x92,0xa2,0x6a,0xe1,0x4e,0x33,0x74] };
IID_ID3D12Debug3        :: GUID.{0x5cf4e58f,0xf671,0x4ff1, u8.[0xa5,0x42,0x36,0x86,0xe3,0xd1,0x53,0xd1] };
IID_ID3D12DebugDevice1  :: GUID.{0xa9b71770,0xd099,0x4a65, u8.[0xa6,0x98,0x3d,0xee,0x10,0x02,0x0f,0x88] };
IID_ID3D12DebugDevice   :: GUID.{0x3febd6dd,0x4973,0x4787, u8.[0x81,0x94,0xe4,0x5f,0x9e,0x28,0x92,0x3e] };
IID_ID3D12DebugDevice2  :: GUID.{0x60eccbc1,0x378d,0x4df1, u8.[0x89,0x4c,0xf8,0xac,0x5c,0xe4,0xd7,0xdd] };
IID_ID3D12DebugCommandQueue :: GUID.{0x09e0bf36,0x54ac,0x484f, u8.[0x88,0x47,0x4b,0xae,0xea,0xb6,0x05,0x3a] };
IID_ID3D12DebugCommandList1 :: GUID.{0x102ca951,0x311b,0x4b01, u8.[0xb1,0x1f,0xec,0xb8,0x3e,0x06,0x1b,0x37] };
IID_ID3D12DebugCommandList  :: GUID.{0x09e0bf36,0x54ac,0x484f, u8.[0x88,0x47,0x4b,0xae,0xea,0xb6,0x05,0x3f] };
IID_ID3D12DebugCommandList2 :: GUID.{0xaeb575cf,0x4e06,0x48be, u8.[0xba,0x3b,0xc4,0x50,0xfc,0x96,0x65,0x2e] };
IID_ID3D12SharingContract   :: GUID.{0x0adf7d52,0x929c,0x4e61, u8.[0xad,0xdb,0xff,0xed,0x30,0xde,0x66,0xef] };
IID_ID3D12InfoQueue         :: GUID.{0x0742a90b,0xc387,0x483f, u8.[0xb9,0x46,0x30,0xa7,0xe4,0xe6,0x14,0x58] };

// Extra
D3D12_SIMULTANEOUS_RENDER_TARGET_COUNT  :u32: 8;
D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES :u32: 0xffffffff;

#scope_file 
#import "Windows";
#import "sk_dxgi";
d3d12 :: #foreign_system_library "d3d12";